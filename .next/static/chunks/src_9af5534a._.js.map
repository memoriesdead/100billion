{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Separator = React.forwardRef<\r\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\r\n>(\r\n  (\r\n    { className, orientation = \"horizontal\", decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <SeparatorPrimitive.Root\r\n      ref={ref}\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        \"shrink-0 bg-border\",\r\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nSeparator.displayName = SeparatorPrimitive.Root.displayName\r\n\r\nexport { Separator }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Avatar = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAvatar.displayName = AvatarPrimitive.Root.displayName\r\n\r\nconst AvatarImage = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Image>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Image\r\n    ref={ref}\r\n    className={cn(\"aspect-square h-full w-full\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\r\n\r\nconst AvatarFallback = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Fallback\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\r\n\r\nexport { Avatar, AvatarImage, AvatarFallback }\r\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;AAGb,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,qKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/FollowingList.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { supabase } from '@/lib/supabaseClient'; // Assuming supabase client is exported from here\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"; // Using Shadcn Avatar\r\n\r\n// Define the type for a followed user profile (subset of Profiles table)\r\ntype FollowedProfile = {\r\n  id: string;\r\n  username: string | null;\r\n  profile_picture_url: string | null;\r\n};\r\n\r\nexport function FollowingList() {\r\n  const { user } = useAuth();\r\n  const [followingProfiles, setFollowingProfiles] = useState<FollowedProfile[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchFollowing = async () => {\r\n      if (!user) {\r\n        setLoading(false);\r\n        setFollowingProfiles([]); // Clear profiles if user logs out\r\n        return;\r\n      }\r\n\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        // Fetch relationships where the current user is the follower\r\n        // Join with profiles table to get followed user details\r\n        const { data, error: fetchError } = await supabase\r\n          .from('relationships')\r\n          // Hint the join using the correct foreign key name\r\n          .select(`\r\n            followed_uid,\r\n            profiles:profiles!relationships_followed_uid_fkey (\r\n              id,\r\n              username,\r\n              profile_picture_url\r\n            )\r\n          `)\r\n          .eq('follower_uid', user.id);\r\n\r\n        if (fetchError) {\r\n          throw fetchError;\r\n        }\r\n\r\n        // Type assertion for the expected data structure after hinting\r\n        const typedData = data as {\r\n          followed_uid: string;\r\n          profiles: FollowedProfile | null; // profiles should now match FollowedProfile or be null\r\n        }[] | null;\r\n\r\n\r\n        // Extract profile data safely\r\n        const profiles: FollowedProfile[] = typedData\r\n          ? typedData\r\n              .map(rel => rel.profiles) // Extract the profiles object\r\n              .filter((profile): profile is FollowedProfile => // Filter out nulls and ensure type\r\n                profile !== null &&\r\n                typeof profile === 'object' &&\r\n                'id' in profile &&\r\n                'username' in profile && // Check for username existence\r\n                'profile_picture_url' in profile // Check for profile picture URL existence\r\n              )\r\n          : []; // Handle case where data is null\r\n\r\n        setFollowingProfiles(profiles);\r\n\r\n      } catch (err: unknown) {\r\n        const message = err instanceof Error ? err.message : String(err);\r\n        console.error(\"Error fetching following list:\", err);\r\n        setError(\"Failed to load following list.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFollowing();\r\n  }, [user]); // Re-run effect when user changes\r\n\r\n  if (!user) {\r\n    // Optionally show a login prompt or nothing\r\n    return null; // Don't show the section if not logged in\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"px-4 py-2 text-sm text-muted-foreground\">Loading following...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"px-4 py-2 text-sm text-destructive\">{error}</div>;\r\n  }\r\n\r\n  if (followingProfiles.length === 0) {\r\n    return <div className=\"px-4 py-2 text-sm text-muted-foreground\">Not following anyone yet.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      {followingProfiles.map((profile) => (\r\n        <Link\r\n          key={profile.id}\r\n          href={`/profile/${profile.username || profile.id}`} // Link to username profile if available\r\n          className=\"flex items-center gap-3 px-4 py-2 rounded-md transition-colors w-full text-foreground/80 hover:text-foreground hover:bg-secondary/50\"\r\n        >\r\n          <Avatar className=\"h-8 w-8\">\r\n            <AvatarImage src={profile.profile_picture_url ?? undefined} alt={profile.username ?? 'User'} />\r\n            <AvatarFallback>{profile.username?.charAt(0).toUpperCase() ?? 'U'}</AvatarFallback>\r\n          </Avatar>\r\n          <span className=\"text-sm font-medium truncate\">{profile.username ?? 'Unnamed User'}</span>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA,gOAAiD,iDAAiD;AAClG,yOAA8E,sBAAsB;;;AAPpG;;;;;;AAgBO,SAAS;;IACd,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IACvB,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB,EAAE;IAChF,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM;0DAAiB;oBACrB,IAAI,CAAC,MAAM;wBACT,WAAW;wBACX,qBAAqB,EAAE,GAAG,kCAAkC;wBAC5D;oBACF;oBAEA,WAAW;oBACX,SAAS;oBAET,IAAI;wBACF,6DAA6D;wBAC7D,wDAAwD;wBACxD,MAAM,EAAE,IAAI,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM,+HAAA,CAAA,WAAQ,CAC/C,IAAI,CAAC,gBACN,mDAAmD;yBAClD,MAAM,CAAC,CAAC;;;;;;;UAOT,CAAC,EACA,EAAE,CAAC,gBAAgB,KAAK,EAAE;wBAE7B,IAAI,YAAY;4BACd,MAAM;wBACR;wBAEA,+DAA+D;wBAC/D,MAAM,YAAY;wBAMlB,8BAA8B;wBAC9B,MAAM,WAA8B,YAChC,UACG,GAAG;sEAAC,CAAA,MAAO,IAAI,QAAQ;qEAAE,8BAA8B;yBACvD,MAAM;sEAAC,CAAC,UACP,YAAY,QACZ,OAAO,YAAY,YACnB,QAAQ,WACR,cAAc,WAAW,+BAA+B;gCACxD,yBAAyB,QAAQ,0CAA0C;uEAE/E,EAAE,EAAE,iCAAiC;wBAEzC,qBAAqB;oBAEvB,EAAE,OAAO,KAAc;wBACrB,MAAM,UAAU,eAAe,QAAQ,IAAI,OAAO,GAAG,OAAO;wBAC5D,QAAQ,KAAK,CAAC,kCAAkC;wBAChD,SAAS;oBACX,SAAU;wBACR,WAAW;oBACb;gBACF;;YAEA;QACF;kCAAG;QAAC;KAAK,GAAG,kCAAkC;IAE9C,IAAI,CAAC,MAAM;QACT,4CAA4C;QAC5C,OAAO,MAAM,0CAA0C;IACzD;IAEA,IAAI,SAAS;QACX,qBAAO,6LAAC;YAAI,WAAU;sBAA0C;;;;;;IAClE;IAEA,IAAI,OAAO;QACT,qBAAO,6LAAC;YAAI,WAAU;sBAAsC;;;;;;IAC9D;IAEA,IAAI,kBAAkB,MAAM,KAAK,GAAG;QAClC,qBAAO,6LAAC;YAAI,WAAU;sBAA0C;;;;;;IAClE;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,kBAAkB,GAAG,CAAC,CAAC,wBACtB,6LAAC,+JAAA,CAAA,UAAI;gBAEH,MAAM,CAAC,SAAS,EAAE,QAAQ,QAAQ,IAAI,QAAQ,EAAE,EAAE;gBAClD,WAAU;;kCAEV,6LAAC,qIAAA,CAAA,SAAM;wBAAC,WAAU;;0CAChB,6LAAC,qIAAA,CAAA,cAAW;gCAAC,KAAK,QAAQ,mBAAmB,IAAI;gCAAW,KAAK,QAAQ,QAAQ,IAAI;;;;;;0CACrF,6LAAC,qIAAA,CAAA,iBAAc;0CAAE,QAAQ,QAAQ,EAAE,OAAO,GAAG,iBAAiB;;;;;;;;;;;;kCAEhE,6LAAC;wBAAK,WAAU;kCAAgC,QAAQ,QAAQ,IAAI;;;;;;;eAR/D,QAAQ,EAAE;;;;;;;;;;AAazB;GAzGgB;;QACG,iIAAA,CAAA,UAAO;;;KADV","debugId":null}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/Sidebar.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useAuth } from \"@/context/AuthContext\"; // Import useAuth\r\nimport { FollowingList } from \"./FollowingList\"; // Import the new component\r\n// Removed Input and other search-related imports\r\nimport { FaHome, FaCompass, FaUser, FaVideo, FaTv, FaEnvelope, FaSearch } from \"react-icons/fa\";\r\nimport { IoMdPeople } from \"react-icons/io\";\r\n\r\n// --- Sidebar Props ---\r\ninterface SidebarProps {\r\n  // Callback to toggle the search panel visibility\r\n  toggleSearchPanel: () => void;\r\n  // Callback to deactivate search mode when navigating\r\n  deactivateSearch: () => void;\r\n}\r\n\r\nexport function Sidebar({ toggleSearchPanel, deactivateSearch }: SidebarProps) {\r\n  const { user } = useAuth(); // Get logged-in user state\r\n\r\n  // Determine the correct profile link\r\n  // Link to /profile/[username] if available, otherwise link to the generic /profile page\r\n  const profileHref = (user && user.user_metadata?.username)\r\n    ? `/profile/${user.user_metadata.username}`\r\n    : '/profile'; // Default to /profile if not logged in or no username\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen w-[240px] border-r border-border pb-4\">\r\n      {/* Logo */}\r\n      <div className=\"p-4 flex-shrink-0\">\r\n        <Link href=\"/\" className=\"flex items-center\" onClick={deactivateSearch}> {/* Deactivate search on logo click */}\r\n\r\n          <span className=\"text-xl font-bold\">SubScroll</span>\r\n        </Link>\r\n      </div>\r\n\r\n      {/* Removed Search Input Area */}\r\n\r\n      {/* Navigation Links Area */}\r\n      <ScrollArea className=\"flex-1 px-4\">\r\n        <div className=\"space-y-2 py-2\">\r\n          {/* Search Toggle Button */}\r\n          <button\r\n            onClick={toggleSearchPanel}\r\n            className={`flex items-center gap-3 px-4 py-4 rounded-md transition-colors w-full text-foreground/80 hover:text-foreground hover:bg-secondary/50`}\r\n          >\r\n            <FaSearch size={20} />\r\n            <span className=\"text-base\">Search</span>\r\n          </button>\r\n          {/* Standard Nav Items */}\r\n          <NavItem href=\"/\" icon={<FaHome size={20} />} label=\"For You\" onClick={deactivateSearch} />\r\n          <NavItem href=\"/explore\" icon={<FaCompass size={20} />} label=\"Explore\" onClick={deactivateSearch} />\r\n          <NavItem href=\"/following\" icon={<IoMdPeople size={20} />} label=\"Following\" onClick={deactivateSearch} />\r\n          <NavItem href=\"/messages\" icon={<FaEnvelope size={20} />} label=\"Messages\" onClick={deactivateSearch} /> {/* Also deactivate search */}\r\n          <NavItem href=\"/upload\" icon={<FaVideo size={20} />} label=\"Upload\" onClick={deactivateSearch} /> {/* Also deactivate search */}\r\n          {/* Use dynamic profileHref */}\r\n          <NavItem href={profileHref} icon={<FaUser size={20} />} label=\"Profile\" onClick={deactivateSearch} />\r\n        </div>\r\n\r\n        <Separator className=\"my-4\" />\r\n\r\n        {/* Following Users List */}\r\n        <NavGroup title=\"Following\">\r\n          <FollowingList />\r\n        </NavGroup>\r\n\r\n        {/* Removed login prompt and footer links */}\r\n      </ScrollArea>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface NavItemProps {\r\n  href: string;\r\n  icon: React.ReactNode;\r\n  label: string;\r\n  active?: boolean;\r\n  onClick?: () => void; // Added optional onClick prop\r\n}\r\n\r\nfunction NavItem({ href, icon, label, active, onClick }: NavItemProps) { // Added onClick to destructuring\r\n  // Make link full width, increase vertical padding, adjust horizontal padding\r\n  return (\r\n    <Link href={href} onClick={onClick} className={`flex items-center gap-3 px-4 py-4 rounded-md transition-colors w-full ${active ? 'font-semibold bg-secondary' : 'text-foreground/80 hover:text-foreground hover:bg-secondary/50'}`}>\r\n      {icon}\r\n      <span className=\"text-base\">{label}</span>\r\n    </Link>\r\n  );\r\n}\r\n\r\ninterface NavGroupProps {\r\n  title: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nfunction NavGroup({ title, children }: NavGroupProps) {\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <h4 className=\"text-xs uppercase tracking-wider text-muted-foreground\">{title}</h4>\r\n      <div className=\"space-y-1\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface NavLinkProps {\r\n  href: string;\r\n  children: React.ReactNode;\r\n}\r\n\r\nfunction NavLink({ href, children }: NavLinkProps) {\r\n  return (\r\n    <Link href={href} className=\"block text-xs text-muted-foreground hover:underline\">\r\n      {children}\r\n    </Link>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 689, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,ySACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 756, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/Header.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Link from 'next/link';\r\n// Removed Input import\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { FaEllipsisV, FaGoogle } from \"react-icons/fa\"; // Removed FaSearch\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { useRouter } from 'next/navigation'; // Keep for potential future use? Or remove if unused.\r\nimport type React from 'react';\r\n\r\n// Removed HeaderProps interface\r\n\r\nexport function Header() { // Removed props\r\n  const { user, loading, signInWithGoogle, signOut } = useAuth();\r\n  const router = useRouter();\r\n\r\n  // Removed all search-related state and handlers\r\n\r\n  // Auth handlers remain the same\r\n  const handleSignIn = async () => {\r\n    await signInWithGoogle();\r\n  };\r\n\r\n  const handleSignOut = async () => {\r\n    await signOut();\r\n  };\r\n\r\n  return (\r\n    // Header is simpler now, just contains actions/auth\r\n    <header className=\"fixed top-0 right-0 left-[240px] h-16 flex items-center justify-end px-6 bg-background/95 backdrop-blur-sm z-10\"> {/* Changed justify-between to justify-end */}\r\n\r\n      {/* Removed Search Input Area */}\r\n\r\n      {/* Right side elements (Upload, Auth) */}\r\n      <div className=\"flex items-center gap-3\">\r\n        <Link href=\"/upload\">\r\n          <Button variant=\"outline\" className=\"border-primary text-primary hover:bg-primary/10 font-semibold\">\r\n            Upload\r\n          </Button>\r\n        </Link>\r\n\r\n        {loading ? (\r\n          <Button disabled>Loading...</Button>\r\n        ) : user ? (\r\n          <>\r\n             <Link href={`/profile/${user.user_metadata?.username || user.id}`} passHref>\r\n                <Avatar className=\"h-8 w-8 cursor-pointer\">\r\n                  <AvatarImage\r\n                    src={user.user_metadata?.avatar_url || undefined}\r\n                    alt={user.user_metadata?.full_name || user.email || 'User'}\r\n                  />\r\n                  <AvatarFallback>\r\n                    {user.user_metadata?.username?.charAt(0)?.toUpperCase() || user.email?.charAt(0)?.toUpperCase() || 'U'}\r\n                  </AvatarFallback>\r\n                </Avatar>\r\n             </Link>\r\n            <Button onClick={handleSignOut} variant=\"outline\">\r\n              Log out\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <Button onClick={handleSignIn} className=\"tiktok-button px-4 py-2 flex items-center gap-2\">\r\n            {/* Wrap content in a span to prevent potential nesting issues */}\r\n            <span><FaGoogle /> Log in</span>\r\n          </Button>\r\n        )}\r\n\r\n        <Button variant=\"ghost\" size=\"icon\">\r\n          <FaEllipsisV />\r\n        </Button>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA,uBAAuB;AACvB;AACA,8PAAwD,mBAAmB;AAC3E;AACA;AACA,4OAA6C,sDAAsD;;;AARnG;;;;;;;AAaO,SAAS;;IACd,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IAC3D,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,gDAAgD;IAEhD,gCAAgC;IAChC,MAAM,eAAe;QACnB,MAAM;IACR;IAEA,MAAM,gBAAgB;QACpB,MAAM;IACR;IAEA,OACE,oDAAoD;kBACpD,6LAAC;QAAO,WAAU;;YAAkH;0BAKlI,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;kCACT,cAAA,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,WAAU;sCAAgE;;;;;;;;;;;oBAKrG,wBACC,6LAAC,qIAAA,CAAA,SAAM;wBAAC,QAAQ;kCAAC;;;;;+BACf,qBACF;;0CACG,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAM,CAAC,SAAS,EAAE,KAAK,aAAa,EAAE,YAAY,KAAK,EAAE,EAAE;gCAAE,QAAQ;0CACxE,cAAA,6LAAC,qIAAA,CAAA,SAAM;oCAAC,WAAU;;sDAChB,6LAAC,qIAAA,CAAA,cAAW;4CACV,KAAK,KAAK,aAAa,EAAE,cAAc;4CACvC,KAAK,KAAK,aAAa,EAAE,aAAa,KAAK,KAAK,IAAI;;;;;;sDAEtD,6LAAC,qIAAA,CAAA,iBAAc;sDACZ,KAAK,aAAa,EAAE,UAAU,OAAO,IAAI,iBAAiB,KAAK,KAAK,EAAE,OAAO,IAAI,iBAAiB;;;;;;;;;;;;;;;;;0CAI3G,6LAAC,qIAAA,CAAA,SAAM;gCAAC,SAAS;gCAAe,SAAQ;0CAAU;;;;;;;qDAKpD,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAc,WAAU;kCAEvC,cAAA,6LAAC;;8CAAK,6LAAC,iJAAA,CAAA,WAAQ;;;;;gCAAG;;;;;;;;;;;;kCAItB,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;kCAC3B,cAAA,6LAAC,iJAAA,CAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;AAKtB;GA7DgB;;QACuC,iIAAA,CAAA,UAAO;QAC7C,qIAAA,CAAA,YAAS;;;KAFV","debugId":null}},
    {"offset": {"line": 929, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2WACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 965, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/SearchPanel.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { useRouter } from 'next/navigation';\r\nimport Link from 'next/link';\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { FaSearch, FaTimes } from \"react-icons/fa\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport type { Tables } from '@/lib/database.types';\r\nimport { debounce } from 'lodash';\r\n\r\n// --- Suggestion Types ---\r\ntype ProfileSuggestion = Pick<Tables<'profiles'>, 'id' | 'username' | 'name' | 'profile_picture_url'>;\r\ntype TextSuggestion = string; // Could be recent searches, popular terms etc.\r\ntype Suggestion =\r\n | { type: 'profile'; data: ProfileSuggestion }\r\n | { type: 'text'; data: TextSuggestion };\r\n\r\n// --- Component Props ---\r\ninterface SearchPanelProps {\r\n  isVisible: boolean; // To control internal logic if needed, though parent controls rendering\r\n  setActiveSearchQuery: (query: string) => void; // Update parent's query for main content\r\n  setIsSearchActive: (isActive: boolean) => void; // Signal parent if search is active\r\n  closePanel: () => void; // Function to call when closing the panel\r\n}\r\n\r\nexport function SearchPanel({\r\n  isVisible, // isVisible might not be strictly needed if parent handles rendering\r\n  setActiveSearchQuery,\r\n  setIsSearchActive,\r\n  closePanel\r\n}: SearchPanelProps) {\r\n  const router = useRouter();\r\n  const [localQuery, setLocalQuery] = useState(''); // Internal state for the input\r\n  const [suggestions, setSuggestions] = useState<Suggestion[]>([]);\r\n  const [isSearchingSuggestions, setIsSearchingSuggestions] = useState(false);\r\n  const [showSuggestions, setShowSuggestions] = useState(true); // Keep suggestions visible while panel is open\r\n  const panelRef = useRef<HTMLDivElement>(null); // Ref for the panel itself\r\n\r\n  // --- Debounced Fetching for Suggestions ---\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const debouncedFetchSuggestions = useCallback(\r\n    debounce(async (query: string) => {\r\n      if (query.trim().length < 1) {\r\n        // TODO: Fetch/show recent searches or default suggestions\r\n        setSuggestions([\r\n            { type: 'text', data: 'metal sonic edit' },\r\n            { type: 'text', data: 'meta quest 3' },\r\n        ]);\r\n        setIsSearchingSuggestions(false);\r\n        return;\r\n      }\r\n      setIsSearchingSuggestions(true);\r\n      let combinedSuggestions: Suggestion[] = [];\r\n\r\n      try {\r\n        // Fetch profiles\r\n        const { data: profiles, error: profileError } = await supabase\r\n          .from('profiles')\r\n          .select('id, username, name, profile_picture_url')\r\n          .or(`username.ilike.%${query}%,name.ilike.%${query}%`)\r\n          .limit(4);\r\n\r\n        if (profileError) console.error(\"Profile suggestion error:\", profileError);\r\n        else if (profiles) {\r\n          combinedSuggestions = combinedSuggestions.concat(\r\n            profiles.map(p => ({ type: 'profile' as const, data: p as ProfileSuggestion }))\r\n          );\r\n        }\r\n\r\n        // TODO: Fetch dynamic text suggestions\r\n        const staticTextSuggestions: TextSuggestion[] = [\r\n            \"metal sonic edit\", \"metal gear solid\", \"meta quest 3\", \"metallica\",\r\n        ].filter(s => s.toLowerCase().includes(query.toLowerCase())).slice(0, 6);\r\n\r\n        combinedSuggestions = combinedSuggestions.concat(\r\n            staticTextSuggestions.map(s => ({ type: 'text' as const, data: s }))\r\n        );\r\n\r\n        // Sort suggestions (e.g., text first, then profiles)\r\n        combinedSuggestions.sort((a, b) => {\r\n            if (a.type === 'text' && b.type === 'profile') return -1;\r\n            if (a.type === 'profile' && b.type === 'text') return 1;\r\n            return 0;\r\n        });\r\n\r\n        setSuggestions(combinedSuggestions);\r\n\r\n      } catch (err) {\r\n        console.error(\"Error fetching suggestions:\", err);\r\n        setSuggestions([]);\r\n      } finally {\r\n       setIsSearchingSuggestions(false);\r\n       }\r\n     }, 300),\r\n     [] // Debounce function is stable, empty dependency array is correct.\r\n   );\r\n\r\n  // --- Effects ---\r\n  // Fetch suggestions when query changes\r\n  useEffect(() => {\r\n     debouncedFetchSuggestions(localQuery);\r\n     // Cleanup debounce on unmount or query change\r\n     return () => debouncedFetchSuggestions.cancel();\r\n  }, [localQuery, debouncedFetchSuggestions]); // Keep debouncedFetchSuggestions here\r\n\r\n  // --- Handlers ---\r\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const query = event.target.value;\r\n    setLocalQuery(query);\r\n    setActiveSearchQuery(query); // Update parent state for main content results\r\n    setIsSearchActive(true); // Ensure main content shows results\r\n  };\r\n\r\n  // Handle submitting search (e.g., clicking \"View all results\")\r\n  const handleSearchSubmit = (query: string) => {\r\n    const trimmedQuery = query.trim();\r\n    if (trimmedQuery) {\r\n      setLocalQuery(trimmedQuery);\r\n      setActiveSearchQuery(trimmedQuery);\r\n      setIsSearchActive(true);\r\n      // Optionally close panel on submit? Or keep it open? Let's keep it open for now.\r\n      // closePanel();\r\n      // Navigation happens implicitly by MainLayout rendering SearchResultsDisplay\r\n    }\r\n  };\r\n\r\n   const handleSuggestionClick = (suggestion: string) => {\r\n     handleSearchSubmit(suggestion);\r\n  };\r\n\r\n  const handleProfileClick = () => {\r\n     closePanel(); // Close panel when navigating to profile\r\n  };\r\n\r\n  const handleClearInput = () => {\r\n     setLocalQuery('');\r\n     setActiveSearchQuery(''); // Clear parent query\r\n     setSuggestions([]); // Clear suggestions\r\n     debouncedFetchSuggestions.cancel();\r\n     // Optionally set search inactive?\r\n     // setIsSearchActive(false);\r\n  };\r\n\r\n  // --- Render ---\r\n  return (\r\n    // Panel styling - fixed position next to sidebar\r\n    <div\r\n      ref={panelRef}\r\n      className=\"fixed left-[240px] top-0 w-[350px] h-full bg-background border-r border-border z-20 flex flex-col shadow-lg\" // Example width, adjust as needed\r\n    >\r\n      {/* Panel Header */}\r\n      <div className=\"flex items-center justify-between p-4 border-b border-border flex-shrink-0\">\r\n        <h2 className=\"text-lg font-semibold text-foreground\">Search</h2>\r\n        <Button variant=\"ghost\" size=\"icon\" onClick={closePanel} aria-label=\"Close search\">\r\n          <FaTimes className=\"h-5 w-5 text-muted-foreground\" />\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Panel Search Input */}\r\n      <div className=\"p-4 flex-shrink-0\">\r\n        <div className=\"relative\">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Search accounts and videos\"\r\n            value={localQuery}\r\n            onChange={handleInputChange}\r\n            onKeyDown={(e) => e.key === 'Enter' && handleSearchSubmit(localQuery)}\r\n            className=\"bg-secondary border-0 pl-10 pr-10 h-10 rounded-md text-sm focus-visible:ring-1 focus-visible:ring-primary\"\r\n            autoFocus\r\n          />\r\n          <div className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-muted-foreground pointer-events-none\">\r\n            <FaSearch size={16} />\r\n          </div>\r\n          {localQuery && (\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"ghost\"\r\n              size=\"icon\"\r\n              className=\"absolute inset-y-0 right-0 flex items-center pr-3 text-muted-foreground hover:text-foreground h-10 w-10\"\r\n              onClick={handleClearInput}\r\n              aria-label=\"Clear search\"\r\n            >\r\n              <FaTimes className=\"h-4 w-4\" />\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Suggestions Area */}\r\n      <div className=\"flex-grow overflow-y-auto px-4 pb-4\">\r\n        {isSearchingSuggestions && suggestions.length === 0 && (\r\n          <p className=\"text-muted-foreground text-center p-4 text-sm\">Searching...</p>\r\n        )}\r\n        {!isSearchingSuggestions && suggestions.length === 0 && localQuery.trim().length > 0 && (\r\n           <p className=\"text-muted-foreground text-center p-4 text-sm\">No results found for \"{localQuery}\"</p>\r\n        )}\r\n        {/* TODO: Add Recent Searches section here */}\r\n        {suggestions.length > 0 && (\r\n          <ul className=\"space-y-1\">\r\n            {/* Text Suggestions */}\r\n            {suggestions.filter(s => s.type === 'text').map((s, i) => (\r\n               <li key={`text-${i}`}>\r\n                 <button onClick={() => handleSuggestionClick(s.data as string)} className=\"flex items-center gap-3 w-full text-left p-2 rounded hover:bg-secondary transition-colors\">\r\n                   <FaSearch className=\"w-4 h-4 text-muted-foreground flex-shrink-0\" />\r\n                   <span className=\"text-sm text-foreground truncate\">{s.data as string}</span>\r\n                 </button>\r\n               </li>\r\n            ))}\r\n            {/* Profile Suggestions */}\r\n            {suggestions.filter(s => s.type === 'profile').length > 0 && (\r\n               <li className=\"px-2 pt-3 pb-1 text-xs font-semibold text-muted-foreground uppercase\">Accounts</li>\r\n            )}\r\n            {suggestions.filter(s => s.type === 'profile').map((s) => {\r\n               const profile = s.data as ProfileSuggestion;\r\n               return (\r\n                 <li key={profile.id}>\r\n                   <Link href={`/profile/${profile.username}`} onClick={handleProfileClick} className=\"flex items-center gap-3 p-2 rounded hover:bg-secondary transition-colors\">\r\n                     <Avatar className=\"h-8 w-8\">\r\n                       <AvatarImage src={profile.profile_picture_url || undefined} alt={profile.username || 'User'} />\r\n                       <AvatarFallback className=\"text-xs\">{profile.username?.charAt(0)?.toUpperCase() || 'U'}</AvatarFallback>\r\n                     </Avatar>\r\n                     <div>\r\n                       <p className=\"font-medium text-sm text-foreground\">{profile.username}</p>\r\n                       <p className=\"text-xs text-muted-foreground\">{profile.name}</p>\r\n                     </div>\r\n                   </Link>\r\n                 </li>\r\n               );\r\n            })}\r\n          </ul>\r\n        )}\r\n        {/* \"View all results\" button */}\r\n        {localQuery.trim() && !isSearchingSuggestions && (\r\n           <div className=\"mt-4 pt-4 border-t border-border\">\r\n               <button\r\n                  onClick={() => handleSearchSubmit(localQuery)}\r\n                  className=\"flex items-center gap-3 w-full text-left p-2 rounded hover:bg-secondary transition-colors text-primary\"\r\n               >\r\n                  <FaSearch className=\"w-4 h-4\" />\r\n                  <span className=\"text-sm font-medium\">View all results for \"{localQuery}\"</span>\r\n               </button>\r\n           </div>\r\n        )}\r\n         {!localQuery.trim() && !isSearchingSuggestions && suggestions.length === 0 && (\r\n             <p className=\"text-muted-foreground text-center p-4 text-sm\">Search for accounts or videos.</p>\r\n         )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1428, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/PostInteractionButtons.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useCallback, useContext } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation'; // Keep useRouter import\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport { AuthContext } from '@/context/AuthContext';\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\n// Use Font Awesome icons for closer match to original screenshot\r\nimport { FaHeart, FaCommentDots, FaShare } from \"react-icons/fa\";\r\nimport { Lock, Unlock, ShoppingCart, Loader2 } from 'lucide-react'; // Keep Lock/Unlock for internal logic if needed elsewhere, but remove from UI stack\r\nimport { toast } from 'sonner';\r\nimport { Button } from '@/components/ui/button';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Eye } from 'lucide-react'; // Import Eye icon for views\r\n\r\n// Initialize Stripe outside the component\r\nconst stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY!);\r\n\r\ninterface PostInteractionButtonsProps {\r\n  postId: string;\r\n  userId: string; // ID of the post owner\r\n  // onProfileClick prop removed\r\n  username: string;\r\n  profilePictureUrl?: string;\r\n  initialLikes: number;\r\n  initialIsLiked: boolean;\r\n  commentsCount: string;\r\n  sharesCount: string;\r\n  viewsCount?: number | string; // Add optional viewsCount prop\r\n  initialIsPrivate: boolean;\r\n  isOwner: boolean;\r\n  videoCaption?: string;\r\n  postType: 'video' | 'image';\r\n  variant?: 'default' | 'compact'; // Add variant prop\r\n  is_for_sale: boolean;\r\n  price?: number | null;\r\n  currency?: string | null;\r\n  onLikeSuccess?: (newLikesCount: number) => void;\r\n}\r\n\r\n export function PostInteractionButtons({\r\n   postId,\r\n   userId,\r\n   username,\r\n   profilePictureUrl,\r\n   initialLikes,\r\n   initialIsLiked,\r\n   commentsCount,\r\n   sharesCount,\r\n   initialIsPrivate,\r\n   isOwner,\r\n   videoCaption,\r\n   postType,\r\n   is_for_sale,\r\n   price,\r\n   currency,\r\n   onLikeSuccess,\r\n   viewsCount, // Destructure viewsCount\r\n   variant = 'default', // Destructure variant, default to 'default'\r\n }: PostInteractionButtonsProps) {\r\n   const router = useRouter();\r\n   const { user: loggedInUser } = useContext(AuthContext);\r\n   const [isLiked, setIsLiked] = useState(initialIsLiked);\r\n   const [currentLikes, setCurrentLikes] = useState(initialLikes);\r\n   const [currentIsPrivate, setCurrentIsPrivate] = useState(initialIsPrivate);\r\n   const [isUpdatingPrivacy, setIsUpdatingPrivacy] = useState(false);\r\n   const [isCheckoutLoading, setIsCheckoutLoading] = useState(false);\r\n\r\n   // --- Like Handler ---\r\n   const handleLike = useCallback(async () => {\r\n     if (!loggedInUser) {\r\n       toast.info(\"Please log in to like posts.\");\r\n       return;\r\n     }\r\n     const originalLiked = isLiked;\r\n     const originalLikesCount = currentLikes;\r\n     const newLikedStatus = !isLiked;\r\n     const newLikesCount = newLikedStatus ? currentLikes + 1 : currentLikes - 1;\r\n\r\n     setIsLiked(newLikedStatus);\r\n     setCurrentLikes(newLikesCount);\r\n\r\n     try {\r\n       if (newLikedStatus) {\r\n         const { error } = await supabase.from('likes').insert({ user_id: loggedInUser.id, post_id: postId });\r\n         if (error) throw error;\r\n       } else {\r\n         const { error } = await supabase.from('likes').delete().match({ user_id: loggedInUser.id, post_id: postId });\r\n         if (error) throw error;\r\n       }\r\n       onLikeSuccess?.(newLikesCount);\r\n     } catch (error: unknown) {\r\n       const message = error instanceof Error ? error.message : String(error);\r\n       setIsLiked(originalLiked);\r\n       setCurrentLikes(originalLikesCount);\r\n       toast.error(\"Failed to update like status.\");\r\n       console.error('[InteractionButtons] Error updating like status:', message); // Use the extracted message\r\n     }\r\n   }, [loggedInUser, postId, isLiked, currentLikes, onLikeSuccess]);\r\n\r\n   // --- Share Handler ---\r\n   const handleShare = useCallback(async () => {\r\n     const shareData = {\r\n       title: `Check out this post by @${username}!`,\r\n       text: videoCaption || `Check out this post by @${username}!`,\r\n       url: postType === 'video'\r\n          ? `${window.location.origin}/video/${postId}`\r\n          : `${window.location.origin}/image/${postId}`,\r\n     };\r\n     try {\r\n       if (navigator.share) {\r\n         await navigator.share(shareData);\r\n       } else {\r\n         await navigator.clipboard.writeText(shareData.url);\r\n         toast.success(\"Link copied to clipboard!\");\r\n       }\r\n     } catch (error) {\r\n       console.error('Error sharing:', error);\r\n       if ((error as DOMException).name !== 'AbortError') {\r\n         toast.error(\"Could not share post.\");\r\n       }\r\n     }\r\n   }, [postId, username, videoCaption, postType]);\r\n\r\n   // --- Privacy Toggle Handler ---\r\n   const handleTogglePrivacy = useCallback(async () => {\r\n     if (!isOwner || isUpdatingPrivacy || !loggedInUser) {\r\n       if (!loggedInUser) toast.error(\"You must be logged in.\");\r\n       return;\r\n     }\r\n     setIsUpdatingPrivacy(true);\r\n     const originalIsPrivate = currentIsPrivate;\r\n     const newIsPrivate = !currentIsPrivate;\r\n     setCurrentIsPrivate(newIsPrivate); // Optimistic update\r\n\r\n     try {\r\n       const { error } = await supabase\r\n         .from('posts')\r\n         .update({ is_private: newIsPrivate })\r\n         .eq('id', postId)\r\n         .eq('user_id', loggedInUser.id);\r\n       if (error) throw error;\r\n       toast.success(`Post set to ${newIsPrivate ? 'Private' : 'Public'}`);\r\n     } catch (error: unknown) {\r\n       const message = error instanceof Error ? error.message : String(error);\r\n       setCurrentIsPrivate(originalIsPrivate); // Revert on error\r\n       toast.error(\"Failed to update privacy status.\");\r\n       console.error('Error updating privacy status:', message);\r\n     } finally {\r\n       setIsUpdatingPrivacy(false);\r\n     }\r\n   }, [isOwner, isUpdatingPrivacy, loggedInUser, postId, currentIsPrivate]);\r\n\r\n   // --- Purchase Handler ---\r\n   const handlePurchase = useCallback(async () => {\r\n     if (!loggedInUser) {\r\n       toast.info(\"Please log in to purchase items.\");\r\n       return;\r\n     }\r\n     if (!postId || !is_for_sale || !price || price <= 0) {\r\n       toast.error(\"This item cannot be purchased currently.\");\r\n       return;\r\n     }\r\n     setIsCheckoutLoading(true);\r\n     try {\r\n       const response = await fetch('/api/stripe/create-item-checkout-session', {\r\n         method: 'POST',\r\n         headers: { 'Content-Type': 'application/json' },\r\n         body: JSON.stringify({ postId }),\r\n       });\r\n       const sessionData = await response.json();\r\n       if (!response.ok) throw new Error(sessionData.error || 'Failed to create checkout session');\r\n       if (!sessionData.sessionId) throw new Error('Session ID not received from server');\r\n       const stripe = await stripePromise;\r\n       if (!stripe) throw new Error('Stripe.js failed to load.');\r\n       const { error: stripeError } = await stripe.redirectToCheckout({ sessionId: sessionData.sessionId });\r\n       if (stripeError) throw new Error(stripeError.message);\r\n     } catch (error) {\r\n       console.error('Purchase initiation error:', error);\r\n       toast.error(`Failed to initiate purchase: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n     } finally {\r\n       setIsCheckoutLoading(false);\r\n     }\r\n    }, [loggedInUser, postId, is_for_sale, price]);\r\n\r\n    const PrivacyIcon = currentIsPrivate ? Lock : Unlock;\r\n\r\n   // Determine container classes based on is_for_sale\r\n   const containerClasses = is_for_sale\r\n     ? \"absolute top-4 right-4 z-20 pointer-events-auto\" // Top-right for sale items\r\n     : \"absolute bottom-12 right-3 z-20 flex flex-col items-center space-y-1 pointer-events-auto\";\r\n\r\n   // Simplified rendering logic based on variant\r\n   if (variant === 'compact') {\r\n     // Render only views count if available\r\n     return (\r\n       <div className={containerClasses}>\r\n         {typeof viewsCount !== 'undefined' && (\r\n           <div className=\"flex flex-col items-center text-white\">\r\n             <div className=\"w-10 h-10 bg-black/40 rounded-full flex items-center justify-center mb-1\">\r\n               <Eye size={24} />\r\n             </div>\r\n             <span className=\"text-xs font-semibold\">{viewsCount}</span>\r\n           </div>\r\n         )}\r\n       </div>\r\n     );\r\n   }\r\n\r\n   // Default rendering (full buttons)\r\n   return (\r\n     <div className={containerClasses}>\r\n       {/* Profile Link */}\r\n       <Link\r\n         href={`/profile/${userId}`} // Link using the user's ID\r\n         onClick={(e) => {\r\n           e.stopPropagation(); // Prevent parent Link navigation\r\n         }}\r\n         className={`profile-link-area text-white cursor-pointer ${!is_for_sale && postType === 'video' ? 'mt-4' : ''} ${!is_for_sale ? 'mb-1' : ''} ${is_for_sale ? '' : 'flex flex-col items-center'}`}\r\n         aria-label={`View profile for ${username}`}\r\n       >\r\n         <Avatar className=\"w-10 h-10 border-2 border-white\">\r\n           <AvatarImage src={profilePictureUrl ?? ''} alt={`${username}'s profile picture`} />\r\n           <AvatarFallback>{username?.charAt(0).toUpperCase() ?? 'U'}</AvatarFallback>\r\n         </Avatar>\r\n       </Link>\r\n\r\n       {/* Like Button (Only render if not for sale) */}\r\n       {/* Like Button (Using FaHeart) */}\r\n       {!is_for_sale && (\r\n         <button onClick={handleLike} className=\"flex flex-col items-center text-white group/like\">\r\n           <div className={`w-10 h-10 bg-black/40 rounded-full flex items-center justify-center mb-1 transition-colors ${isLiked ? 'bg-red-500/80' : 'group-hover/like:bg-white/20'}`}>\r\n             <FaHeart size={24} className={`${isLiked ? 'text-red-500' : 'text-white'} transition-transform group-hover/like:scale-110`} /> {/* Use FaHeart */}\r\n           </div>\r\n           <span className=\"text-xs font-semibold\">{currentLikes}</span>\r\n         </button>\r\n       )}\r\n\r\n       {/* Comment Button */}\r\n       {!is_for_sale && (\r\n         <Link\r\n           href={postType === 'video' ? `/video/${postId}#comments` : `/image/${postId}#comments`}\r\n           className=\"flex flex-col items-center text-white\"\r\n           aria-label=\"View comments\"\r\n           onClick={(e) => e.stopPropagation()} // Keep stopPropagation here too\r\n         >\r\n           <div className=\"w-10 h-10 bg-black/40 rounded-full flex items-center justify-center mb-1\">\r\n             <FaCommentDots size={24} /> {/* Use FaCommentDots */}\r\n           </div>\r\n           <span className=\"text-xs font-semibold\">{commentsCount}</span>\r\n         </Link>\r\n       )}\r\n\r\n       {/* Share Button */}\r\n       {/* Share Button (Using FaShare) */}\r\n       {!is_for_sale && (\r\n         <button onClick={handleShare} className=\"flex flex-col items-center text-white group/share\">\r\n           <div className=\"w-10 h-10 bg-black/40 rounded-full flex items-center justify-center mb-1 transition-colors group-hover/share:bg-white/20\">\r\n             <FaShare size={22} className=\"transition-transform group-hover/share:scale-110\" /> {/* Use FaShare, slightly smaller */}\r\n           </div>\r\n           <span className=\"text-xs font-semibold\">{sharesCount}</span>\r\n         </button>\r\n       )}\r\n\r\n       {/* Privacy Status Display/Button REMOVED from UI stack */}\r\n\r\n\r\n       {/* Buy Button (Conditional - Now removed entirely for sale items based on feedback) */}\r\n       {/* {is_for_sale && price && price > 0 && !isOwner && (\r\n         <button\r\n           onClick={handlePurchase}\r\n           disabled={isCheckoutLoading || !loggedInUser}\r\n           className=\"flex flex-col items-center text-white group/buy mt-2\"\r\n           aria-label={`Purchase for ${(price / 100).toFixed(2)} ${currency?.toUpperCase() ?? 'USD'}`}\r\n         >\r\n           <div className={`w-10 h-10 bg-green-600/80 hover:bg-green-500/90 rounded-full flex items-center justify-center mb-1 transition-colors`}>\r\n             {isCheckoutLoading ? <Loader2 className=\"h-5 w-5 animate-spin\" /> : <ShoppingCart size={24} />}\r\n           </div>\r\n           <span className=\"text-xs font-semibold\">Buy (${(price / 100).toFixed(2)})</span>\r\n         </button>\r\n       )} */}\r\n     </div>\r\n   );\r\n }\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1839, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst badgeVariants = cva(\r\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}\r\n\r\nexport { Badge, badgeVariants }\r\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 1887, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/VerticalVideoPlayer.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useRef, useEffect, useState, useCallback, useContext } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport { AuthContext } from '@/context/AuthContext';\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { Play, Pause, Volume2, VolumeX, Lock, Loader2, ShoppingCart } from 'lucide-react';\r\nimport { PostInteractionButtons } from './PostInteractionButtons';\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { toast } from 'react-hot-toast';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\n// Initialize Stripe outside the component\r\nconst stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY!);\r\n\r\n// Define the props based on the data available\r\ninterface VerticalVideoPlayerProps {\r\n  id: string;\r\n  username: string;\r\n  verified?: boolean;\r\n  profilePictureUrl?: string;\r\n  caption: string | null;\r\n  videoSrc: string;\r\n  posterSrc?: string;\r\n  likes: string;\r\n  comments: string;\r\n  shares: string;\r\n  initialIsLiked?: boolean;\r\n  isPrivate?: boolean | null;\r\n  isOwner?: boolean;\r\n  userId: string;\r\n  is_for_sale: boolean;\r\n  price?: number | null;\r\n  currency?: string | null;\r\n  stripe_price_id?: string | null;\r\n  isLocked?: boolean;\r\n  showControls?: boolean; // Add new prop\r\n  isForYouPage?: boolean; // Add prop to indicate if on For You page\r\n  isActive?: boolean; // Add prop to control playback externally (e.g., from FYP)\r\n  disableClickToPlay?: boolean;\r\n  hideProgressBar?: boolean;\r\n  interactionVariant?: 'default' | 'compact'; // Add prop for interaction variant\r\n}\r\n\r\n// Helper function to format price\r\nconst formatPrice = (priceInCents: number, currency: string = 'usd') => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: currency.toUpperCase(),\r\n   }).format(priceInCents / 100);\r\n };\r\n\r\n// Helper function to format time (e.g., 0:05, 1:23)\r\nconst formatTime = (timeInSeconds: number): string => {\r\n  if (isNaN(timeInSeconds) || timeInSeconds < 0) {\r\n    return \"0:00\"; // Return default or error state\r\n  }\r\n  const minutes = Math.floor(timeInSeconds / 60);\r\n  const seconds = Math.floor(timeInSeconds % 60);\r\n  return `${minutes}:${seconds.toString().padStart(2, '0')}`;\r\n};\r\n\r\n export function VerticalVideoPlayer({\r\n   id,\r\n  username,\r\n  verified,\r\n  profilePictureUrl,\r\n  caption,\r\n  videoSrc,\r\n  posterSrc,\r\n  likes,\r\n  comments,\r\n  shares,\r\n  isPrivate: initialIsPrivate,\r\n  isOwner,\r\n  userId,\r\n  is_for_sale,\r\n  price,\r\n  currency,\r\n  isLocked: isSubLocked,\r\n  initialIsLiked = false,\r\n  showControls = true, // Destructure showControls, default to true\r\n  isForYouPage = false, // Destructure isForYouPage, default to false\r\n  isActive, // Destructure isActive prop\r\n  disableClickToPlay = false,\r\n  hideProgressBar = false,\r\n  interactionVariant = 'default', // Destructure new prop, default to 'default'\r\n}: VerticalVideoPlayerProps) {\r\n  const { user: loggedInUser } = useContext(AuthContext);\r\n  const router = useRouter();\r\n\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const progressBarContainerRef = useRef<HTMLDivElement>(null);\r\n  const [objectUrl, setObjectUrl] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorState, setErrorState] = useState<string | null>(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [isMuted, setIsMuted] = useState(true);\r\n  const [progress, setProgress] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [isBuying, setIsBuying] = useState(false);\r\n  const [accumulatedWatchTimeMs, setAccumulatedWatchTimeMs] = useState(0);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n   const watchIntervalRef = useRef<NodeJS.Timeout | null>(null);\r\n   const reportedWatchTimeRef = useRef(false);\r\n   const [isHovering, setIsHovering] = useState(false); // State for hover\r\n   const [hoverTime, setHoverTime] = useState(0); // State for time preview on hover\r\n   const [isScrubbing, setIsScrubbing] = useState(false); // State for scrubbing\r\n   const [currentTimeFormatted, setCurrentTimeFormatted] = useState(\"0:00\"); // State for current time display\r\n   const [showOverlayOnEnd, setShowOverlayOnEnd] = useState(false); // State to show overlay on video end\r\n\r\n   // Determine lock status\r\n   const isContentLocked = (is_for_sale && !isOwner) || (isSubLocked && !isOwner);\r\n  const isLockedForPurchase = is_for_sale && !isOwner;\r\n\r\n  // Refs to hold latest state values for cleanup function\r\n  const durationRef = useRef(duration);\r\n  const accumulatedWatchTimeMsRef = useRef(accumulatedWatchTimeMs);\r\n  const isContentLockedRef = useRef(isContentLocked);\r\n\r\n  // Keep refs updated\r\n  useEffect(() => { durationRef.current = duration; }, [duration]);\r\n  useEffect(() => { accumulatedWatchTimeMsRef.current = accumulatedWatchTimeMs; }, [accumulatedWatchTimeMs]);\r\n  useEffect(() => { isContentLockedRef.current = isContentLocked; }, [isContentLocked]);\r\n\r\n\r\n  // Fetch video blob only if content is not locked\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    let currentObjectUrl: string | null = null;\r\n    const fetchVideoAsBlob = async () => {\r\n      if (isContentLockedRef.current || !videoSrc) { // Use ref\r\n        setIsLoading(false); return;\r\n      }\r\n      setIsLoading(true); setErrorState(null); setObjectUrl(null);\r\n      try {\r\n        const urlParts = videoSrc.split('/public/');\r\n        if (urlParts.length < 2) throw new Error(\"Invalid video URL format\");\r\n        const bucketAndPath = urlParts[1];\r\n        const firstSlashIndex = bucketAndPath.indexOf('/');\r\n        if (firstSlashIndex === -1) throw new Error(\"Invalid bucket/path format\");\r\n        const bucketName = bucketAndPath.substring(0, firstSlashIndex);\r\n        const filePath = bucketAndPath.substring(firstSlashIndex + 1);\r\n        const { data: blob, error: downloadError } = await supabase.storage.from(bucketName).download(filePath);\r\n        if (downloadError) throw downloadError;\r\n        if (!blob) throw new Error(\"Downloaded data is null\");\r\n        currentObjectUrl = URL.createObjectURL(blob);\r\n        if (isMounted) setObjectUrl(currentObjectUrl);\r\n      } catch (err: unknown) {\r\n        const message = err instanceof Error ? err.message : String(err);\r\n        if (isMounted) setErrorState(`Failed to load video: ${message}`);\r\n      } finally {\r\n        if (isMounted) setIsLoading(false);\r\n      }\r\n    };\r\n    fetchVideoAsBlob();\r\n    return () => { isMounted = false; if (currentObjectUrl) URL.revokeObjectURL(currentObjectUrl); };\r\n  }, [id, videoSrc]); // Removed isContentLocked dependency, rely on ref\r\n\r\n  // Control Handlers\r\n  const togglePlayPause = useCallback(() => {\r\n    if (isContentLockedRef.current) return; // Use ref\r\n    const video = videoRef.current;\r\n    if (!video) return;\r\n    if (video.paused || video.ended) video.play().catch(e => console.error(\"Play error:\", e));\r\n    else video.pause();\r\n  }, []); // No dependencies needed as it uses refs\r\n\r\n  const toggleMute = useCallback(() => {\r\n    if (isContentLockedRef.current) return; // Use ref\r\n    const video = videoRef.current;\r\n    if (!video) return;\r\n    video.muted = !video.muted;\r\n    setIsMuted(video.muted);\r\n  }, []); // No dependencies needed as it uses refs\r\n\r\n  const handleTimeUpdate = useCallback(() => {\r\n    // Don't update progress if scrubbing or locked\r\n    if (isScrubbing || isContentLockedRef.current) return;\r\n    const video = videoRef.current;\r\n    const progressBarContainer = progressBarContainerRef.current;\r\n    // Use durationRef here\r\n    if (!video || !durationRef.current || !progressBarContainer) return;\r\n    const currentTime = video.currentTime;\r\n    const currentProgress = (currentTime / durationRef.current) * 100;\r\n    setProgress(currentProgress);\r\n    setCurrentTimeFormatted(formatTime(currentTime)); // Update formatted time state\r\n    // Flash effect logic (optional, kept for consistency)\r\n    if (currentTime < 0.1 && durationRef.current > 0 && !video.seeking) {\r\n      if (progressBarContainer && !progressBarContainer.classList.contains('flash-effect')) { // Added null check\r\n        progressBarContainer.classList.add('flash-effect');\r\n        setTimeout(() => {\r\n          // Check again if the element exists before removing class\r\n          if (progressBarContainerRef.current) {\r\n             progressBarContainerRef.current.classList.remove('flash-effect');\r\n          }\r\n        }, 200);\r\n      }\r\n    }\r\n  }, [isScrubbing]); // Add isScrubbing dependency\r\n\r\n  const handleLoadedMetadata = useCallback(() => {\r\n    if (isContentLockedRef.current) return; // Use ref\r\n    const video = videoRef.current;\r\n    if (!video) return;\r\n     setDuration(video.duration); // Update state, which updates durationRef via its effect\r\n     setCurrentTimeFormatted(formatTime(0)); // Reset time display on new video load\r\n   }, []); // No dependencies needed as it uses refs\r\n\r\n  // Seek handler for progress bar click\r\n  const handleSeek = useCallback((event: React.MouseEvent<HTMLDivElement>) => {\r\n    if (isContentLockedRef.current) return;\r\n    const progressBarContainer = progressBarContainerRef.current;\r\n    const video = videoRef.current;\r\n    const currentDuration = durationRef.current; // Use ref\r\n\r\n    if (!progressBarContainer || !video || !currentDuration || currentDuration <= 0) return;\r\n\r\n    const rect = progressBarContainer.getBoundingClientRect();\r\n    const clickX = event.clientX - rect.left;\r\n    const barWidth = rect.width;\r\n    const seekPercentage = Math.max(0, Math.min(1, clickX / barWidth)); // Clamp between 0 and 1\r\n    const seekTime = seekPercentage * currentDuration;\r\n\r\n    video.currentTime = seekTime;\r\n    // Update progress state immediately for responsiveness\r\n     setProgress(seekPercentage * 100);\r\n     setCurrentTimeFormatted(formatTime(seekTime)); // Update time display on seek\r\n\r\n   }, []); // No dependencies needed as it uses refs\r\n\r\n  // Hover handlers for progress bar preview\r\n  const handleMouseMove = useCallback((event: React.MouseEvent<HTMLDivElement>) => {\r\n    if (isContentLockedRef.current) return;\r\n    const progressBarContainer = progressBarContainerRef.current;\r\n    const currentDuration = durationRef.current;\r\n\r\n    if (!progressBarContainer || !currentDuration || currentDuration <= 0) return;\r\n\r\n    const rect = progressBarContainer.getBoundingClientRect();\r\n    const hoverX = event.clientX - rect.left;\r\n    const barWidth = rect.width;\r\n    const hoverPercentage = Math.max(0, Math.min(1, hoverX / barWidth));\r\n    setHoverTime(hoverPercentage * currentDuration);\r\n\r\n  }, []); // Dependencies: none, uses refs\r\n\r\n  const handleMouseEnter = useCallback(() => {\r\n    if (isContentLockedRef.current) return;\r\n    setIsHovering(true);\r\n  }, []); // Dependencies: none, uses refs\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    if (isContentLockedRef.current) return;\r\n     setIsHovering(false);\r\n   }, []); // Dependencies: none, uses refs\r\n\r\n  // Handle video end\r\n  const handleVideoEnd = useCallback(() => {\r\n    if (isForYouPage) {\r\n      setShowOverlayOnEnd(true);\r\n    }\r\n    setIsPlaying(false); // Update playing state\r\n  }, [isForYouPage]);\r\n\r\n  // Scrubbing handlers\r\n  // Removed useCallback to avoid potential closure issues with isScrubbing state inside listeners\r\n  const handleScrubMove = (event: MouseEvent) => {\r\n    // Check isScrubbing state directly\r\n    if (!isScrubbing || isContentLockedRef.current) return;\r\n\r\n    const progressBarContainer = progressBarContainerRef.current;\r\n    const video = videoRef.current;\r\n    const currentDuration = durationRef.current;\r\n\r\n    if (!progressBarContainer || !video || !currentDuration || currentDuration <= 0) return;\r\n\r\n    const rect = progressBarContainer.getBoundingClientRect();\r\n    // Calculate position relative to the progress bar\r\n    const clientX = event.clientX;\r\n    const scrubX = clientX - rect.left;\r\n    const barWidth = rect.width;\r\n\r\n    // Calculate percentage and clamp between 0 and 1\r\n    const scrubPercentage = Math.max(0, Math.min(1, scrubX / barWidth));\r\n    const seekTime = scrubPercentage * currentDuration;\r\n\r\n    // Update video time directly\r\n    video.currentTime = seekTime;\r\n\r\n    // Update progress state for visual feedback during scrub\r\n    setProgress(scrubPercentage * 100);\r\n    // Update hover time preview as well\r\n    setHoverTime(seekTime);\r\n    setCurrentTimeFormatted(formatTime(seekTime)); // Update time display during scrub\r\n\r\n  }; // Removed useCallback and dependency\r\n\r\n  // Removed useCallback\r\n  const handleScrubEnd = () => {\r\n    // Check isScrubbing state directly\r\n    if (!isScrubbing) return;\r\n    setIsScrubbing(false);\r\n    // Remove global listeners - ensure the function reference is correct\r\n    document.removeEventListener('mousemove', handleScrubMove);\r\n    document.removeEventListener('mouseup', handleScrubEnd);\r\n    // Optional: Resume playback if it was paused due to scrubbing (if needed)\r\n    // const video = videoRef.current;\r\n    // if (video && video.paused) {\r\n    //   video.play().catch(e => console.error(\"Error resuming play after scrub:\", e));\r\n    // }\r\n  }; // Removed useCallback and dependencies\r\n\r\n  const handleMouseDown = useCallback((event: React.MouseEvent<HTMLDivElement>) => {\r\n    if (isContentLockedRef.current) return;\r\n\r\n    setIsScrubbing(true);\r\n    setShowOverlayOnEnd(false); // Hide overlay when scrubbing starts\r\n    // Immediately seek to the clicked position using the existing handleSeek logic\r\n    handleSeek(event);\r\n    // Add global listeners for mouse move and up\r\n    // Add listeners - these will now reference the non-memoized functions\r\n    document.addEventListener('mousemove', handleScrubMove);\r\n    document.addEventListener('mouseup', handleScrubEnd);\r\n  // Update dependencies: handleSeek is memoized, others are not but stable references\r\n  }, [handleSeek]);\r\n\r\n  // Cleanup global listeners on component unmount\r\n  useEffect(() => {\r\n    // Define the cleanup function referencing the potentially non-memoized handlers\r\n    const cleanup = () => {\r\n      document.removeEventListener('mousemove', handleScrubMove);\r\n      document.removeEventListener('mouseup', handleScrubEnd);\r\n    };\r\n    return cleanup;\r\n   }, []); // Empty dependency array: cleanup runs once on unmount\r\n\r\n   // Temporarily comment out Intersection Observer and Watch Time Reporting Effect for debugging\r\n   useEffect(() => {\r\n    const videoElement = videoRef.current;\r\n    // Use ref for isContentLocked check\r\n    if (isContentLockedRef.current || !videoElement || !objectUrl) return;\r\n\r\n    // --- Playback control based on isActive prop ---\r\n    // If isActive is explicitly provided (not undefined), use it to control playback directly.\r\n    if (typeof isActive !== 'undefined') {\r\n      if (isActive) {\r\n        videoElement.play().then(() => setIsPlaying(true)).catch(() => setIsPlaying(false));\r\n      } else {\r\n        if (!videoElement.paused) {\r\n          videoElement.pause();\r\n          setIsPlaying(false);\r\n        }\r\n      }\r\n      // Skip IntersectionObserver setup if isActive is controlling playback\r\n      return () => { /* No observer cleanup needed */ };\r\n    }\r\n    // --- Fallback to IntersectionObserver if isActive is not provided ---\r\n\r\n    // Define the reporting function *inside* the effect's cleanup\r\n    // This ensures it runs with the values captured at the time of cleanup\r\n    const reportWatchTimeOnCleanup = async () => {\r\n      // Access latest values via refs\r\n      const currentDuration = durationRef.current;\r\n      const currentAccumulatedTime = accumulatedWatchTimeMsRef.current;\r\n      const currentContentLocked = isContentLockedRef.current;\r\n\r\n      if (reportedWatchTimeRef.current || currentContentLocked || currentDuration <= 0 || currentAccumulatedTime <= 0) {\r\n        return;\r\n      }\r\n      reportedWatchTimeRef.current = true;\r\n      if (watchIntervalRef.current) {\r\n        clearInterval(watchIntervalRef.current);\r\n        watchIntervalRef.current = null;\r\n      }\r\n      const payload = {\r\n        post_id: id, // id is stable from props\r\n        watch_time_ms: Math.round(currentAccumulatedTime),\r\n        video_duration_ms: Math.round(currentDuration * 1000),\r\n      };\r\n      console.log(`Reporting watch time for post ${id} (Cleanup):`, payload);\r\n      try {\r\n        const functionUrl = `${process.env.NEXT_PUBLIC_SUPABASE_URL}/functions/v1/record-watch-time`;\r\n        const response = await fetch(functionUrl, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload),\r\n          keepalive: true,\r\n        });\r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.error || `HTTP error! status: ${response.status}`);\r\n        }\r\n        console.log(`Successfully reported watch time for post ${id} (Cleanup)`);\r\n      } catch (error) {\r\n        console.error(`Failed to report watch time for post ${id} (Cleanup):`, error);\r\n        reportedWatchTimeRef.current = false; // Allow retry if failed\r\n      }\r\n    };\r\n\r\n    const observer = new IntersectionObserver(\r\n      ([entry]) => {\r\n        const currentlyVisible = entry.isIntersecting;\r\n        setIsVisible(currentlyVisible); // Update state for the interval effect\r\n\r\n        if (currentlyVisible) {\r\n          reportedWatchTimeRef.current = false; // Reset flag when visible again\r\n          videoElement.play().then(() => setIsPlaying(true)).catch(() => setIsPlaying(false));\r\n        } else {\r\n          if (!videoElement.paused) {\r\n            videoElement.pause();\r\n            setIsPlaying(false);\r\n          }\r\n          // Report immediately when scrolling out\r\n          reportWatchTimeOnCleanup();\r\n        }\r\n      },\r\n      { threshold: 0.5 }\r\n    );\r\n\r\n    observer.observe(videoElement);\r\n\r\n    // Cleanup: disconnect observer and report final time\r\n    return () => {\r\n      observer.disconnect();\r\n      reportWatchTimeOnCleanup(); // Report any remaining time on unmount/cleanup\r\n    };\r\n    // Minimal dependencies: only need to re-run if the video source or lock status fundamentally changes, or if isActive changes\r\n   }, [objectUrl, id, isActive]); // Added isActive dependency\r\n\r\n   // Watch Time Accumulation Interval Effect (depends on state)\r\n   useEffect(() => {\r\n    // Use state for interval logic, but refs for reporting logic\r\n    if (isPlaying && isVisible && !isContentLockedRef.current) {\r\n      if (!watchIntervalRef.current) {\r\n        watchIntervalRef.current = setInterval(() => {\r\n          setAccumulatedWatchTimeMs(prev => prev + 100);\r\n        }, 100);\r\n      }\r\n    } else {\r\n      if (watchIntervalRef.current) {\r\n        clearInterval(watchIntervalRef.current);\r\n        watchIntervalRef.current = null;\r\n      }\r\n    }\r\n    return () => {\r\n      if (watchIntervalRef.current) {\r\n        clearInterval(watchIntervalRef.current);\r\n        watchIntervalRef.current = null;\r\n      }\r\n    };\r\n  }, [isPlaying, isVisible]); // Removed isContentLocked dependency, rely on ref\r\n\r\n  // Purchase Handler\r\n  const handlePurchase = useCallback(async () => {\r\n    if (!loggedInUser) { toast.error(\"Please log in to purchase.\"); return; }\r\n    if (!id || !is_for_sale || !price || price <= 0) { toast.error(\"Item not purchasable.\"); return; }\r\n    setIsBuying(true);\r\n    try {\r\n      const response = await fetch('/api/stripe/create-item-checkout-session', {\r\n        method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ postId: id }),\r\n      });\r\n      const sessionData = await response.json();\r\n      if (!response.ok) throw new Error(sessionData.error || 'Failed to create session');\r\n      if (!sessionData.sessionId) throw new Error('Session ID missing');\r\n      const stripe = await stripePromise;\r\n      if (!stripe) throw new Error('Stripe.js failed');\r\n      const { error } = await stripe.redirectToCheckout({ sessionId: sessionData.sessionId });\r\n      if (error) throw new Error(error.message);\r\n    } catch (error) {\r\n      toast.error(`Purchase failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    } finally {\r\n      setIsBuying(false);\r\n    }\r\n  }, [loggedInUser, id, is_for_sale, price]);\r\n\r\n  // Profile Click Handler\r\n  const handleProfileClick = () => {\r\n    // Navigate using the user's ID\r\n    router.push(`/profile/${userId}`);\r\n   };\r\n\r\n   return ( // Ensure return statement is present\r\n       <div\r\n         ref={containerRef}\r\n         // Use flex-col to stack video area and controls area\r\n         className=\"relative w-full h-full bg-black overflow-hidden group flex flex-col\"\r\n       >\r\n        {isContentLocked ? (\r\n           // Keep locked state centered\r\n           <div className=\"flex-grow w-full bg-black flex flex-col items-center justify-center text-white relative p-4\">\r\n             <div className=\"flex flex-col items-center justify-center text-center z-10\">\r\n               <Lock size={48} className=\"mb-3 opacity-80\" />\r\n               <span className=\"text-lg font-semibold mb-1\">\r\n                 {isLockedForPurchase ? 'Purchase to View' : 'Subscribe to View'}\r\n               </span>\r\n               {isLockedForPurchase && price && (\r\n                 <Badge variant=\"secondary\" className=\"text-sm font-bold cursor-default mb-4\">\r\n                   {formatPrice(price, currency ?? undefined)}\r\n                 </Badge>\r\n               )}\r\n             </div>\r\n             {isLockedForPurchase && (\r\n               <Button\r\n                 variant=\"default\" size=\"sm\"\r\n                 className=\"mt-4 h-9 px-5 text-sm bg-pink-600 hover:bg-pink-700 text-white rounded-full absolute bottom-16 left-1/2 transform -translate-x-1/2 z-20\"\r\n                 onClick={handlePurchase} disabled={isBuying || !loggedInUser}\r\n                 aria-label={`Buy for ${formatPrice(price ?? 0, currency ?? undefined)}`}\r\n               >\r\n                 {isBuying ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <ShoppingCart className=\"mr-2 h-4 w-4\" />}\r\n                 {isBuying ? 'Processing...' : 'Buy'}\r\n               </Button>\r\n             )}\r\n           </div>\r\n         ) : (\r\n           <>\r\n             {/* Video Area - Takes up available space, shrinks if needed but content is contained */}\r\n             <div className=\"relative flex-grow flex-shrink min-h-0\"> {/* Container for video + loading/error */}\r\n               {isLoading && <div className=\"absolute inset-0 flex items-center justify-center text-white z-10\"><Loader2 className=\"h-8 w-8 animate-spin\" /></div>}\r\n               {errorState && <div className=\"absolute inset-0 flex items-center justify-center text-red-500 z-10 p-4 text-center\">{errorState}</div>}\r\n               <video\r\n                 ref={videoRef} key={objectUrl} src={objectUrl ?? undefined} poster={posterSrc}\r\n                 // Video fills its container, object-contain handles aspect ratio\r\n                 className={`w-full h-full object-contain ${!objectUrl || isLoading || errorState ? 'invisible' : ''} border-0 bg-black`}\r\n                 playsInline loop muted={isMuted} onClick={disableClickToPlay ? undefined : togglePlayPause} // Conditionally disable click\r\n                 onPlay={() => { setIsPlaying(true); setShowOverlayOnEnd(false); }} onPause={() => setIsPlaying(false)} // Reset overlay state on play\r\n                 onEnded={handleVideoEnd} // Call handler on video end\r\n                 onLoadedMetadata={handleLoadedMetadata} onTimeUpdate={handleTimeUpdate}\r\n                 onError={(e) => console.error(`Video Error (ID: ${id}):`, (e.target as HTMLVideoElement).error)}\r\n               />\r\n\r\n               {/* User Info & Caption - Moved to overlay video */}\r\n               {!isContentLocked && objectUrl && !isLoading && !errorState && (\r\n                 <div className={`absolute bottom-4 left-4 z-20 text-white pointer-events-auto max-w-[calc(100%-80px)]`}> {/* Position bottom-left, limit width */}\r\n                   <div className={`flex items-center gap-1.5 group cursor-pointer`} onClick={handleProfileClick} // Use handler\r\n                      aria-label={`View profile of ${username}`} role=\"button\" tabIndex={0}\r\n                      onKeyDown={(e) => { if (e.key === 'Enter' || e.key === ' ') { e.preventDefault(); handleProfileClick(); } }} // Use handler\r\n                    >\r\n                     <Avatar className=\"h-7 w-7 border border-gray-600 group-hover:scale-110 transition-transform\">\r\n                       <AvatarImage src={profilePictureUrl ?? undefined} alt={username ?? 'User profile'} />\r\n                       <AvatarFallback>{username?.charAt(0).toUpperCase() ?? 'U'}</AvatarFallback>\r\n                     </Avatar>\r\n                     <span className=\"font-bold text-sm hover:underline\">@{username}</span>\r\n                   </div>\r\n                   {caption && <p className=\"text-xs text-white mt-1 max-w-full break-words line-clamp-2\">{caption}</p>}\r\n                   {is_for_sale && !isContentLocked && price && (\r\n                     <Badge variant=\"secondary\" className=\"mt-1 text-xs font-semibold cursor-default bg-green-600 hover:bg-green-700 text-white\">\r\n                       For Sale: {formatPrice(price, currency ?? undefined)}\r\n                     </Badge>\r\n                   )}\r\n                 </div>\r\n               )}\r\n             </div>\r\n\r\n             {/* Controls Area - Sits below video, occupies the gap if present */}\r\n             {/* Only show controls container if not locked and video is ready */}\r\n             {/* This now only contains the progress bar */}\r\n             {!isContentLocked && objectUrl && !isLoading && !errorState && (\r\n               <div className=\"relative flex-shrink-0 px-4 pb-2 pt-1 bg-black z-20\"> {/* Controls container */}\r\n\r\n                 {/* Progress Bar & Time Display Container */}\r\n                 {/* Conditionally render the entire progress bar section */}\r\n                 {!hideProgressBar && showControls && duration > 0 && (\r\n                   <div className=\"relative\"> {/* Container for progress + time, removed mb-2 */}\r\n                     {/* Progress bar */}\r\n                     <div\r\n                       ref={progressBarContainerRef}\r\n                       // Takes full width of controls area, standard height\r\n                       className={`relative h-1.5 w-full bg-gray-500/30 cursor-pointer group-hover:opacity-100 transition-opacity duration-200 ${isScrubbing ? 'opacity-100' : 'opacity-70'}`}\r\n                       onClick={handleSeek}\r\n                       onMouseDown={handleMouseDown}\r\n                       onMouseMove={handleMouseMove}\r\n                       onMouseEnter={handleMouseEnter}\r\n                       onMouseLeave={handleMouseLeave}\r\n                     >\r\n                       <div className=\"absolute top-0 left-0 h-full w-full bg-gray-500/30\" />\r\n                       <div\r\n                         className=\"absolute top-0 left-0 h-full bg-white/80 transition-colors duration-200 group-hover:bg-white\" // Keep hover effect on bar color\r\n                         style={{ width: `${progress}%` }}\r\n                       />\r\n                       {/* Knob always visible when progress bar is visible */}\r\n                       <div\r\n                         className={`absolute top-1/2 w-3 h-3 bg-white rounded-full transform -translate-y-1/2 -translate-x-1/2 pointer-events-none`}\r\n                         style={{ left: `${progress}%` }}\r\n                       />\r\n                       {(isHovering || isScrubbing) && (\r\n                         <div\r\n                           className=\"absolute bottom-full mb-1 left-0 transform -translate-x-1/2 px-2 py-0.5 bg-black/70 text-white text-xs rounded whitespace-nowrap z-50 pointer-events-none\" // Adjusted margin\r\n                           style={{ left: `${(hoverTime / duration) * 100}%` }}\r\n                         >\r\n                           {formatTime(hoverTime)}\r\n                         </div>\r\n                       )}\r\n                     </div>\r\n                     {/* Time Display - Below progress bar */}\r\n                     <div className={`mt-1 text-white text-xs font-mono pointer-events-none select-none`}>\r\n                       {currentTimeFormatted} / {formatTime(duration)}\r\n                     </div>\r\n                   </div>\r\n                 )}\r\n               </div>\r\n             )}\r\n\r\n             {/* --- Absolutely Positioned Overlays --- */}\r\n             {/* These remain absolutely positioned relative to the main container */}\r\n\r\n             {/* Mute Button */}\r\n             {objectUrl && !isLoading && !errorState && !isContentLocked && (\r\n               <button onClick={toggleMute} className={`absolute bottom-5 right-4 p-2 bg-black/40 rounded-full text-white z-30 pointer-events-auto`} aria-label={isMuted ? 'Unmute' : 'Mute'}> {/* Adjusted bottom slightly */}\r\n                 {isMuted ? <VolumeX size={18} /> : <Volume2 size={18} />}\r\n               </button>\r\n             )}\r\n\r\n             {/* Interaction Buttons */}\r\n             {!isContentLocked && (\r\n               <div className={`absolute bottom-20 right-4 z-30 pointer-events-auto opacity-100 transition-opacity duration-300`}> {/* Adjusted bottom */}\r\n                 <PostInteractionButtons\r\n                   postId={id} userId={userId} username={username}\r\n                   profilePictureUrl={profilePictureUrl ?? undefined}\r\n                   initialLikes={parseInt(likes, 10) || 0} initialIsLiked={initialIsLiked}\r\n                   commentsCount={comments} sharesCount={shares}\r\n                   initialIsPrivate={initialIsPrivate ?? false} postType=\"video\"\r\n                   isOwner={isOwner ?? false} videoCaption={caption ?? undefined}\r\n                   is_for_sale={is_for_sale} price={price} currency={currency}\r\n                   variant={interactionVariant} // Pass down the variant prop\r\n                   // viewsCount={...} // Pass viewsCount here when available\r\n                 />\r\n               </div>\r\n             )}\r\n           </>\r\n         )}\r\n       </div>\r\n     ); // Ensure closing parenthesis for return is present\r\n } // Ensure closing brace for component function is present\r\n"],"names":[],"mappings":";;;AAeiC;;AAbjC;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;AAZA;;;;;;;;;;;;AAcA,0CAA0C;AAC1C,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD;AA+B/B,kCAAkC;AAClC,MAAM,cAAc,CAAC,cAAsB,WAAmB,KAAK;IACjE,OAAO,IAAI,KAAK,YAAY,CAAC,SAAS;QACpC,OAAO;QACP,UAAU,SAAS,WAAW;IAC/B,GAAG,MAAM,CAAC,eAAe;AAC3B;AAED,oDAAoD;AACpD,MAAM,aAAa,CAAC;IAClB,IAAI,MAAM,kBAAkB,gBAAgB,GAAG;QAC7C,OAAO,QAAQ,gCAAgC;IACjD;IACA,MAAM,UAAU,KAAK,KAAK,CAAC,gBAAgB;IAC3C,MAAM,UAAU,KAAK,KAAK,CAAC,gBAAgB;IAC3C,OAAO,GAAG,QAAQ,CAAC,EAAE,QAAQ,QAAQ,GAAG,QAAQ,CAAC,GAAG,MAAM;AAC5D;AAEQ,SAAS,oBAAoB,EAClC,EAAE,EACH,QAAQ,EACR,QAAQ,EACR,iBAAiB,EACjB,OAAO,EACP,QAAQ,EACR,SAAS,EACT,KAAK,EACL,QAAQ,EACR,MAAM,EACN,WAAW,gBAAgB,EAC3B,OAAO,EACP,MAAM,EACN,WAAW,EACX,KAAK,EACL,QAAQ,EACR,UAAU,WAAW,EACrB,iBAAiB,KAAK,EACtB,eAAe,IAAI,EACnB,eAAe,KAAK,EACpB,QAAQ,EACR,qBAAqB,KAAK,EAC1B,kBAAkB,KAAK,EACvB,qBAAqB,SAAS,EACL;;IACzB,MAAM,EAAE,MAAM,YAAY,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,iIAAA,CAAA,cAAW;IACrD,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IAC1C,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAC5C,MAAM,0BAA0B,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IACvD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAC1D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAC5D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,wBAAwB,0BAA0B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC1C,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAyB;IACvD,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IACpC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,kBAAkB;IACvE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,kCAAkC;IACjF,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,sBAAsB;IAC7E,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,SAAS,iCAAiC;IAC3G,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,qCAAqC;IAEtG,wBAAwB;IACxB,MAAM,kBAAkB,AAAC,eAAe,CAAC,WAAa,eAAe,CAAC;IACvE,MAAM,sBAAsB,eAAe,CAAC;IAE5C,wDAAwD;IACxD,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAC3B,MAAM,4BAA4B,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IACzC,MAAM,qBAAqB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAE;IAElC,oBAAoB;IACpB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YAAQ,YAAY,OAAO,GAAG;QAAU;wCAAG;QAAC;KAAS;IAC/D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YAAQ,0BAA0B,OAAO,GAAG;QAAwB;wCAAG;QAAC;KAAuB;IACzG,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YAAQ,mBAAmB,OAAO,GAAG;QAAiB;wCAAG;QAAC;KAAgB;IAGpF,iDAAiD;IACjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACR,IAAI,YAAY;YAChB,IAAI,mBAAkC;YACtC,MAAM;kEAAmB;oBACvB,IAAI,mBAAmB,OAAO,IAAI,CAAC,UAAU;wBAC3C,aAAa;wBAAQ;oBACvB;oBACA,aAAa;oBAAO,cAAc;oBAAO,aAAa;oBACtD,IAAI;wBACF,MAAM,WAAW,SAAS,KAAK,CAAC;wBAChC,IAAI,SAAS,MAAM,GAAG,GAAG,MAAM,IAAI,MAAM;wBACzC,MAAM,gBAAgB,QAAQ,CAAC,EAAE;wBACjC,MAAM,kBAAkB,cAAc,OAAO,CAAC;wBAC9C,IAAI,oBAAoB,CAAC,GAAG,MAAM,IAAI,MAAM;wBAC5C,MAAM,aAAa,cAAc,SAAS,CAAC,GAAG;wBAC9C,MAAM,WAAW,cAAc,SAAS,CAAC,kBAAkB;wBAC3D,MAAM,EAAE,MAAM,IAAI,EAAE,OAAO,aAAa,EAAE,GAAG,MAAM,+HAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,QAAQ,CAAC;wBAC9F,IAAI,eAAe,MAAM;wBACzB,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;wBAC3B,mBAAmB,IAAI,eAAe,CAAC;wBACvC,IAAI,WAAW,aAAa;oBAC9B,EAAE,OAAO,KAAc;wBACrB,MAAM,UAAU,eAAe,QAAQ,IAAI,OAAO,GAAG,OAAO;wBAC5D,IAAI,WAAW,cAAc,CAAC,sBAAsB,EAAE,SAAS;oBACjE,SAAU;wBACR,IAAI,WAAW,aAAa;oBAC9B;gBACF;;YACA;YACA;iDAAO;oBAAQ,YAAY;oBAAO,IAAI,kBAAkB,IAAI,eAAe,CAAC;gBAAmB;;QACjG;wCAAG;QAAC;QAAI;KAAS,GAAG,kDAAkD;IAEtE,mBAAmB;IACnB,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;4DAAE;YAClC,IAAI,mBAAmB,OAAO,EAAE,QAAQ,UAAU;YAClD,MAAM,QAAQ,SAAS,OAAO;YAC9B,IAAI,CAAC,OAAO;YACZ,IAAI,MAAM,MAAM,IAAI,MAAM,KAAK,EAAE,MAAM,IAAI,GAAG,KAAK;oEAAC,CAAA,IAAK,QAAQ,KAAK,CAAC,eAAe;;iBACjF,MAAM,KAAK;QAClB;2DAAG,EAAE,GAAG,yCAAyC;IAEjD,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDAAE;YAC7B,IAAI,mBAAmB,OAAO,EAAE,QAAQ,UAAU;YAClD,MAAM,QAAQ,SAAS,OAAO;YAC9B,IAAI,CAAC,OAAO;YACZ,MAAM,KAAK,GAAG,CAAC,MAAM,KAAK;YAC1B,WAAW,MAAM,KAAK;QACxB;sDAAG,EAAE,GAAG,yCAAyC;IAEjD,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;6DAAE;YACnC,+CAA+C;YAC/C,IAAI,eAAe,mBAAmB,OAAO,EAAE;YAC/C,MAAM,QAAQ,SAAS,OAAO;YAC9B,MAAM,uBAAuB,wBAAwB,OAAO;YAC5D,uBAAuB;YACvB,IAAI,CAAC,SAAS,CAAC,YAAY,OAAO,IAAI,CAAC,sBAAsB;YAC7D,MAAM,cAAc,MAAM,WAAW;YACrC,MAAM,kBAAkB,AAAC,cAAc,YAAY,OAAO,GAAI;YAC9D,YAAY;YACZ,wBAAwB,WAAW,eAAe,8BAA8B;YAChF,sDAAsD;YACtD,IAAI,cAAc,OAAO,YAAY,OAAO,GAAG,KAAK,CAAC,MAAM,OAAO,EAAE;gBAClE,IAAI,wBAAwB,CAAC,qBAAqB,SAAS,CAAC,QAAQ,CAAC,iBAAiB;oBACpF,qBAAqB,SAAS,CAAC,GAAG,CAAC;oBACnC;6EAAW;4BACT,0DAA0D;4BAC1D,IAAI,wBAAwB,OAAO,EAAE;gCAClC,wBAAwB,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC;4BACpD;wBACF;4EAAG;gBACL;YACF;QACF;4DAAG;QAAC;KAAY,GAAG,6BAA6B;IAEhD,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;iEAAE;YACvC,IAAI,mBAAmB,OAAO,EAAE,QAAQ,UAAU;YAClD,MAAM,QAAQ,SAAS,OAAO;YAC9B,IAAI,CAAC,OAAO;YACX,YAAY,MAAM,QAAQ,GAAG,yDAAyD;YACtF,wBAAwB,WAAW,KAAK,uCAAuC;QACjF;gEAAG,EAAE,GAAG,yCAAyC;IAElD,sCAAsC;IACtC,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;uDAAE,CAAC;YAC9B,IAAI,mBAAmB,OAAO,EAAE;YAChC,MAAM,uBAAuB,wBAAwB,OAAO;YAC5D,MAAM,QAAQ,SAAS,OAAO;YAC9B,MAAM,kBAAkB,YAAY,OAAO,EAAE,UAAU;YAEvD,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,mBAAmB,mBAAmB,GAAG;YAEjF,MAAM,OAAO,qBAAqB,qBAAqB;YACvD,MAAM,SAAS,MAAM,OAAO,GAAG,KAAK,IAAI;YACxC,MAAM,WAAW,KAAK,KAAK;YAC3B,MAAM,iBAAiB,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,SAAS,YAAY,wBAAwB;YAC5F,MAAM,WAAW,iBAAiB;YAElC,MAAM,WAAW,GAAG;YACpB,uDAAuD;YACtD,YAAY,iBAAiB;YAC7B,wBAAwB,WAAW,YAAY,8BAA8B;QAE/E;sDAAG,EAAE,GAAG,yCAAyC;IAElD,0CAA0C;IAC1C,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;4DAAE,CAAC;YACnC,IAAI,mBAAmB,OAAO,EAAE;YAChC,MAAM,uBAAuB,wBAAwB,OAAO;YAC5D,MAAM,kBAAkB,YAAY,OAAO;YAE3C,IAAI,CAAC,wBAAwB,CAAC,mBAAmB,mBAAmB,GAAG;YAEvE,MAAM,OAAO,qBAAqB,qBAAqB;YACvD,MAAM,SAAS,MAAM,OAAO,GAAG,KAAK,IAAI;YACxC,MAAM,WAAW,KAAK,KAAK;YAC3B,MAAM,kBAAkB,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,SAAS;YACzD,aAAa,kBAAkB;QAEjC;2DAAG,EAAE,GAAG,gCAAgC;IAExC,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;6DAAE;YACnC,IAAI,mBAAmB,OAAO,EAAE;YAChC,cAAc;QAChB;4DAAG,EAAE,GAAG,gCAAgC;IAExC,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;6DAAE;YACnC,IAAI,mBAAmB,OAAO,EAAE;YAC/B,cAAc;QAChB;4DAAG,EAAE,GAAG,gCAAgC;IAEzC,mBAAmB;IACnB,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2DAAE;YACjC,IAAI,cAAc;gBAChB,oBAAoB;YACtB;YACA,aAAa,QAAQ,uBAAuB;QAC9C;0DAAG;QAAC;KAAa;IAEjB,qBAAqB;IACrB,gGAAgG;IAChG,MAAM,kBAAkB,CAAC;QACvB,mCAAmC;QACnC,IAAI,CAAC,eAAe,mBAAmB,OAAO,EAAE;QAEhD,MAAM,uBAAuB,wBAAwB,OAAO;QAC5D,MAAM,QAAQ,SAAS,OAAO;QAC9B,MAAM,kBAAkB,YAAY,OAAO;QAE3C,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,mBAAmB,mBAAmB,GAAG;QAEjF,MAAM,OAAO,qBAAqB,qBAAqB;QACvD,kDAAkD;QAClD,MAAM,UAAU,MAAM,OAAO;QAC7B,MAAM,SAAS,UAAU,KAAK,IAAI;QAClC,MAAM,WAAW,KAAK,KAAK;QAE3B,iDAAiD;QACjD,MAAM,kBAAkB,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,SAAS;QACzD,MAAM,WAAW,kBAAkB;QAEnC,6BAA6B;QAC7B,MAAM,WAAW,GAAG;QAEpB,yDAAyD;QACzD,YAAY,kBAAkB;QAC9B,oCAAoC;QACpC,aAAa;QACb,wBAAwB,WAAW,YAAY,mCAAmC;IAEpF,GAAG,qCAAqC;IAExC,sBAAsB;IACtB,MAAM,iBAAiB;QACrB,mCAAmC;QACnC,IAAI,CAAC,aAAa;QAClB,eAAe;QACf,qEAAqE;QACrE,SAAS,mBAAmB,CAAC,aAAa;QAC1C,SAAS,mBAAmB,CAAC,WAAW;IACxC,0EAA0E;IAC1E,kCAAkC;IAClC,+BAA+B;IAC/B,mFAAmF;IACnF,IAAI;IACN,GAAG,uCAAuC;IAE1C,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;4DAAE,CAAC;YACnC,IAAI,mBAAmB,OAAO,EAAE;YAEhC,eAAe;YACf,oBAAoB,QAAQ,qCAAqC;YACjE,+EAA+E;YAC/E,WAAW;YACX,6CAA6C;YAC7C,sEAAsE;YACtE,SAAS,gBAAgB,CAAC,aAAa;YACvC,SAAS,gBAAgB,CAAC,WAAW;QACvC,oFAAoF;QACpF;2DAAG;QAAC;KAAW;IAEf,gDAAgD;IAChD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACR,gFAAgF;YAChF,MAAM;yDAAU;oBACd,SAAS,mBAAmB,CAAC,aAAa;oBAC1C,SAAS,mBAAmB,CAAC,WAAW;gBAC1C;;YACA,OAAO;QACR;wCAAG,EAAE,GAAG,uDAAuD;IAE/D,8FAA8F;IAC9F,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACT,MAAM,eAAe,SAAS,OAAO;YACrC,oCAAoC;YACpC,IAAI,mBAAmB,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW;YAE/D,kDAAkD;YAClD,2FAA2F;YAC3F,IAAI,OAAO,aAAa,aAAa;gBACnC,IAAI,UAAU;oBACZ,aAAa,IAAI,GAAG,IAAI;yDAAC,IAAM,aAAa;wDAAO,KAAK;yDAAC,IAAM,aAAa;;gBAC9E,OAAO;oBACL,IAAI,CAAC,aAAa,MAAM,EAAE;wBACxB,aAAa,KAAK;wBAClB,aAAa;oBACf;gBACF;gBACA,sEAAsE;gBACtE;qDAAO,KAAyC;;YAClD;YACA,uEAAuE;YAEvE,8DAA8D;YAC9D,uEAAuE;YACvE,MAAM;0EAA2B;oBAC/B,gCAAgC;oBAChC,MAAM,kBAAkB,YAAY,OAAO;oBAC3C,MAAM,yBAAyB,0BAA0B,OAAO;oBAChE,MAAM,uBAAuB,mBAAmB,OAAO;oBAEvD,IAAI,qBAAqB,OAAO,IAAI,wBAAwB,mBAAmB,KAAK,0BAA0B,GAAG;wBAC/G;oBACF;oBACA,qBAAqB,OAAO,GAAG;oBAC/B,IAAI,iBAAiB,OAAO,EAAE;wBAC5B,cAAc,iBAAiB,OAAO;wBACtC,iBAAiB,OAAO,GAAG;oBAC7B;oBACA,MAAM,UAAU;wBACd,SAAS;wBACT,eAAe,KAAK,KAAK,CAAC;wBAC1B,mBAAmB,KAAK,KAAK,CAAC,kBAAkB;oBAClD;oBACA,QAAQ,GAAG,CAAC,CAAC,8BAA8B,EAAE,GAAG,WAAW,CAAC,EAAE;oBAC9D,IAAI;wBACF,MAAM,cAAc,gFAAwC,+BAA+B,CAAC;wBAC5F,MAAM,WAAW,MAAM,MAAM,aAAa;4BACxC,QAAQ;4BACR,SAAS;gCAAE,gBAAgB;4BAAmB;4BAC9C,MAAM,KAAK,SAAS,CAAC;4BACrB,WAAW;wBACb;wBACA,IAAI,CAAC,SAAS,EAAE,EAAE;4BAChB,MAAM,YAAY,MAAM,SAAS,IAAI;4BACrC,MAAM,IAAI,MAAM,UAAU,KAAK,IAAI,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;wBAC7E;wBACA,QAAQ,GAAG,CAAC,CAAC,0CAA0C,EAAE,GAAG,UAAU,CAAC;oBACzE,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,CAAC,qCAAqC,EAAE,GAAG,WAAW,CAAC,EAAE;wBACvE,qBAAqB,OAAO,GAAG,OAAO,wBAAwB;oBAChE;gBACF;;YAEA,MAAM,WAAW,IAAI;iDACnB,CAAC,CAAC,MAAM;oBACN,MAAM,mBAAmB,MAAM,cAAc;oBAC7C,aAAa,mBAAmB,uCAAuC;oBAEvE,IAAI,kBAAkB;wBACpB,qBAAqB,OAAO,GAAG,OAAO,gCAAgC;wBACtE,aAAa,IAAI,GAAG,IAAI;6DAAC,IAAM,aAAa;4DAAO,KAAK;6DAAC,IAAM,aAAa;;oBAC9E,OAAO;wBACL,IAAI,CAAC,aAAa,MAAM,EAAE;4BACxB,aAAa,KAAK;4BAClB,aAAa;wBACf;wBACA,wCAAwC;wBACxC;oBACF;gBACF;gDACA;gBAAE,WAAW;YAAI;YAGnB,SAAS,OAAO,CAAC;YAEjB,qDAAqD;YACrD;iDAAO;oBACL,SAAS,UAAU;oBACnB,4BAA4B,+CAA+C;gBAC7E;;QACA,6HAA6H;QAC9H;wCAAG;QAAC;QAAW;QAAI;KAAS,GAAG,4BAA4B;IAE3D,6DAA6D;IAC7D,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;yCAAE;YACT,6DAA6D;YAC7D,IAAI,aAAa,aAAa,CAAC,mBAAmB,OAAO,EAAE;gBACzD,IAAI,CAAC,iBAAiB,OAAO,EAAE;oBAC7B,iBAAiB,OAAO,GAAG;yDAAY;4BACrC;iEAA0B,CAAA,OAAQ,OAAO;;wBAC3C;wDAAG;gBACL;YACF,OAAO;gBACL,IAAI,iBAAiB,OAAO,EAAE;oBAC5B,cAAc,iBAAiB,OAAO;oBACtC,iBAAiB,OAAO,GAAG;gBAC7B;YACF;YACA;iDAAO;oBACL,IAAI,iBAAiB,OAAO,EAAE;wBAC5B,cAAc,iBAAiB,OAAO;wBACtC,iBAAiB,OAAO,GAAG;oBAC7B;gBACF;;QACF;wCAAG;QAAC;QAAW;KAAU,GAAG,kDAAkD;IAE9E,mBAAmB;IACnB,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2DAAE;YACjC,IAAI,CAAC,cAAc;gBAAE,0JAAA,CAAA,QAAK,CAAC,KAAK,CAAC;gBAA+B;YAAQ;YACxE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,SAAS,GAAG;gBAAE,0JAAA,CAAA,QAAK,CAAC,KAAK,CAAC;gBAA0B;YAAQ;YACjG,YAAY;YACZ,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,4CAA4C;oBACvE,QAAQ;oBAAQ,SAAS;wBAAE,gBAAgB;oBAAmB;oBAAG,MAAM,KAAK,SAAS,CAAC;wBAAE,QAAQ;oBAAG;gBACrG;gBACA,MAAM,cAAc,MAAM,SAAS,IAAI;gBACvC,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM,YAAY,KAAK,IAAI;gBACvD,IAAI,CAAC,YAAY,SAAS,EAAE,MAAM,IAAI,MAAM;gBAC5C,MAAM,SAAS,MAAM;gBACrB,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;gBAC7B,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,kBAAkB,CAAC;oBAAE,WAAW,YAAY,SAAS;gBAAC;gBACrF,IAAI,OAAO,MAAM,IAAI,MAAM,MAAM,OAAO;YAC1C,EAAE,OAAO,OAAO;gBACd,0JAAA,CAAA,QAAK,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,iBAAiB,QAAQ,MAAM,OAAO,GAAG,iBAAiB;YAC5F,SAAU;gBACR,YAAY;YACd;QACF;0DAAG;QAAC;QAAc;QAAI;QAAa;KAAM;IAEzC,wBAAwB;IACxB,MAAM,qBAAqB;QACzB,+BAA+B;QAC/B,OAAO,IAAI,CAAC,CAAC,SAAS,EAAE,QAAQ;IACjC;IAEA,qBACI,6LAAC;QACC,KAAK;QACL,qDAAqD;QACrD,WAAU;kBAEV,kBACE,6BAA6B;sBAC7B,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,qMAAA,CAAA,OAAI;4BAAC,MAAM;4BAAI,WAAU;;;;;;sCAC1B,6LAAC;4BAAK,WAAU;sCACb,sBAAsB,qBAAqB;;;;;;wBAE7C,uBAAuB,uBACtB,6LAAC,oIAAA,CAAA,QAAK;4BAAC,SAAQ;4BAAY,WAAU;sCAClC,YAAY,OAAO,YAAY;;;;;;;;;;;;gBAIrC,qCACC,6LAAC,qIAAA,CAAA,SAAM;oBACL,SAAQ;oBAAU,MAAK;oBACvB,WAAU;oBACV,SAAS;oBAAgB,UAAU,YAAY,CAAC;oBAChD,cAAY,CAAC,QAAQ,EAAE,YAAY,SAAS,GAAG,YAAY,YAAY;;wBAEtE,yBAAW,6LAAC,oNAAA,CAAA,UAAO;4BAAC,WAAU;;;;;iDAAiC,6LAAC,yNAAA,CAAA,eAAY;4BAAC,WAAU;;;;;;wBACvF,WAAW,kBAAkB;;;;;;;;;;;;iCAKpC;;8BAEE,6LAAC;oBAAI,WAAU;;wBAAyC;wBACrD,2BAAa,6LAAC;4BAAI,WAAU;sCAAoE,cAAA,6LAAC,oNAAA,CAAA,UAAO;gCAAC,WAAU;;;;;;;;;;;wBACnH,4BAAc,6LAAC;4BAAI,WAAU;sCAAuF;;;;;;sCACrH,6LAAC;4BACC,KAAK;4BAA0B,KAAK,aAAa;4BAAW,QAAQ;4BACpE,iEAAiE;4BACjE,WAAW,CAAC,6BAA6B,EAAE,CAAC,aAAa,aAAa,aAAa,cAAc,GAAG,kBAAkB,CAAC;4BACvH,WAAW;4BAAC,IAAI;4BAAC,OAAO;4BAAS,SAAS,qBAAqB,YAAY;4BAC3E,QAAQ;gCAAQ,aAAa;gCAAO,oBAAoB;4BAAQ;4BAAG,SAAS,IAAM,aAAa;4BAC/F,SAAS;4BACT,kBAAkB;4BAAsB,cAAc;4BACtD,SAAS,CAAC,IAAM,QAAQ,KAAK,CAAC,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,EAAE,AAAC,EAAE,MAAM,CAAsB,KAAK;2BAP1E;;;;;wBAWrB,CAAC,mBAAmB,aAAa,CAAC,aAAa,CAAC,4BAC/C,6LAAC;4BAAI,WAAW,CAAC,oFAAoF,CAAC;;gCAAE;8CACtG,6LAAC;oCAAI,WAAW,CAAC,8CAA8C,CAAC;oCAAE,SAAS;oCACxE,cAAY,CAAC,gBAAgB,EAAE,UAAU;oCAAE,MAAK;oCAAS,UAAU;oCACnE,WAAW,CAAC;wCAAQ,IAAI,EAAE,GAAG,KAAK,WAAW,EAAE,GAAG,KAAK,KAAK;4CAAE,EAAE,cAAc;4CAAI;wCAAsB;oCAAE;;sDAE3G,6LAAC,qIAAA,CAAA,SAAM;4CAAC,WAAU;;8DAChB,6LAAC,qIAAA,CAAA,cAAW;oDAAC,KAAK,qBAAqB;oDAAW,KAAK,YAAY;;;;;;8DACnE,6LAAC,qIAAA,CAAA,iBAAc;8DAAE,UAAU,OAAO,GAAG,iBAAiB;;;;;;;;;;;;sDAExD,6LAAC;4CAAK,WAAU;;gDAAoC;gDAAE;;;;;;;;;;;;;gCAEvD,yBAAW,6LAAC;oCAAE,WAAU;8CAA+D;;;;;;gCACvF,eAAe,CAAC,mBAAmB,uBAClC,6LAAC,oIAAA,CAAA,QAAK;oCAAC,SAAQ;oCAAY,WAAU;;wCAAuF;wCAC/G,YAAY,OAAO,YAAY;;;;;;;;;;;;;;;;;;;gBAUnD,CAAC,mBAAmB,aAAa,CAAC,aAAa,CAAC,4BAC/C,6LAAC;oBAAI,WAAU;;wBAAsD;wBAIlE,CAAC,mBAAmB,gBAAgB,WAAW,mBAC9C,6LAAC;4BAAI,WAAU;;gCAAW;8CAExB,6LAAC;oCACC,KAAK;oCACL,qDAAqD;oCACrD,WAAW,CAAC,4GAA4G,EAAE,cAAc,gBAAgB,cAAc;oCACtK,SAAS;oCACT,aAAa;oCACb,aAAa;oCACb,cAAc;oCACd,cAAc;;sDAEd,6LAAC;4CAAI,WAAU;;;;;;sDACf,6LAAC;4CACC,WAAU,+FAA+F,iCAAiC;;4CAC1I,OAAO;gDAAE,OAAO,GAAG,SAAS,CAAC,CAAC;4CAAC;;;;;;sDAGjC,6LAAC;4CACC,WAAW,CAAC,8GAA8G,CAAC;4CAC3H,OAAO;gDAAE,MAAM,GAAG,SAAS,CAAC,CAAC;4CAAC;;;;;;wCAE/B,CAAC,cAAc,WAAW,mBACzB,6LAAC;4CACC,WAAU,4JAA4J,kBAAkB;;4CACxL,OAAO;gDAAE,MAAM,GAAG,AAAC,YAAY,WAAY,IAAI,CAAC,CAAC;4CAAC;sDAEjD,WAAW;;;;;;;;;;;;8CAKlB,6LAAC;oCAAI,WAAW,CAAC,iEAAiE,CAAC;;wCAChF;wCAAqB;wCAAI,WAAW;;;;;;;;;;;;;;;;;;;gBAW9C,aAAa,CAAC,aAAa,CAAC,cAAc,CAAC,iCAC1C,6LAAC;oBAAO,SAAS;oBAAY,WAAW,CAAC,0FAA0F,CAAC;oBAAE,cAAY,UAAU,WAAW;;wBAAQ;wBAC5K,wBAAU,6LAAC,+MAAA,CAAA,UAAO;4BAAC,MAAM;;;;;iDAAS,6LAAC,+MAAA,CAAA,UAAO;4BAAC,MAAM;;;;;;;;;;;;gBAKrD,CAAC,iCACA,6LAAC;oBAAI,WAAW,CAAC,+FAA+F,CAAC;;wBAAE;sCACjH,6LAAC,+IAAA,CAAA,yBAAsB;4BACrB,QAAQ;4BAAI,QAAQ;4BAAQ,UAAU;4BACtC,mBAAmB,qBAAqB;4BACxC,cAAc,SAAS,OAAO,OAAO;4BAAG,gBAAgB;4BACxD,eAAe;4BAAU,aAAa;4BACtC,kBAAkB,oBAAoB;4BAAO,UAAS;4BACtD,SAAS,WAAW;4BAAO,cAAc,WAAW;4BACpD,aAAa;4BAAa,OAAO;4BAAO,UAAU;4BAClD,SAAS;;;;;;;;;;;;;;;;;;cAQpB,mDAAmD;AAC1D,EAAE,yDAAyD;GA5jB3C;;QA2BA,qIAAA,CAAA,YAAS;;;KA3BT","debugId":null}},
    {"offset": {"line": 2800, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/ClientVideoPlayerWrapper.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react'; // Import React\r\nimport { VerticalVideoPlayer } from './VerticalVideoPlayer';\r\n\r\n// Define the props type - should match VerticalVideoPlayerProps\r\ninterface ClientVideoPlayerWrapperProps {\r\n  id: string;\r\n  username: string;\r\n  verified?: boolean;\r\n  profilePictureUrl?: string; // Add profile picture URL prop\r\n  caption: string;\r\n  videoSrc: string;\r\n  posterSrc?: string;\r\n  likes: string;\r\n  comments: string;\r\n  shares: string;\r\n  isPrivate?: boolean | null;\r\n  isOwner?: boolean;\r\n  userId: string; // Post owner's ID\r\n  // Add sale-related props passed from VideoGrid\r\n  is_for_sale: boolean;\r\n  price?: number | null;\r\n  currency?: string | null;\r\n  stripe_price_id?: string | null;\r\n  isLocked?: boolean; // Locked by subscription or sale\r\n  isPaidContent?: boolean | null | undefined; // Allow null as well\r\n  disableClickToPlay?: boolean; // Add prop from VerticalVideoPlayer\r\n  hideProgressBar?: boolean; // Add prop to pass down\r\n}\r\n\r\n// Wrap the component with React.memo to prevent unnecessary re-renders\r\n// if the props haven't changed.\r\nexport const ClientVideoPlayerWrapper = React.memo(function ClientVideoPlayerWrapper(props: ClientVideoPlayerWrapperProps) {\r\n  // Log that the wrapper is rendering (can be removed after debugging)\r\n  // console.log(`Rendering ClientVideoPlayerWrapper for ID: ${props.id}`);\r\n  // Pass all props down to VerticalVideoPlayer\r\n  return <VerticalVideoPlayer {...props} />;\r\n});\r\n\r\n// Optional: Add a display name for better debugging in React DevTools\r\nClientVideoPlayerWrapper.displayName = 'ClientVideoPlayerWrapper';\r\n"],"names":[],"mappings":";;;;AAEA,mRAA2B,eAAe;AAC1C;AAHA;;;;AAiCO,MAAM,yCAA2B,6JAAA,CAAA,UAAK,CAAC,IAAI,MAAC,SAAS,yBAAyB,KAAoC;IACvH,qEAAqE;IACrE,yEAAyE;IACzE,6CAA6C;IAC7C,qBAAO,6LAAC,4IAAA,CAAA,sBAAmB;QAAE,GAAG,KAAK;;;;;;AACvC;;AAEA,sEAAsE;AACtE,yBAAyB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2837, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/ImageCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation'; // Import useRouter\r\nimport { PostInteractionButtons } from './PostInteractionButtons';\r\nimport { Lock, ShoppingCart, Loader2 } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { toast } from 'react-hot-toast';\r\nimport Image from 'next/image'; // Keep standard Image import\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { FaImage, FaLock } from 'react-icons/fa';\r\n\r\n// Define props for ImageCard\r\ninterface ImageCardProps {\r\n  id: string;\r\n  userId: string;\r\n  username: string;\r\n  profilePictureUrl?: string;\r\n  caption: string | null;\r\n  imageUrl: string;\r\n  likes: number;\r\n  comments: string;\r\n  shares: string;\r\n  isPrivate: boolean;\r\n  isOwner: boolean;\r\n  initialIsLiked: boolean;\r\n  is_for_sale: boolean;\r\n  price?: number | null;\r\n  currency?: string | null;\r\n  stripe_price_id?: string | null;\r\n  isLocked?: boolean;\r\n  isPaidContent?: boolean;\r\n}\r\n\r\n// Initialize Stripe outside component\r\nconst stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY!);\r\n\r\n// Helper function to format price\r\nconst formatPrice = (priceInCents: number, currency: string = 'usd') => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: currency.toUpperCase(),\r\n  }).format(priceInCents / 100);\r\n};\r\n\r\nexport function ImageCard({\r\n  id,\r\n  userId,\r\n  username,\r\n  profilePictureUrl,\r\n  caption,\r\n  imageUrl,\r\n  likes,\r\n  comments,\r\n  shares,\r\n  isPrivate,\r\n  isOwner,\r\n  initialIsLiked,\r\n  is_for_sale,\r\n  price,\r\n  currency,\r\n  stripe_price_id,\r\n  isLocked,\r\n}: ImageCardProps) {\r\n  const router = useRouter(); // Get router instance\r\n  const [isBuying, setIsBuying] = useState(false);\r\n  const userInitial = username.charAt(0).toUpperCase();\r\n\r\n  // Handler for profile click\r\n  const handleProfileClick = () => {\r\n    router.push(`/profile/${userId}`); // Navigate using the user's ID\r\n  };\r\n\r\n  // Determine lock status\r\n  const isContentLocked = is_for_sale || isLocked;\r\n\r\n  // Handle Buy Now click\r\n  const handleBuyClick = async (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!is_for_sale) return;\r\n\r\n    setIsBuying(true);\r\n    let sessionId = '';\r\n    try {\r\n      const response = await fetch('/api/stripe/create-item-checkout-session', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ postId: id }),\r\n      });\r\n      const sessionData = await response.json();\r\n      sessionId = sessionData.sessionId;\r\n      if (!response.ok || !sessionId) throw new Error(sessionData.error || 'Failed to create session.');\r\n      const stripe = await stripePromise;\r\n      if (!stripe) throw new Error('Stripe.js failed.');\r\n      const { error: stripeError } = await stripe.redirectToCheckout({ sessionId });\r\n      if (stripeError) throw new Error(stripeError.message || 'Redirect failed.');\r\n    } catch (err) {\r\n      const errorMsg = err instanceof Error ? err.message : 'Unknown error.';\r\n      toast.error(`Purchase failed: ${errorMsg}`);\r\n      if (sessionId) console.error(\"Session ID:\", sessionId);\r\n    } finally {\r\n      setIsBuying(false);\r\n    }\r\n  };\r\n\r\n  // Component for the main media area (image + overlays)\r\n  function MediaArea() {\r\n    return (\r\n      <div className=\"relative w-full h-full bg-black flex items-center justify-center overflow-hidden\">\r\n        {/* Image Display or Blackout */}\r\n        {isContentLocked ? (\r\n          <div className=\"w-full h-full bg-black\" />\r\n        ) : (\r\n          <img\r\n            src={imageUrl}\r\n            alt={caption || 'User uploaded image'}\r\n            className=\"w-full h-full object-contain\"\r\n            loading=\"lazy\"\r\n          />\r\n        )}\r\n\r\n        {/* Centered Overlay for Purchasable Content */}\r\n        {is_for_sale && (\r\n           <div className=\"absolute inset-0 flex flex-col items-center justify-center z-20 pointer-events-none\">\r\n             <FaLock className=\"text-4xl mb-2 text-white\" />\r\n             <span className=\"text-sm font-semibold text-white\">Purchase to View</span>\r\n             {price && currency && (\r\n               <Badge variant=\"secondary\" className=\"mt-1.5 text-sm font-bold\">\r\n                 {formatPrice(price, currency)}\r\n               </Badge>\r\n             )}\r\n             {isBuying && <Loader2 className=\"absolute top-4 right-4 h-5 w-5 animate-spin text-white\" />}\r\n           </div>\r\n        )}\r\n        {/* Centered Overlay for Subscription Locked Content */}\r\n        {isLocked && !is_for_sale && (\r\n           <div className=\"absolute inset-0 flex flex-col items-center justify-center z-20 pointer-events-none bg-black/60\">\r\n             <FaLock className=\"text-4xl mb-2 text-white\" />\r\n             <span className=\"text-xs font-semibold text-white\">Subscribe to View</span>\r\n           </div>\r\n        )}\r\n        {/* Bottom Info Overlay (Caption Only) - Show only if NOT locked */}\r\n        {!isContentLocked && caption && (\r\n           <div className=\"absolute inset-x-0 bottom-0 z-10 p-4 pointer-events-none bg-gradient-to-t from-black/60 via-black/30 to-transparent\">\r\n             <p className=\"text-white text-sm truncate\">{caption}</p>\r\n           </div>\r\n         )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative w-full h-full bg-black flex items-center justify-center overflow-hidden group\">\r\n\r\n      {/* Content Area (Link or Div) */}\r\n      {isContentLocked ? (\r\n        <div className=\"block w-full h-full cursor-default\">\r\n          <MediaArea />\r\n        </div>\r\n      ) : (\r\n        <Link href={`/image/${id}`} className=\"block w-full h-full\">\r\n          <MediaArea />\r\n        </Link>\r\n       )}\r\n\r\n      {/* Interaction Buttons - Rendered directly inside the relative root div */}\r\n      <PostInteractionButtons\r\n        postId={id}\r\n        userId={userId}\r\n           username={username}\r\n           profilePictureUrl={profilePictureUrl}\r\n           initialLikes={likes}\r\n           initialIsLiked={initialIsLiked}\r\n           commentsCount={comments}\r\n           sharesCount={shares}\r\n           initialIsPrivate={isPrivate ?? false}\r\n           isOwner={isOwner}\r\n           postType={'image'} // Pass 'image' directly\r\n           is_for_sale={is_for_sale}\r\n           price={price}\r\n           currency={currency}\r\n           // onProfileClick prop removed\r\n         />\r\n      {/* Removed the wrapper div */}\r\n\r\n      {/* Separate Buy Button (Only if for sale) */}\r\n      {is_for_sale && (\r\n         <Button\r\n           variant=\"default\"\r\n           size=\"sm\"\r\n           className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 z-30 h-8 px-4 text-sm bg-pink-600 hover:bg-pink-700 text-white rounded-full\"\r\n           onClick={handleBuyClick}\r\n           disabled={isBuying}\r\n           aria-label={`Buy ${caption || 'image'}`}\r\n         >\r\n           {isBuying ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : <ShoppingCart className=\"mr-2 h-4 w-4\" />}\r\n           {isBuying ? 'Processing...' : 'Buy'}\r\n         </Button>\r\n       )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3127, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Dialog = DialogPrimitive.Root\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger\r\n\r\nconst DialogPortal = DialogPrimitive.Portal\r\n\r\nconst DialogClose = DialogPrimitive.Close\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))\r\nDialogContent.displayName = DialogPrimitive.Content.displayName\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogHeader.displayName = \"DialogHeader\"\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nDialogFooter.displayName = \"DialogFooter\"\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogTrigger,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3278, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3506, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Textarea = React.forwardRef<\r\n  HTMLTextAreaElement,\r\n  React.ComponentProps<\"textarea\">\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <textarea\r\n      className={cn(\r\n        \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nTextarea.displayName = \"Textarea\"\r\n\r\nexport { Textarea }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6QACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AACA,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3541, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 3580, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/EditPostModal.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogClose, // Keep DialogClose\r\n} from \"@/components/ui/dialog\";\r\nimport { Textarea } from \"@/components/ui/textarea\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Loader2 } from 'lucide-react';\r\nimport { toast } from 'sonner';\r\nimport { useAuth } from '@/context/AuthContext'; // Import useAuth\r\n\r\ninterface EditPostModalProps {\r\n  postId: string | null;\r\n  initialCaption: string | null;\r\n  isOpen: boolean;\r\n  onOpenChange: (open: boolean) => void;\r\n  onSaveSuccess?: () => void; // Optional callback on successful save\r\n}\r\n\r\nexport function EditPostModal({\r\n  postId,\r\n  initialCaption,\r\n  isOpen,\r\n  onOpenChange,\r\n  onSaveSuccess,\r\n}: EditPostModalProps) {\r\n  const { user } = useAuth(); // Get logged-in user\r\n  const queryClient = useQueryClient();\r\n  const [caption, setCaption] = useState('');\r\n\r\n  // Reset caption when the modal opens with a new post\r\n  useEffect(() => {\r\n    if (isOpen && initialCaption !== null) {\r\n      setCaption(initialCaption);\r\n    } else if (!isOpen) {\r\n      // Optionally reset when closing, or let it persist until next open\r\n      // setCaption('');\r\n    }\r\n  }, [isOpen, initialCaption]);\r\n\r\n  const editPostMutation = useMutation({\r\n    mutationFn: async (newCaption: string) => {\r\n      if (!postId || !user) throw new Error(\"Post ID or user is missing.\");\r\n\r\n      const { error } = await supabase\r\n        .from('posts')\r\n        .update({ caption: newCaption.trim() || null }) // Update caption, set to null if empty/whitespace\r\n        .eq('id', postId)\r\n        .eq('user_id', user.id); // Ensure user owns the post\r\n\r\n      if (error) {\r\n        throw error;\r\n      }\r\n      return postId; // Return postId on success\r\n    },\r\n    onSuccess: (updatedPostId) => {\r\n      toast.success(\"Post updated successfully!\");\r\n      // Invalidate queries related to posts to refresh data\r\n      queryClient.invalidateQueries({ queryKey: ['homeFeedPosts', user?.id] });\r\n      // Optionally invalidate specific post query if you have one\r\n      // queryClient.invalidateQueries({ queryKey: ['post', updatedPostId] });\r\n      onSaveSuccess?.(); // Call the success callback if provided\r\n      onOpenChange(false); // Close the modal\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Failed to update post:\", error);\r\n      toast.error(`Failed to update post: ${error.message}`);\r\n    },\r\n  });\r\n\r\n  const handleSave = () => {\r\n    // Prevent saving if no changes or during mutation\r\n    if (caption === initialCaption || editPostMutation.isPending) {\r\n      // Optionally close if no changes, or show a message\r\n      if (caption === initialCaption) {\r\n        onOpenChange(false);\r\n      }\r\n      return;\r\n    }\r\n    editPostMutation.mutate(caption);\r\n  };\r\n\r\n  // Handle closing the dialog\r\n  const handleClose = () => {\r\n    if (!editPostMutation.isPending) {\r\n      onOpenChange(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={isOpen} onOpenChange={handleClose}>\r\n      <DialogContent className=\"sm:max-w-[425px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Edit Post</DialogTitle>\r\n          <DialogDescription>\r\n            Make changes to your post caption here. Click save when you're done.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        <div className=\"grid gap-4 py-4\">\r\n          <div className=\"grid grid-cols-4 items-center gap-4\">\r\n            <Label htmlFor=\"caption\" className=\"text-right\">\r\n              Caption\r\n            </Label>\r\n            <Textarea\r\n              id=\"caption\"\r\n              value={caption}\r\n              onChange={(e) => setCaption(e.target.value)}\r\n              className=\"col-span-3 h-24 resize-none\"\r\n              placeholder=\"Enter your caption\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <DialogFooter>\r\n          {/* Use DialogClose for the Cancel button */}\r\n          <DialogClose asChild>\r\n             <Button type=\"button\" variant=\"outline\" disabled={editPostMutation.isPending}>\r\n               Cancel\r\n             </Button>\r\n          </DialogClose>\r\n          <Button type=\"button\" onClick={handleSave} disabled={editPostMutation.isPending || caption === initialCaption}>\r\n            {editPostMutation.isPending && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\r\n            Save changes\r\n          </Button>\r\n        </DialogFooter>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AASA;AACA;AACA;AACA;AACA,oOAAiD,iBAAiB;;;AAnBlE;;;;;;;;;;;AA6BO,SAAS,cAAc,EAC5B,MAAM,EACN,cAAc,EACd,MAAM,EACN,YAAY,EACZ,aAAa,EACM;;IACnB,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD,KAAK,qBAAqB;IACjD,MAAM,cAAc,CAAA,GAAA,yLAAA,CAAA,iBAAc,AAAD;IACjC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,qDAAqD;IACrD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,UAAU,mBAAmB,MAAM;gBACrC,WAAW;YACb,OAAO,IAAI,CAAC,QAAQ;YAClB,mEAAmE;YACnE,kBAAkB;YACpB;QACF;kCAAG;QAAC;QAAQ;KAAe;IAE3B,MAAM,mBAAmB,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE;QACnC,UAAU;2DAAE,OAAO;gBACjB,IAAI,CAAC,UAAU,CAAC,MAAM,MAAM,IAAI,MAAM;gBAEtC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,+HAAA,CAAA,WAAQ,CAC7B,IAAI,CAAC,SACL,MAAM,CAAC;oBAAE,SAAS,WAAW,IAAI,MAAM;gBAAK,GAAG,kDAAkD;iBACjG,EAAE,CAAC,MAAM,QACT,EAAE,CAAC,WAAW,KAAK,EAAE,GAAG,4BAA4B;gBAEvD,IAAI,OAAO;oBACT,MAAM;gBACR;gBACA,OAAO,QAAQ,2BAA2B;YAC5C;;QACA,SAAS;2DAAE,CAAC;gBACV,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;gBACd,sDAAsD;gBACtD,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;wBAAiB,MAAM;qBAAG;gBAAC;gBACtE,4DAA4D;gBAC5D,wEAAwE;gBACxE,mBAAmB,wCAAwC;gBAC3D,aAAa,QAAQ,kBAAkB;YACzC;;QACA,OAAO;2DAAE,CAAC;gBACR,QAAQ,KAAK,CAAC,0BAA0B;gBACxC,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;YACvD;;IACF;IAEA,MAAM,aAAa;QACjB,kDAAkD;QAClD,IAAI,YAAY,kBAAkB,iBAAiB,SAAS,EAAE;YAC5D,oDAAoD;YACpD,IAAI,YAAY,gBAAgB;gBAC9B,aAAa;YACf;YACA;QACF;QACA,iBAAiB,MAAM,CAAC;IAC1B;IAEA,4BAA4B;IAC5B,MAAM,cAAc;QAClB,IAAI,CAAC,iBAAiB,SAAS,EAAE;YAC/B,aAAa;QACf;IACF;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;kBAClC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,6LAAC,qIAAA,CAAA,eAAY;;sCACX,6LAAC,qIAAA,CAAA,cAAW;sCAAC;;;;;;sCACb,6LAAC,qIAAA,CAAA,oBAAiB;sCAAC;;;;;;;;;;;;8BAIrB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,oIAAA,CAAA,QAAK;gCAAC,SAAQ;gCAAU,WAAU;0CAAa;;;;;;0CAGhD,6LAAC,uIAAA,CAAA,WAAQ;gCACP,IAAG;gCACH,OAAO;gCACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;gCAC1C,WAAU;gCACV,aAAY;;;;;;;;;;;;;;;;;8BAIlB,6LAAC,qIAAA,CAAA,eAAY;;sCAEX,6LAAC,qIAAA,CAAA,cAAW;4BAAC,OAAO;sCACjB,cAAA,6LAAC,qIAAA,CAAA,SAAM;gCAAC,MAAK;gCAAS,SAAQ;gCAAU,UAAU,iBAAiB,SAAS;0CAAE;;;;;;;;;;;sCAIjF,6LAAC,qIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,SAAS;4BAAY,UAAU,iBAAiB,SAAS,IAAI,YAAY;;gCAC5F,iBAAiB,SAAS,kBAAI,6LAAC,oNAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;gCAA+B;;;;;;;;;;;;;;;;;;;;;;;;AAO7F;GA5GgB;;QAOG,iIAAA,CAAA,UAAO;QACJ,yLAAA,CAAA,iBAAc;QAaT,iLAAA,CAAA,cAAW;;;KArBtB","debugId":null}},
    {"offset": {"line": 3820, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/VideoGrid.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport Link from 'next/link';\r\nimport { useRouter } from 'next/navigation';\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { ClientVideoPlayerWrapper } from \"./ClientVideoPlayerWrapper\";\r\nimport { ImageCard } from './ImageCard';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Trash2, Lock, Pencil, MoreHorizontal, Link as LinkIcon, Flag, Edit as EditIcon } from 'lucide-react';\r\nimport {\r\n  Dialog, DialogContent, DialogHeader, DialogTitle,\r\n  DialogDescription, DialogFooter\r\n} from \"@/components/ui/dialog\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"@/components/ui/dropdown-menu\";\r\n// Removed EditPostSaleModal import as EditPostModal handles caption edits\r\nimport { EditPostModal } from './EditPostModal';\r\nimport { useQueryClient, useMutation } from '@tanstack/react-query';\r\nimport { toast } from 'sonner';\r\nimport { Tables } from '@/lib/database.types'; // Import Tables type\r\n\r\n// Define types (assuming Tables<'posts'> includes all necessary fields)\r\ntype PostWithProfile = Tables<'posts'> & {\r\n  profiles: Pick<Tables<'profiles'>, 'username' | 'profile_picture_url'> | null; // Simplified profile type\r\n};\r\n\r\n// RawPostData might be redundant if Tables<'posts'> is accurate, but kept for safety\r\ntype RawPostData = Tables<'posts'> & {\r\n  profiles: Pick<Tables<'profiles'>, 'username' | 'profile_picture_url'> | null;\r\n};\r\n\r\n\r\ninterface VideoGridProps {\r\n  userId?: string; // For profile page\r\n  searchQuery?: string; // For search results\r\n  followedUserIds?: string[]; // For following feed\r\n  allowDeletion?: boolean;\r\n  disableClickToPlay?: boolean;\r\n  hideProgressBar?: boolean;\r\n}\r\n\r\nexport function VideoGrid({ userId, searchQuery, followedUserIds, allowDeletion = false, disableClickToPlay = false, hideProgressBar = false }: VideoGridProps) {\r\n  const router = useRouter();\r\n  const { user: loggedInUser } = useAuth();\r\n  const queryClient = useQueryClient();\r\n\r\n  // --- State Hooks ---\r\n  const [posts, setPosts] = useState<PostWithProfile[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isConfirmDeleteDialogOpen, setIsConfirmDeleteDialogOpen] = useState(false);\r\n  const [postIdToDelete, setPostIdToDelete] = useState<string | null>(null);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [editingPost, setEditingPost] = useState<PostWithProfile | null>(null);\r\n\r\n  // --- Mutations ---\r\n  const deletePostMutation = useMutation({\r\n    mutationFn: async (postId: string) => {\r\n      if (!loggedInUser) throw new Error(\"User not authenticated.\");\r\n      const postToDelete = posts?.find(p => p.id === postId);\r\n      const { error: dbError } = await supabase\r\n        .from('posts')\r\n        .delete()\r\n        .match({ id: postId, user_id: loggedInUser.id });\r\n      if (dbError) throw dbError;\r\n\r\n      if (postToDelete) {\r\n        let filePathToDelete: string | null = null;\r\n        if (postToDelete.type === 'image' && postToDelete.image_url) {\r\n          try { filePathToDelete = decodeURIComponent(postToDelete.image_url.split('/posts/')[1]); } catch (e) { console.error(\"Error parsing image URL:\", e); }\r\n        } else if (postToDelete.type === 'video' && postToDelete.video_url) {\r\n          try { filePathToDelete = decodeURIComponent(postToDelete.video_url.split('/posts/')[1]); } catch (e) { console.error(\"Error parsing video URL:\", e); }\r\n        }\r\n        if (filePathToDelete) {\r\n          const { error: storageError } = await supabase.storage.from('posts').remove([filePathToDelete]);\r\n          if (storageError) toast.warning(\"Post deleted, but failed to remove file.\");\r\n        }\r\n      }\r\n      return postId;\r\n    },\r\n    onSuccess: (deletedPostId: string) => {\r\n      toast.success(\"Post deleted successfully.\");\r\n      queryClient.invalidateQueries({ queryKey: ['posts', userId] });\r\n      queryClient.invalidateQueries({ queryKey: ['homeFeedPosts', loggedInUser?.id] });\r\n    },\r\n    onError: (error: Error) => {\r\n      toast.error(`Failed to delete post: ${error.message}`);\r\n    },\r\n    onSettled: () => {\r\n      setIsConfirmDeleteDialogOpen(false);\r\n      setPostIdToDelete(null);\r\n    }\r\n  });\r\n\r\n  // --- Callback Hooks ---\r\n  const openDeleteConfirmDialog = useCallback((postId: string) => {\r\n    setPostIdToDelete(postId);\r\n    setIsConfirmDeleteDialogOpen(true);\r\n  }, []);\r\n\r\n  const confirmDelete = useCallback(() => {\r\n    if (postIdToDelete) {\r\n      deletePostMutation.mutate(postIdToDelete);\r\n    }\r\n  }, [postIdToDelete, deletePostMutation]);\r\n\r\n  const openEditModal = useCallback((post: PostWithProfile) => {\r\n    setEditingPost(post);\r\n    setIsEditModalOpen(true);\r\n  }, []);\r\n\r\n  const handleCopyLink = useCallback((postId: string, postType: 'video' | 'image') => {\r\n    const url = `${window.location.origin}/${postType}/${postId}`;\r\n    navigator.clipboard.writeText(url)\r\n      .then(() => toast.success(\"Link copied!\"))\r\n      .catch(() => toast.error(\"Failed to copy link.\"));\r\n  }, []);\r\n\r\n  const handleReportPost = useCallback((postId: string) => {\r\n    toast.info(`Report action for post ${postId}. (Not implemented)`);\r\n  }, []);\r\n\r\n  // --- Effect Hooks ---\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        let query = supabase\r\n          .from('posts')\r\n          .select(`*, profiles (username, profile_picture_url)`) // Select necessary profile fields\r\n          .order('created_at', { ascending: false });\r\n\r\n        if (userId) {\r\n          query = query.eq('user_id', userId);\r\n        } else if (searchQuery?.trim()) {\r\n          query = query.ilike('caption', `%${searchQuery}%`).eq('is_private', false);\r\n        } else if (followedUserIds && followedUserIds.length > 0) {\r\n          query = query.in('user_id', followedUserIds);\r\n        } else {\r\n          query = query.eq('is_private', false).eq('is_for_sale', false);\r\n        }\r\n\r\n        const { data, error: fetchError } = await query;\r\n        if (fetchError) throw fetchError;\r\n\r\n        // Ensure data is correctly typed\r\n        setPosts((data as PostWithProfile[]) || []);\r\n\r\n      } catch (err: unknown) {\r\n        setError(err instanceof Error ? err.message : \"Error fetching posts.\");\r\n        setPosts([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, [userId, searchQuery, followedUserIds, supabase]); // Added supabase as dependency\r\n\r\n  // --- Render Logic ---\r\n  if (loading) return <div className=\"text-center p-4\">Loading posts...</div>;\r\n  if (error) return <div className=\"text-center text-red-500 p-4\">{error}</div>;\r\n  if (posts.length === 0) return <div className=\"text-center text-muted-foreground p-4\">No posts found.</div>;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 p-4\">\r\n        {posts.map((post) => {\r\n          const isOwner = loggedInUser?.id === post.user_id;\r\n          const isSubscriptionLocked = post.is_private && !isOwner;\r\n          const canNavigate = !isSubscriptionLocked;\r\n\r\n          let PostContent;\r\n          if (post.type === 'video' && post.video_url) {\r\n            PostContent = (\r\n              <ClientVideoPlayerWrapper\r\n                id={post.id}\r\n                userId={post.user_id}\r\n                username={post.profiles?.username || 'Unknown User'}\r\n                profilePictureUrl={post.profiles?.profile_picture_url || undefined}\r\n                caption={post.caption || ''}\r\n                videoSrc={post.video_url}\r\n                likes={(post.likes_count ?? 0).toString()}\r\n                comments={(post.comments_count ?? 0).toString()}\r\n                shares={'0'} // Assuming shares are not tracked or displayed here\r\n                isPrivate={post.is_private}\r\n                isOwner={isOwner}\r\n                is_for_sale={post.is_for_sale ?? false}\r\n                price={post.price}\r\n                currency={post.currency}\r\n                stripe_price_id={post.stripe_price_id}\r\n                isLocked={isSubscriptionLocked ?? undefined}\r\n                isPaidContent={post.is_private ?? undefined}\r\n                disableClickToPlay={disableClickToPlay}\r\n                hideProgressBar={hideProgressBar}\r\n              />\r\n            );\r\n          } else if (post.type === 'image' && post.image_url) {\r\n            PostContent = (\r\n              <ImageCard\r\n                id={post.id}\r\n                userId={post.user_id}\r\n                username={post.profiles?.username || 'Unknown User'}\r\n                profilePictureUrl={post.profiles?.profile_picture_url || undefined}\r\n                caption={post.caption}\r\n                imageUrl={post.image_url}\r\n                likes={post.likes_count ?? 0}\r\n                comments={(post.comments_count ?? 0).toString()}\r\n                shares={'0'} // Assuming shares are not tracked or displayed here\r\n                isPrivate={post.is_private ?? false}\r\n                isOwner={isOwner}\r\n                initialIsLiked={false} // Needs actual like status if available\r\n                is_for_sale={post.is_for_sale ?? false}\r\n                price={post.price}\r\n                currency={post.currency}\r\n                stripe_price_id={post.stripe_price_id}\r\n                isLocked={isSubscriptionLocked ?? undefined}\r\n                isPaidContent={post.is_private ?? undefined}\r\n              />\r\n            );\r\n          } else {\r\n            PostContent = <div className=\"w-full h-full flex items-center justify-center bg-gray-800 text-white text-xs p-2\">Invalid post data</div>;\r\n          }\r\n\r\n          const handleNavigate = () => {\r\n            if (canNavigate) {\r\n              const detailUrl = post.type === 'video' ? `/video/${post.id}` : `/image/${post.id}`;\r\n              router.push(detailUrl);\r\n            } else {\r\n              toast('Subscription required to view this content.');\r\n            }\r\n          };\r\n\r\n          return (\r\n            <div\r\n              key={post.id}\r\n              className=\"aspect-[9/16] overflow-hidden rounded-lg relative group bg-black cursor-pointer\"\r\n              onClick={handleNavigate}\r\n            >\r\n              <>\r\n                {PostContent}\r\n                {!canNavigate && (\r\n                  <div className=\"absolute inset-0 bg-black/60 flex items-center justify-center z-10 pointer-events-none\">\r\n                    <Lock className=\"h-10 w-10 text-white/80\" />\r\n                  </div>\r\n                )}\r\n              </>\r\n\r\n              {/* Top-Left Buttons (Kept for now, consider removing if dropdown replaces fully) */}\r\n              {allowDeletion && isOwner && (\r\n                <div className=\"absolute top-2 left-2 z-40 flex gap-1 opacity-0 group-hover:opacity-100 transition-opacity\">\r\n                   {/* This button now opens the caption edit modal */}\r\n                   <Button\r\n                     variant=\"outline\" size=\"icon\" className=\"h-7 w-7 bg-black/50 hover:bg-black/70 border-white/30 text-white\"\r\n                     onClick={(e) => { e.stopPropagation(); e.preventDefault(); openEditModal(post); }}\r\n                     aria-label=\"Edit post caption\"\r\n                   > <Pencil className=\"h-4 w-4\" /> </Button>\r\n                   {/* This button opens the delete confirmation */}\r\n                   <Button\r\n                     variant=\"destructive\" size=\"icon\" className=\"h-7 w-7 bg-black/50 hover:bg-red-700\"\r\n                     onClick={(e) => { e.stopPropagation(); e.preventDefault(); openDeleteConfirmDialog(post.id); }}\r\n                     disabled={deletePostMutation.isPending && postIdToDelete === post.id}\r\n                     aria-label=\"Delete post\"\r\n                   >\r\n                     {(deletePostMutation.isPending && postIdToDelete === post.id) ? <div className=\"animate-spin rounded-full h-4 w-4 border-t-2 border-b-2 border-white\"></div> : <Trash2 className=\"h-4 w-4\" />}\r\n                   </Button>\r\n                 </div>\r\n              )}\r\n\r\n              {/* More Options Dropdown (Top Right) */}\r\n              <div className=\"absolute top-2 right-2 z-40 opacity-0 group-hover:opacity-100 transition-opacity\">\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"ghost\" size=\"icon\" className=\"h-7 w-7 bg-black/50 hover:bg-black/70 text-white\">\r\n                      <MoreHorizontal className=\"h-4 w-4\" />\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent align=\"end\" onClick={(e: React.MouseEvent) => e.stopPropagation()}>\r\n                    <DropdownMenuItem onClick={() => handleCopyLink(post.id, post.type as 'video' | 'image')}>\r\n                      <LinkIcon className=\"mr-2 h-4 w-4\" /><span>Copy link</span>\r\n                    </DropdownMenuItem>\r\n                    {isOwner ? (\r\n                      <>\r\n                        <DropdownMenuItem onClick={() => openEditModal(post)}>\r\n                          <EditIcon className=\"mr-2 h-4 w-4\" /><span>Edit caption</span>\r\n                        </DropdownMenuItem>\r\n                        <DropdownMenuSeparator />\r\n                        <DropdownMenuItem className=\"text-red-600 focus:text-red-700 focus:bg-red-50\" onClick={() => openDeleteConfirmDialog(post.id)}>\r\n                          <Trash2 className=\"mr-2 h-4 w-4\" /><span>Delete post</span>\r\n                        </DropdownMenuItem>\r\n                      </>\r\n                    ) : (\r\n                      <DropdownMenuItem onClick={() => handleReportPost(post.id)}>\r\n                        <Flag className=\"mr-2 h-4 w-4\" /><span>Report post</span>\r\n                      </DropdownMenuItem>\r\n                    )}\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Delete Confirmation Dialog */}\r\n      <Dialog open={isConfirmDeleteDialogOpen} onOpenChange={setIsConfirmDeleteDialogOpen}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Confirm Deletion</DialogTitle>\r\n            <DialogDescription>Are you sure you want to permanently delete this post? This action cannot be undone.</DialogDescription>\r\n          </DialogHeader>\r\n          <DialogFooter>\r\n            <Button variant=\"outline\" onClick={() => setIsConfirmDeleteDialogOpen(false)} disabled={deletePostMutation.isPending}>Cancel</Button>\r\n            <Button variant=\"destructive\" onClick={confirmDelete} disabled={deletePostMutation.isPending}>\r\n              {deletePostMutation.isPending ? 'Deleting...' : 'Delete Post'}\r\n            </Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Edit Caption Modal */}\r\n      {editingPost && (\r\n        <EditPostModal\r\n          postId={editingPost.id}\r\n          initialCaption={editingPost.caption}\r\n          isOpen={isEditModalOpen}\r\n          onOpenChange={setIsEditModalOpen}\r\n          onSaveSuccess={() => setEditingPost(null)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAOA,0EAA0E;AAC1E;AACA;AAAA;AACA;;;AAzBA;;;;;;;;;;;;;;AAgDO,SAAS,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,gBAAgB,KAAK,EAAE,qBAAqB,KAAK,EAAE,kBAAkB,KAAK,EAAkB;;IAC5J,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,MAAM,YAAY,EAAE,GAAG,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD;IACrC,MAAM,cAAc,CAAA,GAAA,yLAAA,CAAA,iBAAc,AAAD;IAEjC,sBAAsB;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB,EAAE;IACxD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,2BAA2B,6BAA6B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3E,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACpE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA0B;IAEvE,oBAAoB;IACpB,MAAM,qBAAqB,CAAA,GAAA,iLAAA,CAAA,cAAW,AAAD,EAAE;QACrC,UAAU;yDAAE,OAAO;gBACjB,IAAI,CAAC,cAAc,MAAM,IAAI,MAAM;gBACnC,MAAM,eAAe,OAAO;iEAAK,CAAA,IAAK,EAAE,EAAE,KAAK;;gBAC/C,MAAM,EAAE,OAAO,OAAO,EAAE,GAAG,MAAM,+HAAA,CAAA,WAAQ,CACtC,IAAI,CAAC,SACL,MAAM,GACN,KAAK,CAAC;oBAAE,IAAI;oBAAQ,SAAS,aAAa,EAAE;gBAAC;gBAChD,IAAI,SAAS,MAAM;gBAEnB,IAAI,cAAc;oBAChB,IAAI,mBAAkC;oBACtC,IAAI,aAAa,IAAI,KAAK,WAAW,aAAa,SAAS,EAAE;wBAC3D,IAAI;4BAAE,mBAAmB,mBAAmB,aAAa,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;wBAAG,EAAE,OAAO,GAAG;4BAAE,QAAQ,KAAK,CAAC,4BAA4B;wBAAI;oBACvJ,OAAO,IAAI,aAAa,IAAI,KAAK,WAAW,aAAa,SAAS,EAAE;wBAClE,IAAI;4BAAE,mBAAmB,mBAAmB,aAAa,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE;wBAAG,EAAE,OAAO,GAAG;4BAAE,QAAQ,KAAK,CAAC,4BAA4B;wBAAI;oBACvJ;oBACA,IAAI,kBAAkB;wBACpB,MAAM,EAAE,OAAO,YAAY,EAAE,GAAG,MAAM,+HAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,MAAM,CAAC;4BAAC;yBAAiB;wBAC9F,IAAI,cAAc,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;oBAClC;gBACF;gBACA,OAAO;YACT;;QACA,SAAS;yDAAE,CAAC;gBACV,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;gBACd,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;wBAAS;qBAAO;gBAAC;gBAC5D,YAAY,iBAAiB,CAAC;oBAAE,UAAU;wBAAC;wBAAiB,cAAc;qBAAG;gBAAC;YAChF;;QACA,OAAO;yDAAE,CAAC;gBACR,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC,CAAC,uBAAuB,EAAE,MAAM,OAAO,EAAE;YACvD;;QACA,SAAS;yDAAE;gBACT,6BAA6B;gBAC7B,kBAAkB;YACpB;;IACF;IAEA,yBAAyB;IACzB,MAAM,0BAA0B,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;0DAAE,CAAC;YAC3C,kBAAkB;YAClB,6BAA6B;QAC/B;yDAAG,EAAE;IAEL,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;gDAAE;YAChC,IAAI,gBAAgB;gBAClB,mBAAmB,MAAM,CAAC;YAC5B;QACF;+CAAG;QAAC;QAAgB;KAAmB;IAEvC,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;gDAAE,CAAC;YACjC,eAAe;YACf,mBAAmB;QACrB;+CAAG,EAAE;IAEL,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;iDAAE,CAAC,QAAgB;YAClD,MAAM,MAAM,GAAG,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,QAAQ;YAC7D,UAAU,SAAS,CAAC,SAAS,CAAC,KAC3B,IAAI;yDAAC,IAAM,2IAAA,CAAA,QAAK,CAAC,OAAO,CAAC;wDACzB,KAAK;yDAAC,IAAM,2IAAA,CAAA,QAAK,CAAC,KAAK,CAAC;;QAC7B;gDAAG,EAAE;IAEL,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mDAAE,CAAC;YACpC,2IAAA,CAAA,QAAK,CAAC,IAAI,CAAC,CAAC,uBAAuB,EAAE,OAAO,mBAAmB,CAAC;QAClE;kDAAG,EAAE;IAEL,uBAAuB;IACvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,MAAM;kDAAa;oBACjB,WAAW;oBACX,SAAS;oBACT,IAAI;wBACF,IAAI,QAAQ,+HAAA,CAAA,WAAQ,CACjB,IAAI,CAAC,SACL,MAAM,CAAC,CAAC,2CAA2C,CAAC,EAAE,kCAAkC;yBACxF,KAAK,CAAC,cAAc;4BAAE,WAAW;wBAAM;wBAE1C,IAAI,QAAQ;4BACV,QAAQ,MAAM,EAAE,CAAC,WAAW;wBAC9B,OAAO,IAAI,aAAa,QAAQ;4BAC9B,QAAQ,MAAM,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,EAAE,CAAC,cAAc;wBACtE,OAAO,IAAI,mBAAmB,gBAAgB,MAAM,GAAG,GAAG;4BACxD,QAAQ,MAAM,EAAE,CAAC,WAAW;wBAC9B,OAAO;4BACL,QAAQ,MAAM,EAAE,CAAC,cAAc,OAAO,EAAE,CAAC,eAAe;wBAC1D;wBAEA,MAAM,EAAE,IAAI,EAAE,OAAO,UAAU,EAAE,GAAG,MAAM;wBAC1C,IAAI,YAAY,MAAM;wBAEtB,iCAAiC;wBACjC,SAAS,AAAC,QAA8B,EAAE;oBAE5C,EAAE,OAAO,KAAc;wBACrB,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;wBAC9C,SAAS,EAAE;oBACb,SAAU;wBACR,WAAW;oBACb;gBACF;;YACA;QACF;8BAAG;QAAC;QAAQ;QAAa;QAAiB,+HAAA,CAAA,WAAQ;KAAC,GAAG,+BAA+B;IAErF,uBAAuB;IACvB,IAAI,SAAS,qBAAO,6LAAC;QAAI,WAAU;kBAAkB;;;;;;IACrD,IAAI,OAAO,qBAAO,6LAAC;QAAI,WAAU;kBAAgC;;;;;;IACjE,IAAI,MAAM,MAAM,KAAK,GAAG,qBAAO,6LAAC;QAAI,WAAU;kBAAwC;;;;;;IAEtF,qBACE;;0BACE,6LAAC;gBAAI,WAAU;0BACZ,MAAM,GAAG,CAAC,CAAC;oBACV,MAAM,UAAU,cAAc,OAAO,KAAK,OAAO;oBACjD,MAAM,uBAAuB,KAAK,UAAU,IAAI,CAAC;oBACjD,MAAM,cAAc,CAAC;oBAErB,IAAI;oBACJ,IAAI,KAAK,IAAI,KAAK,WAAW,KAAK,SAAS,EAAE;wBAC3C,4BACE,6LAAC,iJAAA,CAAA,2BAAwB;4BACvB,IAAI,KAAK,EAAE;4BACX,QAAQ,KAAK,OAAO;4BACpB,UAAU,KAAK,QAAQ,EAAE,YAAY;4BACrC,mBAAmB,KAAK,QAAQ,EAAE,uBAAuB;4BACzD,SAAS,KAAK,OAAO,IAAI;4BACzB,UAAU,KAAK,SAAS;4BACxB,OAAO,CAAC,KAAK,WAAW,IAAI,CAAC,EAAE,QAAQ;4BACvC,UAAU,CAAC,KAAK,cAAc,IAAI,CAAC,EAAE,QAAQ;4BAC7C,QAAQ;4BACR,WAAW,KAAK,UAAU;4BAC1B,SAAS;4BACT,aAAa,KAAK,WAAW,IAAI;4BACjC,OAAO,KAAK,KAAK;4BACjB,UAAU,KAAK,QAAQ;4BACvB,iBAAiB,KAAK,eAAe;4BACrC,UAAU,wBAAwB;4BAClC,eAAe,KAAK,UAAU,IAAI;4BAClC,oBAAoB;4BACpB,iBAAiB;;;;;;oBAGvB,OAAO,IAAI,KAAK,IAAI,KAAK,WAAW,KAAK,SAAS,EAAE;wBAClD,4BACE,6LAAC,kIAAA,CAAA,YAAS;4BACR,IAAI,KAAK,EAAE;4BACX,QAAQ,KAAK,OAAO;4BACpB,UAAU,KAAK,QAAQ,EAAE,YAAY;4BACrC,mBAAmB,KAAK,QAAQ,EAAE,uBAAuB;4BACzD,SAAS,KAAK,OAAO;4BACrB,UAAU,KAAK,SAAS;4BACxB,OAAO,KAAK,WAAW,IAAI;4BAC3B,UAAU,CAAC,KAAK,cAAc,IAAI,CAAC,EAAE,QAAQ;4BAC7C,QAAQ;4BACR,WAAW,KAAK,UAAU,IAAI;4BAC9B,SAAS;4BACT,gBAAgB;4BAChB,aAAa,KAAK,WAAW,IAAI;4BACjC,OAAO,KAAK,KAAK;4BACjB,UAAU,KAAK,QAAQ;4BACvB,iBAAiB,KAAK,eAAe;4BACrC,UAAU,wBAAwB;4BAClC,eAAe,KAAK,UAAU,IAAI;;;;;;oBAGxC,OAAO;wBACL,4BAAc,6LAAC;4BAAI,WAAU;sCAAoF;;;;;;oBACnH;oBAEA,MAAM,iBAAiB;wBACrB,IAAI,aAAa;4BACf,MAAM,YAAY,KAAK,IAAI,KAAK,UAAU,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;4BACnF,OAAO,IAAI,CAAC;wBACd,OAAO;4BACL,CAAA,GAAA,2IAAA,CAAA,QAAK,AAAD,EAAE;wBACR;oBACF;oBAEA,qBACE,6LAAC;wBAEC,WAAU;wBACV,SAAS;;0CAET;;oCACG;oCACA,CAAC,6BACA,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC,qMAAA,CAAA,OAAI;4CAAC,WAAU;;;;;;;;;;;;;4BAMrB,iBAAiB,yBAChB,6LAAC;gCAAI,WAAU;;kDAEZ,6LAAC,qIAAA,CAAA,SAAM;wCACL,SAAQ;wCAAU,MAAK;wCAAO,WAAU;wCACxC,SAAS,CAAC;4CAAQ,EAAE,eAAe;4CAAI,EAAE,cAAc;4CAAI,cAAc;wCAAO;wCAChF,cAAW;;4CACZ;0DAAC,6LAAC,yMAAA,CAAA,SAAM;gDAAC,WAAU;;;;;;4CAAY;;;;;;;kDAEhC,6LAAC,qIAAA,CAAA,SAAM;wCACL,SAAQ;wCAAc,MAAK;wCAAO,WAAU;wCAC5C,SAAS,CAAC;4CAAQ,EAAE,eAAe;4CAAI,EAAE,cAAc;4CAAI,wBAAwB,KAAK,EAAE;wCAAG;wCAC7F,UAAU,mBAAmB,SAAS,IAAI,mBAAmB,KAAK,EAAE;wCACpE,cAAW;kDAEV,AAAC,mBAAmB,SAAS,IAAI,mBAAmB,KAAK,EAAE,iBAAI,6LAAC;4CAAI,WAAU;;;;;iEAAgF,6LAAC,6MAAA,CAAA,SAAM;4CAAC,WAAU;;;;;;;;;;;;;;;;;0CAMxL,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC,+IAAA,CAAA,eAAY;;sDACX,6LAAC,+IAAA,CAAA,sBAAmB;4CAAC,OAAO;sDAC1B,cAAA,6LAAC,qIAAA,CAAA,SAAM;gDAAC,SAAQ;gDAAQ,MAAK;gDAAO,WAAU;0DAC5C,cAAA,6LAAC,mNAAA,CAAA,iBAAc;oDAAC,WAAU;;;;;;;;;;;;;;;;sDAG9B,6LAAC,+IAAA,CAAA,sBAAmB;4CAAC,OAAM;4CAAM,SAAS,CAAC,IAAwB,EAAE,eAAe;;8DAClF,6LAAC,+IAAA,CAAA,mBAAgB;oDAAC,SAAS,IAAM,eAAe,KAAK,EAAE,EAAE,KAAK,IAAI;;sEAChE,6LAAC,qMAAA,CAAA,OAAQ;4DAAC,WAAU;;;;;;sEAAiB,6LAAC;sEAAK;;;;;;;;;;;;gDAE5C,wBACC;;sEACE,6LAAC,+IAAA,CAAA,mBAAgB;4DAAC,SAAS,IAAM,cAAc;;8EAC7C,6LAAC,8MAAA,CAAA,OAAQ;oEAAC,WAAU;;;;;;8EAAiB,6LAAC;8EAAK;;;;;;;;;;;;sEAE7C,6LAAC,+IAAA,CAAA,wBAAqB;;;;;sEACtB,6LAAC,+IAAA,CAAA,mBAAgB;4DAAC,WAAU;4DAAkD,SAAS,IAAM,wBAAwB,KAAK,EAAE;;8EAC1H,6LAAC,6MAAA,CAAA,SAAM;oEAAC,WAAU;;;;;;8EAAiB,6LAAC;8EAAK;;;;;;;;;;;;;iFAI7C,6LAAC,+IAAA,CAAA,mBAAgB;oDAAC,SAAS,IAAM,iBAAiB,KAAK,EAAE;;sEACvD,6LAAC,qMAAA,CAAA,OAAI;4DAAC,WAAU;;;;;;sEAAiB,6LAAC;sEAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBA1D5C,KAAK,EAAE;;;;;gBAkElB;;;;;;0BAIF,6LAAC,qIAAA,CAAA,SAAM;gBAAC,MAAM;gBAA2B,cAAc;0BACrD,cAAA,6LAAC,qIAAA,CAAA,gBAAa;;sCACZ,6LAAC,qIAAA,CAAA,eAAY;;8CACX,6LAAC,qIAAA,CAAA,cAAW;8CAAC;;;;;;8CACb,6LAAC,qIAAA,CAAA,oBAAiB;8CAAC;;;;;;;;;;;;sCAErB,6LAAC,qIAAA,CAAA,eAAY;;8CACX,6LAAC,qIAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAU,SAAS,IAAM,6BAA6B;oCAAQ,UAAU,mBAAmB,SAAS;8CAAE;;;;;;8CACtH,6LAAC,qIAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAc,SAAS;oCAAe,UAAU,mBAAmB,SAAS;8CACzF,mBAAmB,SAAS,GAAG,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;YAOvD,6BACC,6LAAC,sIAAA,CAAA,gBAAa;gBACZ,QAAQ,YAAY,EAAE;gBACtB,gBAAgB,YAAY,OAAO;gBACnC,QAAQ;gBACR,cAAc;gBACd,eAAe,IAAM,eAAe;;;;;;;;AAK9C;GAnSgB;;QACC,qIAAA,CAAA,YAAS;QACO,iIAAA,CAAA,UAAO;QAClB,yLAAA,CAAA,iBAAc;QAYP,iLAAA,CAAA,cAAW;;;KAfxB","debugId":null}},
    {"offset": {"line": 4471, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/MainLayout.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, type ReactNode } from \"react\";\r\nimport { Sidebar } from \"@/components/Sidebar\";\r\nimport { Header } from \"@/components/Header\";\r\nimport { SearchPanel } from \"./SearchPanel\";\r\n// import { SearchResultsDisplay } from \"./SearchResultsDisplay\"; // Remove this import\r\nimport { VideoGrid } from \"./VideoGrid\"; // Import VideoGrid\r\n\r\ninterface MainLayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function MainLayout({ children }: MainLayoutProps) {\r\n  const [activeSearchQuery, setActiveSearchQuery] = useState('');\r\n  const [isSearchActive, setIsSearchActive] = useState(false);\r\n  const [isSearchPanelVisible, setIsSearchPanelVisible] = useState(false); // State for the panel\r\n\r\n  // Toggle search panel visibility\r\n  const toggleSearchPanel = () => {\r\n    setIsSearchPanelVisible(prev => !prev);\r\n    // Optionally deactivate search results when closing panel\r\n    if (isSearchPanelVisible) {\r\n       // setIsSearchActive(false); // Decide if closing panel should clear results\r\n    }\r\n  };\r\n\r\n  // Deactivate search mode (e.g., when clicking nav links)\r\n  const deactivateSearch = () => {\r\n    setIsSearchActive(false);\r\n    setIsSearchPanelVisible(false); // Also close panel\r\n    setActiveSearchQuery(''); // Clear query\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen bg-background\">\r\n      {/* Fixed sidebar - Pass correct handlers */}\r\n      <div className=\"fixed left-0 top-0 w-[240px] h-full z-30\">\r\n        <Sidebar\r\n          toggleSearchPanel={toggleSearchPanel}\r\n          deactivateSearch={deactivateSearch}\r\n        />\r\n      </div>\r\n\r\n      {/* Search Panel (conditionally rendered) */}\r\n      {isSearchPanelVisible && (\r\n         <SearchPanel\r\n            isVisible={isSearchPanelVisible} // Pass visibility state\r\n            setActiveSearchQuery={setActiveSearchQuery} // Pass setter for main content query\r\n            setIsSearchActive={setIsSearchActive} // Pass setter for search mode\r\n            closePanel={() => setIsSearchPanelVisible(false)} // Pass close handler\r\n         />\r\n      )}\r\n\r\n      {/* Main content area - Adjust margin based on search panel visibility */}\r\n      <div className={`w-full transition-all duration-200 ease-in-out ${isSearchPanelVisible ? 'ml-[540px]' : 'ml-[240px]'}`}> {/* Adjust margin: 240 + 300 = 540 */}\r\n        {/* Fixed header */}\r\n        <div className={`fixed top-0 right-0 transition-all duration-200 ease-in-out z-10 ${isSearchPanelVisible ? 'left-[540px]' : 'left-[240px]'}`}>\r\n          <Header />\r\n        </div>\r\n\r\n        {/* Conditional Content: Render Search Results or Page Content */}\r\n        <div className=\"w-full pt-14 h-[calc(100vh-theme(space.14))] overflow-y-auto\">\r\n          {isSearchActive && activeSearchQuery.trim() ? (\r\n            // Render VideoGrid with the search query when search is active\r\n            <VideoGrid searchQuery={activeSearchQuery} />\r\n          ) : (\r\n            // Render the normal page content (children)\r\n            children\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA,uFAAuF;AACvF,sOAAyC,mBAAmB;;;AAP5D;;;;;;AAaO,SAAS,WAAW,EAAE,QAAQ,EAAmB;;IACtD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,sBAAsB;IAE/F,iCAAiC;IACjC,MAAM,oBAAoB;QACxB,wBAAwB,CAAA,OAAQ,CAAC;QACjC,0DAA0D;QAC1D,IAAI,sBAAsB;QACvB,4EAA4E;QAC/E;IACF;IAEA,yDAAyD;IACzD,MAAM,mBAAmB;QACvB,kBAAkB;QAClB,wBAAwB,QAAQ,mBAAmB;QACnD,qBAAqB,KAAK,cAAc;IAC1C;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,gIAAA,CAAA,UAAO;oBACN,mBAAmB;oBACnB,kBAAkB;;;;;;;;;;;YAKrB,sCACE,6LAAC,oIAAA,CAAA,cAAW;gBACT,WAAW;gBACX,sBAAsB;gBACtB,mBAAmB;gBACnB,YAAY,IAAM,wBAAwB;;;;;;0BAKhD,6LAAC;gBAAI,WAAW,CAAC,+CAA+C,EAAE,uBAAuB,eAAe,cAAc;;oBAAE;kCAEtH,6LAAC;wBAAI,WAAW,CAAC,iEAAiE,EAAE,uBAAuB,iBAAiB,gBAAgB;kCAC1I,cAAA,6LAAC,+HAAA,CAAA,SAAM;;;;;;;;;;kCAIT,6LAAC;wBAAI,WAAU;kCACZ,kBAAkB,kBAAkB,IAAI,KACvC,+DAA+D;sCAC/D,6LAAC,kIAAA,CAAA,YAAS;4BAAC,aAAa;;;;;mCAExB,4CAA4C;wBAC5C;;;;;;;;;;;;;;;;;;AAMZ;GA7DgB;KAAA","debugId":null}},
    {"offset": {"line": 4594, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/kevin/Desktop/tiktok-clone/src/components/MessagesPage.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\r\nimport { useSearchParams } from 'next/navigation';\r\n// Import RealtimePresenceState type\r\nimport { RealtimeChannel, RealtimePostgresChangesPayload, RealtimePresenceState } from '@supabase/supabase-js';\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\r\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\"; // Removed AvatarImage import as it's commented out\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { FaSmile, FaPaperPlane } from \"react-icons/fa\";\r\nimport { FiSearch, FiMessageSquare, FiLoader } from \"react-icons/fi\";\r\nimport EmojiPicker, { EmojiClickData, Theme } from 'emoji-picker-react';\r\nimport { cn } from \"@/lib/utils\";\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { supabase } from '@/lib/supabaseClient';\r\nimport { toast } from 'react-hot-toast';\r\nimport { Database } from '@/lib/database.types'; // Import generated types\r\n\r\n// Use generated types if available, otherwise fallback to interfaces\r\ntype UserProfile = Database['public']['Tables']['profiles']['Row'];\r\ntype Message = Database['public']['Tables']['messages']['Row'];\r\ntype Conversation = Database['public']['Tables']['conversations']['Row'] & {\r\n    participantDetails?: { [userId: string]: UserProfile }; // Add participantDetails back\r\n    unreadCount?: { [userId: string]: number }; // Add unreadCount back\r\n};\r\n\r\n// Interface for presence payload to fix 'any' type\r\ninterface PresencePayload {\r\n  typing?: boolean;\r\n  [key: string]: unknown; // Use unknown instead of any for better type safety\r\n}\r\n\r\n/* Fallback Interfaces if generated types are not configured/working\r\ninterface UserProfile {\r\n  id: string;\r\n  username: string;\r\n  avatar_url?: string | null; // Allow null from DB\r\n}\r\n\r\ninterface Message {\r\n  // Assuming id is UUID based on Supabase default. Change if it's different (e.g., number for bigint).\r\n  id: string;\r\n  conversation_id: string; // UUID\r\n  sender_uid: string; // UUID\r\n  content: string;\r\n  created_at: string; // ISO timestamp string\r\n}\r\n\r\ninterface Conversation {\r\n  id: string; // UUID\r\n  participant_uids: string[]; // Array of UUIDs\r\n  participantDetails?: { [userId: string]: UserProfile }; // Keyed by UUID\r\n  last_message_content?: string | null; // Allow null\r\n  last_message_sender_uid?: string | null; // Allow null\r\n  last_message_created_at?: string | null; // Allow null\r\n  updated_at: string; // ISO timestamp string\r\n  // Unread count logic might need adjustment based on Supabase schema/triggers\r\n  unreadCount?: { [userId: string]: number };\r\n}\r\n*/ // End of fallback interfaces\r\n\r\n\r\n// --- Utility Functions ---\r\nconst getOtherParticipantId = (conversation: Conversation | null, currentUserId: string): string | undefined => {\r\n  // Ensure participant_uids exists and is an array before finding\r\n  if (!conversation?.participant_uids || !Array.isArray(conversation.participant_uids)) {\r\n      return undefined;\r\n  }\r\n  return conversation.participant_uids.find(pId => pId !== currentUserId);\r\n};\r\n\r\n// Updated to handle ISO strings from Supabase\r\nconst formatMessageTime = (timestampString: string | undefined | null): string => { // Allow null\r\n  if (!timestampString) return '';\r\n  const date = new Date(timestampString);\r\n  if (isNaN(date.getTime())) return ''; // Invalid date string\r\n\r\n  const now = new Date();\r\n  const yesterday = new Date(now);\r\n  yesterday.setDate(now.getDate() - 1);\r\n\r\n  if (date.toDateString() === now.toDateString()) {\r\n    return date.toLocaleTimeString(undefined, { hour: 'numeric', minute: '2-digit' });\r\n  } else if (date.toDateString() === yesterday.toDateString()) {\r\n    return 'Yesterday';\r\n  } else {\r\n    return date.toLocaleDateString(undefined, { month: 'short', day: 'numeric' });\r\n  }\r\n};\r\n\r\n// --- Sub-Components ---\r\n\r\nconst ConversationItem: React.FC<{\r\n  conversation: Conversation;\r\n  isSelected: boolean;\r\n  onClick: () => void;\r\n  currentUserId: string;\r\n}> = ({ conversation, isSelected, onClick, currentUserId }) => {\r\n  const otherUserId = getOtherParticipantId(conversation, currentUserId);\r\n  const otherUser = otherUserId ? conversation.participantDetails?.[otherUserId] : undefined;\r\n  const lastMessageContent = conversation.last_message_content;\r\n  const lastMessageSenderUid = conversation.last_message_sender_uid;\r\n  const lastMessageCreatedAt = conversation.last_message_created_at;\r\n  const unread = conversation.unreadCount?.[currentUserId] ?? 0;\r\n\r\n  // Loading state if participant details aren't loaded yet\r\n  if (!otherUser) {\r\n      return (\r\n          <div className=\"flex items-center p-3 h-[72px] animate-pulse\">\r\n              <div className=\"h-12 w-12 rounded-full bg-gray-300 dark:bg-gray-700\"></div>\r\n              <div className=\"ml-3 flex-1 space-y-2\">\r\n                  <div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-3/4\"></div>\r\n                  <div className=\"h-3 bg-gray-300 dark:bg-gray-700 rounded w-1/2\"></div>\r\n              </div>\r\n          </div>\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"flex items-center p-3 cursor-pointer hover:bg-gray-100 dark:hover:bg-gray-800 transition-colors rounded-md mb-1\",\r\n        isSelected && \"bg-gray-100 dark:bg-gray-800\"\r\n      )}\r\n      onClick={onClick}\r\n    >\r\n      <div className=\"relative\">\r\n        <Avatar className=\"h-12 w-12\">\r\n          {/* Removed avatar_url reference - Assuming UserProfile type doesn't have it */}\r\n          {/* <AvatarImage src={otherUser.avatar_url ?? undefined} alt={otherUser.username ?? 'User'} /> */}\r\n          <AvatarFallback>{otherUser.username?.substring(0, 2).toUpperCase() ?? '??'}</AvatarFallback>\r\n        </Avatar>\r\n        {/* Online status logic can be added later */}\r\n      </div>\r\n        <div className=\"ml-3 flex-1 overflow-hidden\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <p className=\"font-medium truncate\">{otherUser.username ?? 'Unknown User'}</p>\r\n            {lastMessageCreatedAt && (\r\n              <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                {formatMessageTime(lastMessageCreatedAt)}\r\n              </span>\r\n            )}\r\n          </div>\r\n          <div className=\"flex items-center justify-between\">\r\n            {lastMessageContent && (\r\n              <p className={cn(\r\n                  \"text-sm truncate text-gray-500 dark:text-gray-400 max-w-[70%]\",\r\n                  unread > 0 && \"font-semibold text-gray-800 dark:text-gray-200\"\r\n              )}>\r\n                {lastMessageSenderUid === currentUserId ? 'You: ' : ''}\r\n                {lastMessageContent}\r\n              </p>\r\n            )}\r\n            {unread > 0 && (\r\n              <span className=\"bg-blue-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center\">\r\n              {unread}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MessageItem: React.FC<{\r\n  message: Message;\r\n  isOwnMessage: boolean; // True if the current user sent the message\r\n  showAvatar?: boolean;\r\n  senderProfile?: UserProfile;\r\n}> = ({ message, isOwnMessage, showAvatar = true, senderProfile }) => {\r\n  const avatarContent = senderProfile ? (\r\n      <>\r\n          {/* Removed avatar_url reference */}\r\n          {/* <AvatarImage src={senderProfile.avatar_url ?? undefined} alt={senderProfile.username ?? 'User'} /> */}\r\n          <AvatarFallback>{senderProfile.username?.substring(0, 2).toUpperCase() ?? '??'}</AvatarFallback>\r\n      </>\r\n  ) : (\r\n      <div className=\"h-full w-full rounded-full bg-gray-300 dark:bg-gray-700 animate-pulse\"></div>\r\n  );\r\n\r\n  return (\r\n    // Reverse the justify-start/justify-end based on isOwnMessage\r\n    <div className={`flex ${isOwnMessage ? 'justify-end' : 'justify-start'} mb-4`}>\r\n      {/* Show avatar on the LEFT for RECEIVED messages */}\r\n      {!isOwnMessage && showAvatar && (\r\n        <Avatar className=\"h-8 w-8 mr-2 mt-1 flex-shrink-0\">\r\n          {avatarContent}\r\n        </Avatar>\r\n      )}\r\n      <div className={`max-w-[70%]`}>\r\n        <div\r\n          className={cn(\r\n            \"px-4 py-2 rounded-2xl text-sm break-words\",\r\n            isOwnMessage\r\n              // Sender (Own Message) - Right side, different corner rounded\r\n              ? \"bg-blue-500 text-white rounded-bl-none\"\r\n              // Receiver (Other's Message) - Left side, different corner rounded\r\n              : \"bg-gray-200 dark:bg-gray-800 text-gray-900 dark:text-gray-100 rounded-br-none\"\r\n          )}\r\n        >\r\n          {message.content}\r\n        </div>\r\n        {/* Timestamp alignment matches message alignment */}\r\n        <div className={`flex text-xs text-gray-500 mt-1 ${isOwnMessage ? 'justify-end' : 'justify-start'}`}>\r\n          <span>{formatMessageTime(message.created_at)}</span>\r\n          {/* Read status logic can be added later */}\r\n        </div>\r\n      </div>\r\n      {/* Show avatar on the RIGHT for SENT messages */}\r\n      {isOwnMessage && showAvatar && (\r\n        <Avatar className=\"h-8 w-8 ml-2 mt-1 flex-shrink-0\">\r\n          {avatarContent}\r\n        </Avatar>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// --- MessageComposer ---\r\nconst MessageComposer: React.FC<{\r\n  onSendMessage: (content: string) => void;\r\n  onTypingChange: (isTyping: boolean, currentMessage: string) => void; // Add prop to report typing changes\r\n  disabled?: boolean;\r\n}> = ({ onSendMessage, onTypingChange, disabled = false }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const emojiPickerRef = useRef<HTMLDivElement>(null);\r\n  const typingTimeoutRef = useRef<NodeJS.Timeout | null>(null); // Ref for typing timeout\r\n\r\n  // Effect for handling clicks outside the emoji picker\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (emojiPickerRef.current && event.target instanceof Node && !emojiPickerRef.current.contains(event.target)) {\r\n        setShowEmojiPicker(false);\r\n      }\r\n    };\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => document.removeEventListener('mousedown', handleClickOutside);\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  // Debounce typing notification\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const currentMessage = e.target.value;\r\n    setMessage(currentMessage);\r\n\r\n    // Clear existing timeout\r\n    if (typingTimeoutRef.current) {\r\n      clearTimeout(typingTimeoutRef.current);\r\n    }\r\n\r\n    // If typing, notify immediately\r\n    if (currentMessage.trim()) {\r\n      onTypingChange(true, currentMessage); // Notify started typing\r\n    } else {\r\n      // If input cleared, notify immediately stopped typing\r\n      onTypingChange(false, currentMessage);\r\n    }\r\n  };\r\n\r\n  // Removed redundant useEffect for typingTimeoutRef cleanup\r\n\r\n  const handleSendMessage = () => {\r\n    if (message.trim() && !disabled) {\r\n      onSendMessage(message); // Parent handles sending\r\n      setMessage('');\r\n      setShowEmojiPicker(false);\r\n      // Ensure typing status is set to false on send\r\n      if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current); // Clear any lingering timeout just in case\r\n      onTypingChange(false, ''); // Explicitly notify stopped typing on send\r\n    }\r\n  };\r\n\r\n\r\n  const handleKeyDown = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const handleEmojiClick = (emojiData: EmojiClickData) => {\r\n    setMessage(prev => prev + emojiData.emoji);\r\n    inputRef.current?.focus();\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-3 border-t border-gray-200 dark:border-gray-700\">\r\n      <div className=\"relative flex items-center\">\r\n        <div className=\"relative\">\r\n          <Button variant=\"ghost\" size=\"icon\" type=\"button\" onClick={() => setShowEmojiPicker(!showEmojiPicker)} className=\"text-gray-500\" disabled={disabled}>\r\n            <FaSmile className=\"h-5 w-5\" />\r\n          </Button>\r\n          {showEmojiPicker && (\r\n            <div className=\"absolute bottom-12 left-0 z-10\" ref={emojiPickerRef}>\r\n              <EmojiPicker onEmojiClick={handleEmojiClick} theme={Theme.AUTO} width={320} height={400} />\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* Use the new handleInputChange */}\r\n        <Input ref={inputRef} className=\"flex-1 mx-2\" placeholder={disabled ? \"Select a conversation\" : \"Type a message...\"} value={message} onChange={handleInputChange} onKeyDown={handleKeyDown} disabled={disabled} />\r\n        <Button variant=\"ghost\" size=\"icon\" type=\"button\" onClick={handleSendMessage} disabled={!message.trim() || disabled} className={`text-blue-500 ${(!message.trim() || disabled) ? 'opacity-50 cursor-not-allowed' : ''}`}>\r\n          <FaPaperPlane className=\"h-5 w-5\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// --- Main Component ---\r\nexport default function MessagesPage() {\r\n  // --- Hooks ---\r\n  const { user, loading: authLoading } = useAuth();\r\n  const searchParams = useSearchParams();\r\n  const [selectedConversationId, setSelectedConversationId] = useState<string | null>(null);\r\n  const [conversations, setConversations] = useState<Conversation[]>([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [mobileView, setMobileView] = useState<'list' | 'chat'>('list');\r\n  const [loadingConversations, setLoadingConversations] = useState(true); // Start true for initial load\r\n  const [loadingMessages, setLoadingMessages] = useState(false);\r\n  const [participantProfiles, setParticipantProfiles] = useState<{ [userId: string]: UserProfile }>({});\r\n  const [targetUserId, setTargetUserId] = useState<string | null>(null); // Store userId from URL for potential new convo\r\n  const [targetUserProfile, setTargetUserProfile] = useState<UserProfile | null>(null); // Store profile of target user\r\n  const [isCreatingConversation, setIsCreatingConversation] = useState(false);\r\n  const [isOtherUserTyping, setIsOtherUserTyping] = useState(false); // State for typing indicator\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n  const conversationChannelRef = useRef<RealtimeChannel | null>(null);\r\n  const messageChannelRef = useRef<RealtimeChannel | null>(null);\r\n  const typingTimeoutRef = useRef<NodeJS.Timeout | null>(null); // Ref for local user typing timeout broadcast\r\n  const conversationsRef = useRef(conversations); // Ref to hold latest conversations state\r\n\r\n  // Define currentUserId based on user, outside the useMemo\r\n  const currentUserId = user?.id ?? null;\r\n\r\n  // Update ref whenever conversations state changes\r\n  useEffect(() => {\r\n    conversationsRef.current = conversations;\r\n  }, [conversations]);\r\n\r\n  // --- Helper: Fetch User Profile (Memoized) ---\r\n  const fetchUserProfile = useCallback(async (userId: string): Promise<UserProfile | null> => {\r\n    if (!userId) {\r\n      console.warn(\"fetchUserProfile called with invalid userId\");\r\n      return null;\r\n    }\r\n    if (participantProfiles[userId]) {\r\n      return participantProfiles[userId];\r\n    }\r\n    try {\r\n      // Select only fields known to exist in the UserProfile type based on database.types.ts\r\n      // If avatar_url *does* exist in your profiles table and types, add it back here.\r\n      const { data, error } = await supabase\r\n        .from('profiles')\r\n        .select('id, username') // Removed avatar_url from select\r\n        .eq('id', userId)\r\n        .maybeSingle();\r\n\r\n      if (error) throw error;\r\n\r\n      if (data) {\r\n        // Cast to UserProfile, assuming the selected fields match the type\r\n        const profileData = data as UserProfile;\r\n        setParticipantProfiles(prev => ({ ...prev, [userId]: profileData }));\r\n        return profileData;\r\n      } else {\r\n         // This block executes if data is null (user not found)\r\n         console.warn(`User profile not found for ID: ${userId}`);\r\n         // Create and cache the minimal profile if user not found\r\n         // Ensure this matches the UserProfile type structure\r\n         const minimalProfile = {\r\n             id: userId,\r\n             username: 'Unknown User',\r\n             // Initialize other required fields from UserProfile type with default/null values\r\n             // Example: bio: null, created_at: new Date().toISOString(), etc.\r\n             // This needs to match your actual UserProfile type definition precisely.\r\n             // For now, assuming id and username are the core requirements.\r\n         } as UserProfile; // Cast to UserProfile\r\n         setParticipantProfiles(prev => ({ ...prev, [userId]: minimalProfile }));\r\n         return minimalProfile; // Return the minimal profile\r\n      }\r\n    } catch (error: unknown) {\r\n      const message = error instanceof Error ? error.message : String(error);\r\n      console.error(`Error fetching user profile for ${userId}:`, error);\r\n      return null;\r\n    }\r\n  }, [participantProfiles]); // Dependency: participantProfiles cache\r\n\r\n  // --- Helper: Fetch Profiles for a Conversation ---\r\n  const fetchConversationProfiles = useCallback(async (conversation: Conversation): Promise<Conversation> => {\r\n    const participantIds = conversation.participant_uids || [];\r\n    const profilesToFetch = participantIds.filter(id => !participantProfiles[id]);\r\n\r\n    if (profilesToFetch.length > 0) {\r\n      await Promise.all(profilesToFetch.map(fetchUserProfile));\r\n    }\r\n\r\n    // Return conversation with potentially updated participantDetails from the state cache\r\n    // This ensures we use the latest profiles after fetching\r\n    const updatedDetails = participantIds.reduce((acc, id) => {\r\n      if (participantProfiles[id]) {\r\n        acc[id] = participantProfiles[id];\r\n      }\r\n      return acc;\r\n    }, {} as { [userId: string]: UserProfile });\r\n\r\n    return { ...conversation, participantDetails: updatedDetails };\r\n  }, [fetchUserProfile, participantProfiles]);\r\n\r\n\r\n  // --- Effects ---\r\n\r\n  // Fetch Current User Profile\r\n  useEffect(() => {\r\n    if (user?.id && !participantProfiles[user.id]) {\r\n      fetchUserProfile(user.id);\r\n    }\r\n  }, [user, participantProfiles, fetchUserProfile]); // Added fetchUserProfile\r\n\r\n  // Handle URL parameters (targetUserId for new conversation)\r\n  useEffect(() => {\r\n    const userIdFromUrl = searchParams.get('userId');\r\n    const conversationIdFromUrl = searchParams.get('conversationId'); // Also check for direct convo link\r\n\r\n    if (userIdFromUrl && userIdFromUrl !== user?.id) {\r\n        setTargetUserId(userIdFromUrl);\r\n        setSelectedConversationId(null); // Ensure no conversation is selected if targeting user\r\n        setTargetUserProfile(null); // Reset target profile until fetched\r\n        setMessages([]);\r\n        if (window.innerWidth < 768) setMobileView('chat');\r\n    } else if (conversationIdFromUrl) {\r\n        // If conversationId is in URL, we'll select it once conversations load\r\n        setTargetUserId(null);\r\n        setTargetUserProfile(null);\r\n        // Don't setSelectedConversationId here yet, wait for initial load/subscription\r\n    } else {\r\n        setTargetUserId(null);\r\n        setTargetUserProfile(null);\r\n    }\r\n  }, [searchParams, user?.id]); // Rerun when searchParams or user changes\r\n\r\n  // Fetch Target User Profile if targetUserId is set\r\n  useEffect(() => {\r\n    if (targetUserId && !participantProfiles[targetUserId]) {\r\n      fetchUserProfile(targetUserId).then(profile => {\r\n        if (profile) {\r\n          setTargetUserProfile(profile);\r\n        } else {\r\n          toast.error(`Could not load profile for user ID: ${targetUserId}`);\r\n          setTargetUserId(null); // Reset if profile fetch fails\r\n        }\r\n      });\r\n    } else if (targetUserId && participantProfiles[targetUserId]) {\r\n      // If profile is already cached\r\n      setTargetUserProfile(participantProfiles[targetUserId]);\r\n    }\r\n  }, [targetUserId, fetchUserProfile, participantProfiles]);\r\n\r\n\r\n  // Initial Fetch and Realtime Subscription for Conversations\r\n  useEffect(() => {\r\n    if (!user?.id) {\r\n      setConversations([]);\r\n      setLoadingConversations(false);\r\n      return () => { // Cleanup on user logout\r\n          if (conversationChannelRef.current) {\r\n              supabase.removeChannel(conversationChannelRef.current);\r\n              conversationChannelRef.current = null;\r\n          }\r\n      };\r\n    }\r\n\r\n    setLoadingConversations(true);\r\n\r\n    // 1. Initial Fetch\r\n    const initialFetch = async () => {\r\n      try {\r\n        const { data: convData, error: convError } = await supabase\r\n          .from('conversations')\r\n          .select('*')\r\n          .contains('participant_uids', [user.id])\r\n          .order('updated_at', { ascending: false });\r\n\r\n        if (convError) throw convError;\r\n\r\n        if (convData) {\r\n          // Fetch profiles for all participants initially\r\n          const conversationsWithProfiles = await Promise.all(\r\n            convData.map(conv => fetchConversationProfiles(conv as Conversation))\r\n          );\r\n          setConversations(conversationsWithProfiles);\r\n\r\n          // Handle pre-selection from URL *after* initial load\r\n          const conversationIdFromUrl = searchParams.get('conversationId');\r\n          const userIdFromUrl = searchParams.get('userId');\r\n\r\n          if (conversationIdFromUrl) {\r\n            const foundConv = conversationsWithProfiles.find(c => c.id === conversationIdFromUrl);\r\n            if (foundConv) {\r\n                setSelectedConversationId(foundConv.id);\r\n                setTargetUserId(null); // Clear target user if selecting existing convo\r\n                setTargetUserProfile(null);\r\n                 if (window.innerWidth < 768) setMobileView('chat');\r\n            } else {\r\n                 console.warn(`Conversation ID ${conversationIdFromUrl} from URL not found.`);\r\n            }\r\n          } else if (userIdFromUrl && userIdFromUrl !== user.id) {\r\n             // Check if an existing conversation exists for this target user\r\n             const existingConv = conversationsWithProfiles.find(c => c.participant_uids.includes(userIdFromUrl));\r\n             if (existingConv) {\r\n                 setSelectedConversationId(existingConv.id);\r\n                 setTargetUserId(null); // Clear target user as we found existing convo\r\n                 setTargetUserProfile(null);\r\n                 if (window.innerWidth < 768) setMobileView('chat');\r\n             } else {\r\n                 // Keep targetUserId set, targetUserProfile should be fetched by its own effect\r\n                 setSelectedConversationId(null);\r\n                 if (window.innerWidth < 768) setMobileView('chat');\r\n             }\r\n          }\r\n\r\n        } else {\r\n          setConversations([]);\r\n        }\r\n      } catch (error: unknown) {\r\n        const message = error instanceof Error ? error.message : String(error);\r\n        console.error(\"Error fetching initial conversations:\", error);\r\n        toast.error(\"Failed to load conversations.\");\r\n      } finally {\r\n        setLoadingConversations(false);\r\n      }\r\n    };\r\n\r\n    initialFetch();\r\n\r\n    // 2. Realtime Subscription\r\n    const handleConversationUpdate = async (payload: RealtimePostgresChangesPayload<Conversation>) => {\r\n      console.log('Conversation change received:', payload);\r\n      const newConv = payload.new; // Type is inferred\r\n      const oldConv = payload.old; // Type is inferred\r\n\r\n      // Fetch profiles for the affected conversation if it's an INSERT or UPDATE\r\n      let convWithProfiles: Conversation | null = null; // Initialize as null\r\n      // Ensure newConv exists and is a valid Conversation object before fetching profiles\r\n      if (payload.eventType !== 'DELETE' && newConv && 'id' in newConv) {\r\n          convWithProfiles = await fetchConversationProfiles(newConv);\r\n      }\r\n\r\n\r\n      setConversations(currentConversations => {\r\n        let updatedConversations = [...currentConversations];\r\n        // Use type guard for accessing id\r\n        const convId = (newConv && 'id' in newConv) ? newConv.id : (oldConv && 'id' in oldConv) ? oldConv.id : null;\r\n        const existingIndex = convId ? updatedConversations.findIndex(c => c.id === convId) : -1;\r\n\r\n        if (payload.eventType === 'INSERT' && convWithProfiles) {\r\n          // Ensure convWithProfiles is not null and index is valid\r\n          if (existingIndex === -1) {\r\n            updatedConversations.push(convWithProfiles);\r\n          } else {\r\n             // Already exists? Update it just in case (ensure convWithProfiles is not null)\r\n             if (convWithProfiles) updatedConversations[existingIndex] = convWithProfiles;\r\n          }\r\n        } else if (payload.eventType === 'UPDATE' && convWithProfiles) {\r\n          // Ensure convWithProfiles is not null and index is valid\r\n          if (existingIndex !== -1 && convWithProfiles) {\r\n            updatedConversations[existingIndex] = convWithProfiles;\r\n          } else if (convWithProfiles) { // Only push if convWithProfiles is valid\r\n            // Received update for a convo not in list? Add it.\r\n            updatedConversations.push(convWithProfiles);\r\n          }\r\n        } else if (payload.eventType === 'DELETE' && oldConv && 'id' in oldConv) {\r\n          // Use the ID from the 'old' payload for delete, ensure oldConv.id exists\r\n          const deleteId = oldConv.id;\r\n          updatedConversations = updatedConversations.filter(c => c.id !== deleteId);\r\n          // If the deleted conversation was selected, deselect it\r\n          if (selectedConversationId === deleteId) {\r\n              setSelectedConversationId(null);\r\n              setMessages([]); // Clear messages\r\n          }\r\n        }\r\n\r\n        // Re-sort conversations by updated_at timestamp\r\n        updatedConversations.sort((a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime());\r\n        return updatedConversations;\r\n      });\r\n    };\r\n\r\n    // Ensure existing channel is removed before creating a new one\r\n    if (conversationChannelRef.current) {\r\n        supabase.removeChannel(conversationChannelRef.current);\r\n    }\r\n\r\n    const channel = supabase.channel(`conversations:${user.id}`)\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: '*', // Listen to INSERT, UPDATE, DELETE\r\n          schema: 'public',\r\n          table: 'conversations',\r\n          filter: `participant_uids=cs.{\"${user.id}\"}` // Filter for conversations containing the user's ID\r\n        },\r\n        handleConversationUpdate\r\n      )\r\n      .subscribe((status, err) => {\r\n        if (status === 'SUBSCRIBED') {\r\n          console.log('Subscribed to conversations channel');\r\n        }\r\n        if (status === 'CHANNEL_ERROR' || status === 'TIMED_OUT') {\r\n          console.error('Conversation subscription error:', status, err);\r\n          toast.error('Realtime connection issue. Try refreshing.');\r\n          // Optional: Implement retry logic here\r\n        }\r\n      });\r\n\r\n    conversationChannelRef.current = channel;\r\n\r\n    // Cleanup function\r\n    return () => {\r\n      if (conversationChannelRef.current) {\r\n        supabase.removeChannel(conversationChannelRef.current);\r\n        conversationChannelRef.current = null;\r\n        console.log('Unsubscribed from conversations channel');\r\n      }\r\n    };\r\n\r\n  }, [user?.id, fetchConversationProfiles, searchParams]); // Dependencies\r\n\r\n  // Memoize selected conversation object for stability\r\n  const selectedConversation = useMemo(() => {\r\n      return conversations.find(c => c.id === selectedConversationId) ?? null;\r\n  }, [selectedConversationId, conversations]);\r\n\r\n  // Initial Fetch, Realtime Subscription for Messages, and Presence\r\n  useEffect(() => {\r\n    // Clean up previous message/presence subscription if selected conversation changes\r\n    if (messageChannelRef.current) {\r\n      supabase.removeChannel(messageChannelRef.current)\r\n        .then(() => console.log('Unsubscribed from previous messages/presence channel'))\r\n        .catch(err => console.error(\"Error unsubscribing:\", err));\r\n      messageChannelRef.current = null;\r\n    }\r\n    setIsOtherUserTyping(false); // Reset typing indicator on conversation change\r\n\r\n    if (!selectedConversationId || !user?.id) {\r\n      setMessages([]);\r\n      setLoadingMessages(false);\r\n      return; // No cleanup needed if no channel was created\r\n    }\r\n\r\n    setLoadingMessages(true);\r\n\r\n    // 1. Initial Fetch for selected conversation\r\n    const initialFetchMessages = async () => {\r\n      try {\r\n        const { data: msgData, error: msgError } = await supabase\r\n          .from('messages')\r\n          .select('*')\r\n          .eq('conversation_id', selectedConversationId)\r\n          .order('created_at', { ascending: true })\r\n          .limit(100); // Load more initially? Or implement pagination later\r\n\r\n        if (msgError) throw msgError;\r\n\r\n        if (msgData) {\r\n          // Fetch profiles for senders if not already cached\r\n          const senderUids = new Set(msgData.map(msg => msg.sender_uid));\r\n          await Promise.all(Array.from(senderUids).map(id => fetchUserProfile(id)));\r\n          setMessages(msgData as Message[]);\r\n        } else {\r\n          setMessages([]);\r\n        }\r\n      } catch (error: unknown) {\r\n        const message = error instanceof Error ? error.message : String(error);\r\n        console.error(\"Error fetching initial messages:\", error);\r\n        toast.error(\"Failed to load messages.\");\r\n      } finally {\r\n        setLoadingMessages(false);\r\n      }\r\n    };\r\n\r\n    initialFetchMessages();\r\n\r\n    // 2. Realtime Subscription for new messages in this conversation\r\n    const handleNewMessage = async (payload: RealtimePostgresChangesPayload<Message>) => {\r\n        console.log('Message change received:', payload);\r\n        if (payload.eventType === 'INSERT') {\r\n            const newMessage = payload.new; // Type is inferred\r\n            // Ensure the sender's profile is fetched if not already cached\r\n            // Check if newMessage is not null before accessing properties\r\n            if (newMessage) {\r\n                await fetchUserProfile(newMessage.sender_uid);\r\n                // Add message only if it doesn't already exist (prevents duplicates from initial fetch + subscription)\r\n                console.log(\"--- handleNewMessage: Received new message data ---\", newMessage); // Log received message\r\n                setMessages(currentMessages => {\r\n                    if (!currentMessages.some(msg => msg.id === newMessage.id)) {\r\n                        console.log(\"--- handleNewMessage: Adding new message to state ---\");\r\n                        return [...currentMessages, newMessage];\r\n                    }\r\n                    console.log(\"--- handleNewMessage: Message already exists in state ---\");\r\n                    return currentMessages; // Already exists, no change\r\n                });\r\n            } else {\r\n                 console.warn(\"--- handleNewMessage: Received INSERT event with null payload.new ---\");\r\n            }\r\n        } else {\r\n            console.log(\"--- handleNewMessage: Received non-INSERT event ---\", payload.eventType);\r\n        }\r\n        // Handle UPDATE/DELETE if needed\r\n    };\r\n\r\n    // --- Presence Handling ---\r\n    const handlePresenceSync = () => {\r\n        console.log(\"--- handlePresenceSync: Fired ---\");\r\n        // Access latest conversations state via ref inside the handler\r\n        const currentSelectedConv = conversationsRef.current.find(c => c.id === selectedConversationId);\r\n        if (!messageChannelRef.current || !user?.id || !currentSelectedConv) {\r\n            console.log(\"--- handlePresenceSync: Aborting (no channel, user, or selected convo) ---\");\r\n            return;\r\n        }\r\n\r\n        const presenceState = messageChannelRef.current.presenceState();\r\n        console.log(\"--- handlePresenceSync: Current presence state ---\", presenceState);\r\n        const otherUserId = getOtherParticipantId(currentSelectedConv, user.id);\r\n\r\n        if (!otherUserId) {\r\n            setIsOtherUserTyping(false);\r\n            return;\r\n        }\r\n\r\n        const otherUserPresence = presenceState[otherUserId];\r\n        // Check if the other user's presence state exists and has a 'typing: true' field\r\n        // Use the defined PresencePayload interface\r\n        const isTyping = otherUserPresence?.some((p: PresencePayload) => p.typing === true) ?? false;\r\n        console.log(`--- handlePresenceSync: Other user (${otherUserId}) is typing: ${isTyping} ---`);\r\n        setIsOtherUserTyping(isTyping);\r\n    };\r\n\r\n    // Channel name includes 'presence' for clarity, though not strictly required\r\n    const channel = supabase.channel(`messages-presence:${selectedConversationId}`, {\r\n        config: {\r\n            presence: {\r\n                key: user.id, // Unique key for this client's presence\r\n            },\r\n        },\r\n    })\r\n      .on(\r\n        'postgres_changes',\r\n        {\r\n          event: 'INSERT', // Primarily listen for new messages\r\n          schema: 'public',\r\n          table: 'messages',\r\n          filter: `conversation_id=eq.${selectedConversationId}`\r\n        },\r\n        handleNewMessage\r\n      )\r\n      // Add presence listeners\r\n      .on('presence', { event: 'sync' }, () => {\r\n          console.log(\"--- Presence Event: sync ---\");\r\n          handlePresenceSync();\r\n      })\r\n      .on('presence', { event: 'join' }, ({ key, newPresences }) => {\r\n        console.log('--- Presence Event: join ---', { key, newPresences });\r\n        // Optional: Trigger sync or directly update typing status if needed\r\n        handlePresenceSync(); // Re-evaluate typing status on join\r\n      })\r\n      .on('presence', { event: 'leave' }, ({ key, leftPresences }) => {\r\n        console.log('--- Presence Event: leave ---', { key, leftPresences });\r\n        // If the user who left was the other participant, ensure their typing status is false\r\n        // Access latest conversations state via ref inside the handler\r\n        const currentSelectedConv = conversationsRef.current.find(c => c.id === selectedConversationId);\r\n        const otherUserId = currentSelectedConv ? getOtherParticipantId(currentSelectedConv, user.id) : null;\r\n\r\n        if (key === otherUserId) {\r\n            setIsOtherUserTyping(false);\r\n        }\r\n        // handlePresenceSync(); // Sync might be sufficient here, avoid redundant calls if sync handles it\r\n      })\r\n      .subscribe(async (status, err) => { // Make async to allow await for track\r\n        if (status === 'SUBSCRIBED') {\r\n          console.log(`Subscribed to messages/presence channel for conversation ${selectedConversationId}`);\r\n          // Track initial state (not typing) when subscribed\r\n          try {\r\n            const trackStatus = await channel.track({ typing: false });\r\n            console.log('--- Subscription: Initial presence track status ---', trackStatus);\r\n          } catch (trackError) {\r\n            console.error(\"--- Subscription: Error tracking initial presence ---\", trackError);\r\n          }\r\n        } else {\r\n             console.log(`--- Subscription: Status changed to ${status} ---`);\r\n        }\r\n         if (err) {\r\n             console.error('--- Subscription: Error ---', status, err);\r\n             toast.error(`Realtime connection error: ${err.message}`);\r\n         } else if (status === 'CHANNEL_ERROR' || status === 'TIMED_OUT') {\r\n          console.error('--- Subscription: Channel Error/Timeout ---', status);\r\n          toast.error('Realtime connection issue. Try refreshing.');\r\n        } else if (status === 'CLOSED') {\r\n            console.log('--- Subscription: Channel closed ---');\r\n        }\r\n      });\r\n\r\n    messageChannelRef.current = channel;\r\n\r\n    // Cleanup on component unmount or when selectedConversationId changes\r\n    return () => {\r\n        if (messageChannelRef.current) {\r\n            // Untrack presence before removing channel\r\n            messageChannelRef.current.untrack()\r\n                .then(() => supabase.removeChannel(messageChannelRef.current!)) // Use non-null assertion as we check above\r\n                .then(() => console.log('Untracked and unsubscribed from messages/presence channel'))\r\n                .catch(err => console.error(\"Error unsubscribing/untracking:\", err));\r\n            messageChannelRef.current = null;\r\n        }\r\n    };\r\n    // Only depend on stable values like IDs. Access dynamic state via refs or functional updates.\r\n  }, [selectedConversationId, user?.id, fetchUserProfile]); // Add selectedConversationId to deps\r\n\r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    // Add a small delay to allow the DOM to update after new message arrives\r\n    const timer = setTimeout(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n    }, 100);\r\n    return () => clearTimeout(timer);\r\n  }, [messages]);\r\n\r\n  // Handle window resize for mobile view\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth >= 768) {\r\n        setMobileView('list'); // Always show list on desktop\r\n      }\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n    handleResize(); // Initial check\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  // --- Derived State & Event Handlers ---\r\n\r\n  // Determine the 'other user' for the header based on selectedConversation or targetUserProfile\r\n  // Moved this useMemo hook before the early returns to fix conditional hook call error\r\n  const otherUserForHeader = useMemo(() => {\r\n      // Add null check for user before accessing user.id\r\n      if (selectedConversation && user) {\r\n          const otherUserId = getOtherParticipantId(selectedConversation, user.id);\r\n          return otherUserId ? participantProfiles[otherUserId] : null;\r\n      } else if (targetUserProfile) {\r\n          return targetUserProfile;\r\n      }\r\n      return null;\r\n  }, [selectedConversation, targetUserProfile, user, participantProfiles]); // Added user to deps\r\n\r\n  const filteredConversations = useMemo(() => {\r\n      // Now check the currentUserId variable derived from user\r\n      if (!currentUserId) {\r\n          return [];\r\n      }\r\n      return conversations.filter(conversation => {\r\n          // Access the currentUserId variable (guaranteed string here)\r\n          const otherUserId = getOtherParticipantId(conversation, currentUserId);\r\n          if (!otherUserId) return false;\r\n          // Use cached profiles directly\r\n          const otherUser = participantProfiles[otherUserId];\r\n          // If profile not loaded yet, maybe show loading or filter out? For now, filter out.\r\n          if (!otherUser) return false;\r\n          return otherUser.username?.toLowerCase().includes(searchTerm.toLowerCase());\r\n      });\r\n      // Depend on currentUserId instead of the user object\r\n  }, [conversations, currentUserId, participantProfiles, searchTerm]);\r\n\r\n\r\n  // --- Create Conversation and Send First Message ---\r\n  // Accept senderId as an argument\r\n  const createConversationAndSendMessage = async (recipientId: string, content: string, senderId: string) => {\r\n    // No need for currentUserId check here, senderId is passed explicitly\r\n    // Check recipient validity using the passed senderId\r\n    if (!recipientId || senderId === recipientId) {\r\n      toast.error(\"Invalid recipient for conversation.\");\r\n      return;\r\n    }\r\n    if (isCreatingConversation) return;\r\n\r\n    setIsCreatingConversation(true);\r\n    const trimmedContent = content.trim();\r\n    if (!trimmedContent) {\r\n        setIsCreatingConversation(false);\r\n        return;\r\n    }\r\n\r\n    try {\r\n        // Ensure recipient profile exists (sender profile fetched on load)\r\n        const recipientProfile = await fetchUserProfile(recipientId);\r\n        if (!recipientProfile || recipientProfile.username === 'Unknown User') {\r\n            throw new Error(\"Recipient profile not found or incomplete.\");\r\n        }\r\n\r\n        // Check if conversation already exists between these two users\r\n        const { data: existingConv, error: checkError } = await supabase\r\n            .from('conversations')\r\n            .select('id')\r\n            .contains('participant_uids', [senderId, recipientId]) // Use passed senderId\r\n            .limit(1)\r\n            .maybeSingle();\r\n\r\n        if (checkError) throw checkError;\r\n\r\n        if (existingConv) {\r\n            // Conversation already exists, just select it and send the message\r\n            console.log(\"Existing conversation found:\", existingConv.id);\r\n            setSelectedConversationId(existingConv.id); // Select the existing conversation\r\n            setTargetUserId(null); // Clear target user state\r\n            setTargetUserProfile(null);\r\n            if (window.innerWidth < 768) setMobileView('chat');\r\n            // Redundant check removed - currentUserId check at function start is sufficient\r\n            // Now send the message to the existing conversation\r\n            await handleSendMessage(trimmedContent, senderId, existingConv.id); // Pass content, senderId, and existing ID\r\n            toast.success(\"Existing conversation selected.\"); // Use toast.success\r\n\r\n        } else {\r\n            // Create new conversation\r\n            console.log(\"Creating new conversation...\");\r\n            const { data: newConversationData, error: createConvError } = await supabase\r\n                .from('conversations')\r\n                .insert({\r\n                    participant_uids: [senderId, recipientId], // Use passed senderId\r\n                    last_message_content: trimmedContent, // Initialize metadata\r\n                    last_message_sender_uid: senderId, // Use passed senderId\r\n                    last_message_created_at: new Date().toISOString(),\r\n                    updated_at: new Date().toISOString(),\r\n                })\r\n                .select()\r\n                .single();\r\n\r\n            if (createConvError || !newConversationData) {\r\n                throw createConvError || new Error(\"Failed to create conversation.\");\r\n            }\r\n\r\n            const newConversationId = newConversationData.id;\r\n            console.log(\"New conversation created:\", newConversationId);\r\n\r\n            // Insert the first message\r\n            const { error: insertMsgError } = await supabase\r\n                .from('messages')\r\n                .insert({\r\n                    conversation_id: newConversationId,\r\n                    sender_uid: senderId, // Use passed senderId\r\n                    content: trimmedContent,\r\n                });\r\n\r\n            if (insertMsgError) {\r\n                // Attempt to clean up the created conversation if message fails? Or just log error.\r\n                console.error(\"Error inserting first message, conversation created but message failed:\", insertMsgError);\r\n                throw insertMsgError;\r\n            }\r\n\r\n            // Realtime subscription should pick up the new conversation and message.\r\n            // We can optimistically select the new conversation ID here.\r\n            setSelectedConversationId(newConversationId);\r\n            setTargetUserId(null); // Clear target user state\r\n            setTargetUserProfile(null);\r\n            if (window.innerWidth < 768) setMobileView('chat');\r\n\r\n            toast.success(\"Conversation started!\");\r\n        }\r\n\r\n    } catch (error: unknown) {\r\n        const message = error instanceof Error ? error.message : String(error);\r\n        console.error(\"Error in createConversationAndSendMessage:\", error);\r\n        toast.error(`Failed to start conversation: ${message || 'Unknown error'}`);\r\n    } finally {\r\n        setIsCreatingConversation(false);\r\n    }\r\n};\r\n\r\n\r\n  // --- Send Message (Handles Existing and New Conversations) ---\r\n  // Updated to optionally accept conversationId and explicitly require senderId\r\n  const handleSendMessage = async (content: string, senderId: string, convId?: string) => {\r\n    // No need for user null check here as senderId is passed explicitly\r\n    const trimmedContent = content.trim();\r\n    const conversationIdToSend = convId ?? selectedConversationId; // Use provided ID or selected one\r\n\r\n    // Check for required parameters\r\n    if (!trimmedContent || !senderId || !conversationIdToSend) {\r\n        console.error(\"Cannot send message: Missing content, sender ID, or conversation ID.\", { trimmedContent, senderId, conversationIdToSend });\r\n        toast.error(\"Cannot send message. Please select a conversation and ensure you are logged in.\");\r\n        return;\r\n    }\r\n\r\n    // Use the passed senderId\r\n    const newMessageData = {\r\n      conversation_id: conversationIdToSend,\r\n      sender_uid: senderId,\r\n      content: trimmedContent,\r\n    };\r\n\r\n    try {\r\n      // 1. Insert the new message\r\n      const { error: insertError } = await supabase\r\n        .from('messages')\r\n        .insert(newMessageData); // No need to select here\r\n\r\n      if (insertError) throw insertError;\r\n\r\n      // 2. Update the conversation's metadata (fire and forget is okay here)\r\n      //    Realtime listener on conversations table will update the UI list order.\r\n      supabase\r\n        .from('conversations')\r\n        .update({\r\n          last_message_content: trimmedContent,\r\n          last_message_sender_uid: senderId, // Use passed senderId\r\n          last_message_created_at: new Date().toISOString(),\r\n          updated_at: new Date().toISOString(),\r\n        })\r\n        .eq('id', conversationIdToSend)\r\n        .then(({ error: updateConvError }) => {\r\n          if (updateConvError) {\r\n            // Log warning, but don't block user\r\n            console.warn(\"Message sent, but failed to update conversation metadata:\", updateConvError);\r\n          }\r\n        });\r\n\r\n        // No optimistic UI update needed here - Realtime subscription will handle it.\r\n\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      toast.error(\"Failed to send message.\");\r\n      // No UI revert needed as we removed optimistic update\r\n    } finally {\r\n        // Ensure typing status is set to false after sending\r\n        if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\r\n        handleTypingBroadcast(false); // Broadcast stopped typing\r\n    }\r\n  };\r\n\r\n  // --- Handle Typing Broadcast ---\r\n  const handleTypingBroadcast = (isTyping: boolean) => {\r\n    // Separate null checks\r\n    if (!messageChannelRef.current || !user) return;\r\n    const userId = user.id; // Store id after check\r\n\r\n    // Clear existing timeout if we're about to broadcast 'false'\r\n    // This timeout is now only set below if isTyping is true\r\n    if (!isTyping && typingTimeoutRef.current) {\r\n        clearTimeout(typingTimeoutRef.current);\r\n        typingTimeoutRef.current = null;\r\n    }\r\n\r\n    // Broadcast the current typing status\r\n    messageChannelRef.current.track({ typing: isTyping })\r\n        .then(status => {\r\n            if (status !== 'ok') console.warn('Presence track failed:', status);\r\n        })\r\n        .catch(err => console.error('Error tracking presence:', err));\r\n\r\n    // If starting to type, set a timeout to automatically broadcast 'false'\r\n    // ONLY if we are broadcasting 'true'. Remove timeout if broadcasting 'false'.\r\n    if (isTyping) {\r\n        // Clear any previous timeout before setting a new one\r\n        if (typingTimeoutRef.current) {\r\n            clearTimeout(typingTimeoutRef.current);\r\n        }\r\n        typingTimeoutRef.current = setTimeout(() => {\r\n            // This timeout is now removed in MessageComposer,\r\n            // but we keep the ref clearing logic here for safety.\r\n            // The broadcast(false) is handled by MessageComposer now.\r\n            typingTimeoutRef.current = null;\r\n        }, 3000); // Keep timeout short, just in case of abrupt stops\r\n    }\r\n  };\r\n\r\n\r\n  const handleSelectConversation = (conversation: Conversation) => {\r\n    setSelectedConversationId(conversation.id);\r\n    setTargetUserId(null); // Clear target user if selecting existing convo\r\n    setTargetUserProfile(null);\r\n    setMessages([]); // Clear old messages immediately, new ones will load via effect/subscription\r\n    if (window.innerWidth < 768) {\r\n      setMobileView('chat');\r\n    }\r\n    // TODO: Implement marking conversation as read (e.g., call a Supabase function or update a 'read' status)\r\n  };\r\n\r\n  const handleBackToList = () => {\r\n    setMobileView('list');\r\n    setSelectedConversationId(null); // Deselect conversation\r\n    setTargetUserId(null); // Also clear target user\r\n    setTargetUserProfile(null);\r\n  };\r\n\r\n  // --- Render Logic ---\r\n\r\n  if (authLoading) {\r\n    return <div className=\"flex items-center justify-center h-full\"><FiLoader className=\"animate-spin h-8 w-8 text-blue-500\" /></div>;\r\n  }\r\n  if (!user) {\r\n    return <div className=\"flex items-center justify-center h-full text-center text-gray-500\">Please log in to view your messages.</div>;\r\n  }\r\n\r\n  // No need to define otherUserForHeader again, it's moved above\r\n\r\n  if (authLoading) {\r\n    return <div className=\"flex items-center justify-center h-full\"><FiLoader className=\"animate-spin h-8 w-8 text-blue-500\" /></div>;\r\n  }\r\n  if (!user) {\r\n    return <div className=\"flex items-center justify-center h-full text-center text-gray-500\">Please log in to view your messages.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-1 h-full bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 overflow-hidden\">\r\n      {/* Conversations List */}\r\n      <div className={cn(\"w-full md:w-1/3 lg:w-1/4 border-r border-gray-200 dark:border-gray-800 flex flex-col h-full\", mobileView === 'chat' && \"hidden md:flex\")}>\r\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-800 flex-shrink-0\">\r\n          <h1 className=\"text-xl font-bold mb-4 flex items-center\"><FiMessageSquare className=\"mr-2\" /> Messages</h1>\r\n          <div className=\"relative\">\r\n            <FiSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500\" />\r\n            <Input placeholder=\"Search conversations...\" className=\"pl-10\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} />\r\n          </div>\r\n        </div>\r\n        <ScrollArea className=\"flex-1\">\r\n          <div className=\"p-3\">\r\n            {loadingConversations ? (\r\n              <div className=\"flex justify-center items-center py-4\"><FiLoader className=\"animate-spin h-6 w-6 text-blue-500\" /></div>\r\n            ) : filteredConversations.length === 0 && !targetUserId ? ( // Show only if not trying to start new convo\r\n              <p className=\"text-center text-gray-500 my-4\">No conversations found</p>\r\n            ) : (\r\n              filteredConversations.map((conversation: Conversation) => ( // Added explicit type\r\n                <ConversationItem\r\n                  key={conversation.id}\r\n                  conversation={conversation}\r\n                  isSelected={selectedConversationId === conversation.id}\r\n                  onClick={() => handleSelectConversation(conversation)}\r\n                  currentUserId={currentUserId!} // Use non-null assertion on currentUserId\r\n                />\r\n              ))\r\n            )}\r\n          </div>\r\n        </ScrollArea>\r\n      </div>\r\n\r\n      {/* Chat Area */}\r\n      <div className={cn(\"flex-1 flex flex-col h-full\", mobileView === 'list' && \"hidden md:flex\")}>\r\n        {selectedConversationId || targetUserProfile ? ( // Show chat if a conversation is selected OR we are targeting a user\r\n          <>\r\n            {/* Chat Header */}\r\n            <div className=\"p-3 border-b border-gray-200 dark:border-gray-800 flex items-center flex-shrink-0\">\r\n              <Button variant=\"ghost\" size=\"icon\" className=\"mr-2 md:hidden\" onClick={handleBackToList}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fillRule=\"evenodd\" d=\"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 111.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" /></svg>\r\n              </Button>\r\n              {otherUserForHeader ? (\r\n                  <>\r\n                      <Avatar className=\"h-10 w-10\">\r\n                          {/* Removed avatar_url reference */}\r\n                          {/* <AvatarImage src={otherUserForHeader.avatar_url ?? undefined} alt={otherUserForHeader.username ?? 'User'} /> */}\r\n                          <AvatarFallback>{otherUserForHeader.username?.substring(0, 2).toUpperCase() ?? '??'}</AvatarFallback>\r\n                      </Avatar>\r\n                      <div className=\"ml-3\"><p className=\"font-medium\">{otherUserForHeader.username ?? 'Unknown User'}</p>{/* Online status can be added */}</div>\r\n                      <div className=\"ml-auto\"><Button variant=\"ghost\" size=\"icon\"><svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\" /></svg></Button></div>\r\n                  </>\r\n              ) : ( // Loading state for header\r\n                  <div className=\"flex items-center animate-pulse w-full\"><div className=\"h-10 w-10 rounded-full bg-gray-300 dark:bg-gray-700\"></div><div className=\"ml-3 space-y-1\"><div className=\"h-4 bg-gray-300 dark:bg-gray-700 rounded w-24\"></div><div className=\"h-3 bg-gray-300 dark:bg-gray-700 rounded w-16\"></div></div></div>\r\n              )}\r\n            </div>\r\n            {/* Messages */}\r\n            <ScrollArea className=\"flex-1 p-4\">\r\n              {loadingMessages && messages.length === 0 ? ( // Show loader only on initial message load\r\n                <div className=\"flex justify-center items-center h-full\"><FiLoader className=\"animate-spin h-6 w-6 text-blue-500\" /></div>\r\n              ) : messages.length === 0 ? (\r\n                 // Show slightly different message if starting a new conversation vs empty existing one\r\n                 selectedConversationId ? (\r\n                    <div className=\"flex flex-col items-center justify-center h-full text-gray-500\"><FiMessageSquare className=\"h-12 w-12 mb-2\" /><p>No messages yet</p><p className=\"text-sm\">Send a message to start the conversation</p></div>\r\n                 ) : ( // Must be targetUserProfile case\r\n                    <div className=\"flex flex-col items-center justify-center h-full text-gray-500\"><FiMessageSquare className=\"h-12 w-12 mb-2\" /><p>Start the conversation</p><p className=\"text-sm\">Send your first message to @{targetUserProfile?.username ?? 'this user'}.</p></div>\r\n                 )\r\n              ) : (\r\n                messages.map((message, index) => {\r\n                  const isOwnMessage = message.sender_uid === currentUserId; // Use currentUserId\r\n                  // Determine if avatar should be shown:\r\n                  // - For own messages: Always show (or apply sequence logic if needed later)\r\n                  // - For received messages: Show if first message or sender changed\r\n                  const showAvatar = isOwnMessage || (index === 0 || messages[index - 1]?.sender_uid !== message.sender_uid);\r\n                  // Get sender profile from cache\r\n                  const senderProfile = participantProfiles[message.sender_uid];\r\n                  return <MessageItem key={message.id} message={message} isOwnMessage={isOwnMessage} showAvatar={showAvatar} senderProfile={senderProfile} />;\r\n                })\r\n              )}\r\n            <div ref={messagesEndRef} />\r\n             {/* Typing Indicator */}\r\n             {isOtherUserTyping && otherUserForHeader && (\r\n                <div className=\"px-4 pb-2 text-sm text-gray-500 dark:text-gray-400 animate-pulse\">\r\n                    {otherUserForHeader.username ?? 'User'} is typing...\r\n                </div>\r\n             )}\r\n          </ScrollArea>\r\n          {/* Message Composer */}\r\n          <div className=\"flex-shrink-0\">\r\n            <MessageComposer\r\n              onSendMessage={(content) => {\r\n                    // Ensure currentUserId and selectedConversationId are not null before calling handleSendMessage\r\n                    if (selectedConversationId && currentUserId) {\r\n                        handleSendMessage(content, currentUserId, selectedConversationId);\r\n                    } else if (targetUserId && currentUserId) { // Also ensure currentUserId is not null here\r\n                        // Pass currentUserId to createConversationAndSendMessage\r\n                        createConversationAndSendMessage(targetUserId, content, currentUserId);\r\n                  }\r\n              }}\r\n              // Pass the typing handler\r\n              onTypingChange={(isTyping, currentMessage) => {\r\n                  // Only broadcast if there's an active channel\r\n                  if (messageChannelRef.current) {\r\n                      handleTypingBroadcast(isTyping);\r\n                  }\r\n              }}\r\n              disabled={loadingMessages || isCreatingConversation || (!selectedConversationId && !targetUserProfile)}\r\n            />\r\n          </div>\r\n          </>\r\n        ) : (\r\n          // Default view when no conversation or target user is selected\r\n          <div className=\"flex flex-col items-center justify-center h-full text-gray-500 p-4 text-center\"><FiMessageSquare className=\"h-16 w-16 mb-4\" /><p className=\"text-xl font-semibold mb-2\">Your Messages</p><p className=\"max-w-md mb-4\">Select a conversation from the list or find a user profile to start messaging.</p></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}